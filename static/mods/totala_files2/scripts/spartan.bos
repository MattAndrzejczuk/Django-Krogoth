#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lthigh, lleg, lfoot, rthigh, rleg, rfoot,
       lheel, rheel, body, mbase, mlbase, mlauncher, ml1, ml2,
       ml3, ml4, lcover, rcover, armour, larm, lhand, rarm,
       rhand, lf1, lf2, lf3, lf4, lf5, lf6, lf7,
       lf8, lf9, lf10, lf11, lf12, lf13, lf14, lf15,
       lf16, rf1, rf2, rf3, rf4, rf5, rf6, rf7,
       rf8, rf9, rf10, rf11, rf12, rf13, rf14, rf15,
       rf16;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;


HitByWeapon(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_3 = get HEALTH;
	if( Func_Var_3 <= 50 )
	{
		if( Static_Var_6 == 0 )
		{
			Static_Var_6 = 1;
			hide armour;
			explode armour type SHATTER | BITMAP1;
		}
	}
	if( Func_Var_3 <= 25 )
	{
		if( Static_Var_7 == 0 )
		{
			Static_Var_7 = 1;
			hide lcover;
			explode lcover type FALL | SMOKE | BITMAP2;
		}
	}
	if( Func_Var_3 <= 10 )
	{
		if( Static_Var_8 == 0 )
		{
			Static_Var_8 = 1;
			hide rcover;
			explode rcover type FALL | SMOKE | BITMAP2;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent >= 25 )
		{
			if( Static_Var_8 == 1 )
			{
				Static_Var_8 = 0;
				show rcover;
			}
		}
		if( healthpercent >= 50 )
		{
			if( Static_Var_7 == 1 )
			{
				Static_Var_7 = 0;
				show lcover;
			}
		}
		if( healthpercent >= 75 )
		{
			if( Static_Var_6 == 1 )
			{
				Static_Var_6 = 0;
				show armour;
			}
		}
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

walk(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = Static_Var_5;
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <11.> speed <30.>;
		turn lthigh to x-axis <-53.> speed <149.>;
		turn lleg to x-axis <53.> speed <149.>;
		turn rleg to x-axis <53.> speed <149.>;
		turn rfoot to x-axis <-38.> speed <105.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <5.> speed <15.>;
			turn rarm to x-axis <-27.> speed <74.>;
		}
		sleep 360;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <-10.> speed <75.>;
		turn lthigh to x-axis <-42.> speed <43.>;
		turn lleg to x-axis <42.> speed <41.>;
		turn rleg to x-axis <82.> speed <101.>;
		turn rfoot to x-axis <-31.> speed <24.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-5.> speed <37.>;
			turn rarm to x-axis <-21.> speed <21.>;
		}
		sleep 280;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.] now;
		turn rthigh to x-axis <-18.> speed <39.>;
		turn lthigh to x-axis <-25.> speed <84.>;
		turn lleg to x-axis <25.> speed <86.>;
		turn rleg to x-axis <86.> speed <19.>;
		turn rfoot to x-axis <-23.> speed <41.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-9.> speed <20.>;
			turn rarm to x-axis <-12.> speed <42.>;
		}
		sleep 200;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.] now;
		turn rthigh to x-axis <-42.> speed <152.>;
		turn lthigh to x-axis <5.> speed <188.>;
		turn lleg to x-axis <7.> speed <113.>;
		turn lfoot to x-axis <-9.> speed <57.>;
		turn rleg to x-axis <105.> speed <118.>;
		turn rfoot to x-axis <0.> speed <144.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-21.> speed <76.>;
			turn rarm to x-axis <3.> speed <94.>;
		}
		sleep 160;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.] now;
		turn rthigh to x-axis <-70.> speed <138.>;
		turn lthigh to x-axis <15.> speed <47.>;
		turn lleg to x-axis <15.> speed <43.>;
		turn lfoot to x-axis <-25.> speed <80.>;
		turn rleg to x-axis <107.> speed <14.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-35.> speed <69.>;
			turn rarm to x-axis <7.> speed <24.>;
		}
		sleep 200;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <-75.> speed <19.>;
		turn lthigh to x-axis <20.> speed <19.>;
		turn lleg to x-axis <26.> speed <40.>;
		turn lfoot to x-axis <-34.> speed <31.>;
		turn rleg to x-axis <65.> speed <153.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-38.> speed <10.>;
			turn rarm to x-axis <10.> speed <10.>;
		}
		sleep 280;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <-57.> speed <51.>;
		turn lthigh to x-axis <24.> speed <11.>;
		turn lleg to x-axis <39.> speed <34.>;
		turn lfoot to x-axis <-39.> speed <14.>;
		turn rleg to x-axis <57.> speed <22.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-28.> speed <26.>;
			turn rarm to x-axis <12.> speed <6.>;
		}
		sleep 360;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <-45.> speed <42.>;
		turn lthigh to x-axis <5.> speed <68.>;
		turn lleg to x-axis <67.> speed <101.>;
		turn rfoot to x-axis <-12.> speed <44.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-22.> speed <21.>;
			turn rarm to x-axis <3.> speed <34.>;
		}
		sleep 280;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.] now;
		turn rthigh to x-axis <-23.> speed <111.>;
		turn lthigh to x-axis <-13.> speed <90.>;
		turn lleg to x-axis <79.> speed <62.>;
		turn lfoot to x-axis <-28.> speed <53.>;
		turn rleg to x-axis <37.> speed <99.>;
		turn rfoot to x-axis <-16.> speed <17.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <-11.> speed <56.>;
			turn rarm to x-axis <-6.> speed <45.>;
		}
		sleep 200;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [0.] now;
		turn rthigh to x-axis <3.> speed <159.>;
		turn lthigh to x-axis <-42.> speed <185.>;
		turn lleg to x-axis <90.> speed <67.>;
		turn lfoot to x-axis <-15.> speed <80.>;
		turn rleg to x-axis <7.> speed <190.>;
		turn rfoot to x-axis <-9.> speed <16.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <1.> speed <80.>;
			turn rarm to x-axis <-21.> speed <93.>;
		}
		sleep 160;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-0.] now;
		turn rthigh to x-axis <13.> speed <51.>;
		turn lthigh to x-axis <-57.> speed <74.>;
		turn rfoot to x-axis <-19.> speed <144.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <7.> speed <26.>;
			turn rarm to x-axis <-29.> speed <37.>;
		}
		sleep 200;
	}
	if( Static_Var_1 )
	{
		move pelvis to y-axis [-1.] now;
		turn rthigh to x-axis <16.> speed <12.>;
		turn lthigh to x-axis <-67.> speed <35.>;
		turn lleg to x-axis <56.> speed <124.>;
		turn lfoot to x-axis <-3.> speed <44.>;
		turn rleg to x-axis <25.> speed <65.>;
		turn rfoot to x-axis <-33.> speed <50.>;
		Func_Var_2 = Func_Var_1 + Static_Var_5;
		if( !Func_Var_2 )
		{
			turn larm to x-axis <8.> speed <6.>;
			turn rarm to x-axis <-34.> speed <18.>;
		}
		sleep 280;
	}
}

stand()
{
	turn body to z-axis <0.> speed <10.>;
	turn rthigh to x-axis <0.> speed <30.>;
	turn lthigh to x-axis <0.> speed <30.>;
	turn lleg to x-axis <0.> speed <30.>;
	turn lfoot to x-axis <0.> speed <30.>;
	turn rleg to x-axis <0.> speed <30.>;
	turn rfoot to x-axis <0.> speed <30.>;
	move pelvis to y-axis [0.] speed [3.];
	if( !Static_Var_5 )
	{
		turn larm to x-axis <0.> speed <30.>;
		turn rarm to x-axis <0.> speed <30.>;
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	Func_Var_2 = 1;
	while( TRUE )
	{
		Func_Var_1 = Static_Var_1;
		if( Func_Var_1 )
		{
			call-script walk();
			Func_Var_2 = 1;
		}
		if( !Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Func_Var_2 = 0;
				call-script stand();
			}
			sleep 100;
		}
	}
}

RestoreAfterDelay()
{
	signal 2;
	set-signal-mask 2;
	sleep Static_Var_2;
	turn mlauncher to x-axis <0.> speed <70.>;
	Static_Var_3 = 0;
	turn mlbase to y-axis <0.> speed <70.>;
	turn larm to x-axis <0.> speed <30.>;
	turn rarm to x-axis <0.> speed <30.>;
	turn body to y-axis <0.> speed <45.>;
	turn mbase to y-axis <0.> speed <45.>;
	turn lcover to x-axis <0.> speed <30.>;
	turn lcover to x-axis <0.> speed <30.>;
	turn lhand to x-axis <90.> speed <30.>;
	turn rhand to x-axis <90.> speed <30.>;
	turn rcover to x-axis <0.> speed <30.>;
	turn lcover to x-axis <0.> speed <30.>;
	wait-for-turn rhand around x-axis;
	Static_Var_5 = 0;
}

Create()
{
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_1 = 0;
	Static_Var_5 = 0;
	hide ml1;
	hide ml2;
	hide ml3;
	hide ml4;
	cache ml1;
	cache ml2;
	cache ml3;
	cache ml4;
	hide lf1;
	hide lf2;
	hide lf3;
	hide lf4;
	hide lf5;
	hide lf6;
	hide lf7;
	hide lf8;
	hide lf9;
	hide lf10;
	hide lf11;
	hide lf12;
	hide lf13;
	hide lf14;
	hide lf15;
	hide lf16;
	hide rf1;
	hide rf2;
	hide rf3;
	hide rf4;
	hide rf5;
	hide rf6;
	hide rf7;
	hide rf8;
	hide rf9;
	hide rf10;
	hide rf11;
	hide rf12;
	hide rf13;
	hide rf14;
	hide rf15;
	hide rf16;
	cache lf1;
	cache lf2;
	cache lf3;
	cache lf4;
	cache lf5;
	cache lf6;
	cache lf7;
	cache lf8;
	cache lf9;
	cache lf10;
	cache lf11;
	cache lf12;
	cache lf13;
	cache lf14;
	cache lf15;
	cache lf16;
	cache rf1;
	cache rf2;
	cache rf3;
	cache rf4;
	cache rf5;
	cache rf6;
	cache rf7;
	cache rf8;
	cache rf9;
	cache rf10;
	cache rf11;
	cache rf12;
	cache rf13;
	cache rf14;
	cache rf15;
	cache rf16;
	cache lfoot;
	cache rfoot;
	cache lheel;
	cache rheel;
	Static_Var_2 = 8000;
	turn lhand to x-axis <90.> now;
	turn rhand to x-axis <90.> now;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimPrimary(heading, pitch)
{
	signal 4;
	signal 2;
	set-signal-mask 4;
	Static_Var_5 = 1;
	wait-for-turn rcover around x-axis;
	turn lcover to x-axis <185.> speed <30.>;
	turn rcover to x-axis <185.> speed <30.>;
	turn lhand to x-axis <0.> speed <15.>;
	turn rhand to x-axis <0.> speed <15.>;
	turn body to y-axis heading speed <45.>;
	turn mbase to y-axis <0.> - heading speed <45.>;
	turn larm to x-axis <0.> - pitch speed <30.>;
	turn rarm to x-axis <0.> - pitch speed <30.>;
	wait-for-turn body around y-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn rhand around x-axis;
	wait-for-turn rcover around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Static_Var_3 == 31 )
	{
		turn lcover to x-axis <0.> speed <30.>;
		turn rcover to x-axis <0.> speed <30.>;
	}
	if( Static_Var_3 < 16 )
	{
		if( Static_Var_3 < 8 )
		{
			if( Static_Var_3 < 4 )
			{
				if( Static_Var_3 < 2 )
				{
					if( Static_Var_3 == 0 )
					{
						Static_Var_3 = 1;
						show lf1;
						sleep 50;
						hide lf1;
						return (0);
					}
					Static_Var_3 = 2;
					show lf2;
					sleep 50;
					hide lf2;
					return (0);
				}
				if( Static_Var_3 == 2 )
				{
					Static_Var_3 = 3;
					show lf3;
					sleep 50;
					hide lf3;
					return (0);
				}
				Static_Var_3 = 4;
				show lf4;
				sleep 50;
				hide lf4;
				return (0);
			}
			if( Static_Var_3 < 6 )
			{
				if( Static_Var_3 == 4 )
				{
					Static_Var_3 = 5;
					show lf5;
					sleep 50;
					hide lf5;
					return (0);
				}
				Static_Var_3 = 6;
				show lf6;
				sleep 50;
				hide lf6;
				return (0);
			}
			if( Static_Var_3 == 6 )
			{
				Static_Var_3 = 7;
				show lf7;
				sleep 50;
				hide lf7;
				return (0);
			}
			Static_Var_3 = 8;
			show lf8;
			sleep 50;
			hide lf8;
			return (0);
		}
		if( Static_Var_3 < 12 )
		{
			if( Static_Var_3 < 10 )
			{
				if( Static_Var_3 == 8 )
				{
					Static_Var_3 = 9;
					show lf9;
					sleep 50;
					hide lf9;
					return (0);
				}
				Static_Var_3 = 10;
				show lf10;
				sleep 50;
				hide lf10;
				return (0);
			}
			if( Static_Var_3 == 10 )
			{
				Static_Var_3 = 11;
				show lf11;
				sleep 50;
				hide lf11;
				return (0);
			}
			Static_Var_3 = 12;
			show lf12;
			sleep 50;
			hide lf12;
			return (0);
		}
		if( Static_Var_3 < 14 )
		{
			if( Static_Var_3 == 12 )
			{
				Static_Var_3 = 13;
				show lf13;
				sleep 50;
				hide lf13;
				return (0);
			}
			Static_Var_3 = 14;
			show lf14;
			sleep 50;
			hide lf14;
			return (0);
		}
		if( Static_Var_3 == 14 )
		{
			Static_Var_3 = 15;
			show lf15;
			sleep 50;
			hide lf15;
			return (0);
		}
		Static_Var_3 = 16;
		show lf16;
		sleep 50;
		hide lf16;
		return (0);
	}
	if( Static_Var_3 < 24 )
	{
		if( Static_Var_3 < 20 )
		{
			if( Static_Var_3 < 18 )
			{
				if( Static_Var_3 == 16 )
				{
					Static_Var_3 = 17;
					show rf1;
					sleep 50;
					hide rf1;
					return (0);
				}
				Static_Var_3 = 18;
				show rf2;
				sleep 50;
				hide rf2;
				return (0);
			}
			if( Static_Var_3 == 18 )
			{
				Static_Var_3 = 19;
				show rf3;
				sleep 50;
				hide rf3;
				return (0);
			}
			Static_Var_3 = 20;
			show rf4;
			sleep 50;
			hide rf4;
			return (0);
		}
		if( Static_Var_3 < 22 )
		{
			if( Static_Var_3 == 20 )
			{
				Static_Var_3 = 21;
				show rf5;
				sleep 50;
				hide rf5;
				return (0);
			}
			Static_Var_3 = 22;
			show rf6;
			sleep 50;
			hide rf6;
			return (0);
		}
		if( Static_Var_3 == 22 )
		{
			Static_Var_3 = 23;
			show rf7;
			sleep 50;
			hide rf7;
			return (0);
		}
		Static_Var_3 = 24;
		show rf8;
		sleep 50;
		hide rf8;
		return (0);
	}
	if( Static_Var_3 < 28 )
	{
		if( Static_Var_3 < 26 )
		{
			if( Static_Var_3 == 24 )
			{
				Static_Var_3 = 25;
				show rf9;
				sleep 50;
				hide rf9;
				return (0);
			}
			Static_Var_3 = 26;
			show rf10;
			sleep 50;
			hide rf10;
			return (0);
		}
		if( Static_Var_3 == 26 )
		{
			Static_Var_3 = 27;
			show rf11;
			sleep 50;
			hide rf11;
			return (0);
		}
		Static_Var_3 = 28;
		show rf12;
		sleep 50;
		hide rf12;
		return (0);
	}
	if( Static_Var_3 < 30 )
	{
		if( Static_Var_3 == 28 )
		{
			Static_Var_3 = 29;
			show rf13;
			sleep 50;
			hide rf13;
			return (0);
		}
		Static_Var_3 = 30;
		show rf14;
		sleep 50;
		hide rf14;
		return (0);
	}
	if( Static_Var_3 == 30 )
	{
		Static_Var_3 = 31;
		show rf15;
		sleep 50;
		hide rf15;
		return (0);
	}
	Static_Var_3 = 0;
	show rf16;
	sleep 50;
	hide rf16;
}

AimFromPrimary(piecenum)
{
	piecenum = lhand;
	if( Static_Var_3 > 15 )
	{
		piecenum = rhand;
	}
}

QueryPrimary(piecenum)
{
	if( Static_Var_3 < 16 )
	{
		if( Static_Var_3 < 8 )
		{
			if( Static_Var_3 < 4 )
			{
				if( Static_Var_3 < 2 )
				{
					if( Static_Var_3 == 0 )
					{
						piecenum = lf1;
						return (0);
					}
					piecenum = lf2;
					return (0);
				}
				if( Static_Var_3 == 2 )
				{
					piecenum = lf3;
					return (0);
				}
				piecenum = lf4;
				return (0);
			}
			if( Static_Var_3 < 6 )
			{
				if( Static_Var_3 == 4 )
				{
					piecenum = lf5;
					return (0);
				}
				piecenum = lf6;
				return (0);
			}
			if( Static_Var_3 == 6 )
			{
				piecenum = lf7;
				return (0);
			}
			piecenum = lf8;
			return (0);
		}
		if( Static_Var_3 < 12 )
		{
			if( Static_Var_3 < 10 )
			{
				if( Static_Var_3 == 8 )
				{
					piecenum = lf9;
					return (0);
				}
				piecenum = lf10;
				return (0);
			}
			if( Static_Var_3 == 10 )
			{
				piecenum = lf11;
				return (0);
			}
			piecenum = lf12;
			return (0);
		}
		if( Static_Var_3 < 14 )
		{
			if( Static_Var_3 == 12 )
			{
				piecenum = lf13;
				return (0);
			}
			piecenum = lf14;
			return (0);
		}
		if( Static_Var_3 == 14 )
		{
			piecenum = lf15;
			return (0);
		}
		piecenum = lf16;
		return (0);
	}
	if( Static_Var_3 < 24 )
	{
		if( Static_Var_3 < 20 )
		{
			if( Static_Var_3 < 18 )
			{
				if( Static_Var_3 == 16 )
				{
					piecenum = rf1;
					return (0);
				}
				piecenum = rf2;
				return (0);
			}
			if( Static_Var_3 == 18 )
			{
				piecenum = rf3;
				return (0);
			}
			piecenum = rf4;
			return (0);
		}
		if( Static_Var_3 < 22 )
		{
			if( Static_Var_3 == 20 )
			{
				piecenum = rf5;
				return (0);
			}
			piecenum = rf6;
			return (0);
		}
		if( Static_Var_3 == 22 )
		{
			piecenum = rf7;
			return (0);
		}
		piecenum = rf8;
		return (0);
	}
	if( Static_Var_3 < 28 )
	{
		if( Static_Var_3 < 26 )
		{
			if( Static_Var_3 == 24 )
			{
				piecenum = rf9;
				return (0);
			}
			piecenum = rf10;
			return (0);
		}
		if( Static_Var_3 == 26 )
		{
			piecenum = rf11;
			return (0);
		}
		piecenum = rf12;
		return (0);
	}
	if( Static_Var_3 < 30 )
	{
		if( Static_Var_3 == 28 )
		{
			piecenum = rf13;
			return (0);
		}
		piecenum = rf14;
		return (0);
	}
	if( Static_Var_3 == 30 )
	{
		piecenum = rf15;
		return (0);
	}
	piecenum = rf16;
}

AimFromSecondary(piecenum)
{
	piecenum = mlauncher;
}

QuerySecondary(piecenum)
{
	if( Static_Var_4 == 1 )
	{
		piecenum = ml1;
	}
	if( Static_Var_4 == 2 )
	{
		piecenum = ml2;
	}
	if( Static_Var_4 == 3 )
	{
		piecenum = ml3;
	}
	if( Static_Var_4 == 4 )
	{
		piecenum = ml4;
	}
}

AimSecondary(heading, pitch)
{
	signal 8;
	signal 2;
	set-signal-mask 8;
	turn mlbase to y-axis heading speed <70.>;
	turn mlauncher to x-axis <0.> - pitch speed <70.>;
	wait-for-turn mlbase around y-axis;
	wait-for-turn mlauncher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( Static_Var_4 == 1 )
	{
		show ml1;
		Static_Var_4 = 2;
		sleep 50;
		hide ml1;
		return (0);
	}
	if( Static_Var_4 == 2 )
	{
		show ml2;
		Static_Var_4 = 3;
		sleep 50;
		hide ml2;
		return (0);
	}
	if( Static_Var_4 == 3 )
	{
		show ml3;
		Static_Var_4 = 4;
		sleep 50;
		hide ml3;
		return (0);
	}
	if( Static_Var_4 == 4 )
	{
		show ml4;
		Static_Var_4 = 1;
		sleep 50;
		hide ml4;
	}
}

Killed(severity, corpsetype)
{
	hide ml1;
	hide ml2;
	hide ml3;
	hide ml4;
	hide lf1;
	hide lf2;
	hide lf3;
	hide lf4;
	hide lf5;
	hide lf6;
	hide lf7;
	hide lf8;
	hide lf9;
	hide lf10;
	hide lf11;
	hide lf12;
	hide lf13;
	hide lf14;
	hide lf15;
	hide lf16;
	hide rf1;
	hide rf2;
	hide rf3;
	hide rf4;
	hide rf5;
	hide rf6;
	hide rf7;
	hide rf8;
	hide rf9;
	hide rf10;
	hide rf11;
	hide rf12;
	hide rf13;
	hide rf14;
	hide rf15;
	hide rf16;
	explode lhand type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode rhand type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode mlauncher type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode larm type FALL | BITMAP2;
	explode rarm type FALL | BITMAP2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 4;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode lthigh type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
}
