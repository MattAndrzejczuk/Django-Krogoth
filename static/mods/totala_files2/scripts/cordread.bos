#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, flare1, flare2a, flare2b, flare3a, flare3b, flash1,
       flash2a, flash2b, flash3a, flash3b, biggun, canon, mlauncher, wake1,
       wake2, wake3, wake4, wake5, wake6, wake7, wake8, wake9,
       body, torpedo, engine;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


Bubbles()
{
	while( TRUE )
	{
		emit-sfx 3 from wake1;
		emit-sfx 3 from wake2;
		emit-sfx 3 from wake3;
		emit-sfx 3 from wake4;
		emit-sfx 3 from wake5;
		emit-sfx 3 from wake6;
		emit-sfx 3 from wake7;
		emit-sfx 3 from wake8;
		emit-sfx 3 from wake9;
		emit-sfx 5 from wake1;
		emit-sfx 5 from wake2;
		emit-sfx 5 from wake3;
		emit-sfx 5 from wake4;
		emit-sfx 5 from wake5;
		emit-sfx 5 from wake6;
		emit-sfx 5 from wake7;
		emit-sfx 5 from wake8;
		emit-sfx 5 from wake9;
		sleep 200;
	}
}

Create()
{
	hide flare;
	move canon to z-axis [4.] now;
	turn mlauncher to x-axis <90.> now;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	start-script Bubbles();
	Static_Var_3 = 3000;
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_3 = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	signal 16;
	set-signal-mask 16;
	sleep Static_Var_3;
	turn biggun to y-axis <0.> speed <40.>;
	turn mlauncher to x-axis <90.> speed <50.>;
}

AimFromPrimary(piecenum)
{
	piecenum = flash1;
}

AimFromSecondary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flash2a;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flash2b;
	}
}

AimFromTertiary(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = flash3a;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flash3b;
	}
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

QuerySecondary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flare2a;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flare2b;
	}
}

QueryTertiary(piecenum)
{
//	Static_Var_2 = !Static_Var_2;//now created in FireTertiary , still testing these
	if( Static_Var_2 == 0 )
	{
		piecenum = flare3a;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flare3b;
	}
}

AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	if( Static_Var_2 == 0 )
	{
		sleep 50;
	}
	if( Static_Var_2 == 1 )
	{
		sleep 50;
	}
}

FireTertiary()
{
	if( Static_Var_2 == 0 )
	{
		sleep 50;
	}
	if( Static_Var_2 == 1 )
	{
		sleep 50;
	}
	Static_Var_2 = !Static_Var_2;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn biggun to y-axis heading speed <30.>;
	wait-for-turn biggun around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn mlauncher to x-axis <0.> - pitch speed <80.>;
	wait-for-turn mlauncher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move canon to z-axis [0.] speed [400.];
	wait-for-move canon along z-axis;
	show flare;
//	explode flash1 type 28;
	move canon to z-axis [4.] speed [3.];
	sleep 200;
	hide flare;
}

FireSecondary()
{
	if( Static_Var_1 == 0 )
	{
		show flare2a;
		sleep 200;
		hide flare2a;
	}
	if( Static_Var_1 == 1 )
	{
		show flare2a;
		sleep 200;
		hide flare2a;
	}
	Static_Var_1 = !Static_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	corpsetype = 1;
//	explode base type 12288;
	explode base type BITMAPNUKE;
	explode flare1 type BITMAP1;
	explode flare2a type BITMAP2;
	explode flare2b type BITMAP3;
	explode flare3a type BITMAP4;
	explode flare3b type BITMAP5;
	explode biggun type SHATTER;
//	explode biggun type 22;
	explode mlauncher type SHATTER;
//	explode wake1 type 28;
//	explode wake3 type 28;
//	explode wake5 type 28;
//	explode wake8 type 28;
	explode body type SHATTER;
//	explode torpedo type 30;
	explode engine type SHATTER;
	return (0);
}
