#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, barrels, lflare, rflare, lin, lout,
       lmis1, lmis2, rin, rout, rmis1, rmis2, lfire, rfire;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

ReloadR()
{
	move rin to x-axis [4.] speed [8.];
	move rout to y-axis [-4.] speed [8.];
	wait-for-move rout along y-axis;
	hide rmis2;
	show rmis1;
	move rin to x-axis [0.] speed [8.];
	move rout to y-axis [0.] speed [8.];
	wait-for-move rout along y-axis;
	hide rmis1;
	show rmis2;
	return (1);
}

ReloadL()
{
	move lin to x-axis [-4.] speed [8.];
	move lout to y-axis [-4.] speed [8.];
	wait-for-move lout along y-axis;
	hide lmis2;
	show lmis1;
	move lin to x-axis [0.] speed [8.];
	move lout to y-axis [0.] speed [8.];
	wait-for-move lout along y-axis;
	hide lmis1;
	show lmis2;
	return (1);
}

//ReloadL()
//{
//}

Create()
{
	hide lflare;
	hide rflare;
	hide rmis1;
	hide lmis1;
	dont-cache body;
	dont-cache lflare;
	dont-cache lflare;
	dont-cache barrels;
	dont-cache lin;
	dont-cache lout;
	dont-cache rin;
	dont-cache rout;
	dont-cache rmis1;
	dont-cache rmis2;
	dont-cache lmis1;
	dont-cache lmis2;
	dont-cache turret;
	dont-shade body;
	dont-shade lflare;
	dont-shade rflare;
	dont-shade barrels;
	dont-shade lin;
	dont-shade lout;
	dont-shade rin;
	dont-shade rout;
	dont-shade rmis1;
	dont-shade rmis2;
	dont-shade lmis1;
	dont-shade lmis2;
	dont-shade turret;
	Static_Var_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <30.>;
	turn barrels to x-axis <0.> - pitch speed <45.>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrels around x-axis;
	return (1);
}

FirePrimary()
{
	if( Static_Var_1 == 0 )
	{
		show lflare;
		sleep 150;
		hide lflare;
		call-script ReloadL();
	}
	if( Static_Var_1 == 1 )
	{
		show rflare;
		sleep 150;
		hide rflare;
		call-script ReloadR();
	}
	Static_Var_1 = !Static_Var_1;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = lfire;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = rfire;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide lflare;
	hide rflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lmis1 type BITMAPONLY | BITMAP1;
		explode rmis1 type BITMAPONLY | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode lflare type BITMAPONLY | BITMAP4;
		explode rflare type BITMAPONLY | BITMAP5;
		explode barrels type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lmis1 type FALL | BITMAP1;
		explode rmis2 type FALL | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode lin type FALL | BITMAP4;
		explode rin type FALL | BITMAP5;
		explode barrels type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lmis1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rmis1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		explode lin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode barrels type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode lmis1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rmis1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode body type BITMAPONLY | BITMAP3;
	explode lin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode barrels type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP2;
}
