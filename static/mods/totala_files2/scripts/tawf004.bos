#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pumper, smoker1, smoker2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	spin pumper around y-axis speed <50.>;
	Static_Var_3 = 1;
	while( Static_Var_3 == 1 )
	{
		emit-sfx 256 | 1 from smoker1;
		emit-sfx 256 | 1 from smoker2;
		sleep 200;
		emit-sfx 256 | 1 from smoker1;
		emit-sfx 256 | 1 from smoker2;
		sleep 200;
	}
}

Stop()
{
	Static_Var_3 = 0;
	spin pumper around y-axis speed <0.>;
	wait-for-turn pumper around y-axis;
}

InitState()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_1 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	start-script SmokeUnit();
	Static_Var_3 = 0;
}

Activate()
{
	start-script RequestState(0);
	call-script Go();
}

Deactivate()
{
	start-script RequestState(1);
	call-script Stop();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pumper type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pumper type SHATTER | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pumper type SHATTER | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode pumper type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
