#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, pelvis, torso, backgun, ruparm, rloarm, grip, bar,
       flare, kilroy_was_here, luparm, lelbow, lloarm, lhand, pack, and_here,
       launch2, rthigh, rleg, lthigh, lleg;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

walk()
{
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <13.> now;
		turn rthigh to x-axis <17.> now;
		turn lthigh to x-axis <-49.> now;
		turn lleg to x-axis <32.> now;
		turn rleg to x-axis <17.> now;
		turn ruparm to x-axis <-18.> now;
		turn luparm to x-axis <28.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <9.> now;
		turn rthigh to x-axis <30.> now;
		turn lthigh to x-axis <-32.> now;
		turn lleg to x-axis <22.> now;
		turn rleg to x-axis <18.> now;
		turn ruparm to x-axis <-21.> now;
		turn luparm to x-axis <16.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [1.] now;
		turn pelvis to x-axis <6.> now;
		turn rthigh to x-axis <-0.> now;
		turn lthigh to x-axis <-23.> now;
		turn rleg to x-axis <64.> now;
		turn ruparm to x-axis <-12.> now;
		turn luparm to x-axis <9.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] now;
		turn pelvis to x-axis <3.> now;
		turn rthigh to x-axis <-28.> now;
		turn lthigh to x-axis <-11.> now;
		turn rleg to x-axis <84.> now;
		turn ruparm to x-axis <-3.> now;
		turn luparm to x-axis <1.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		turn pelvis to x-axis <0.> now;
		turn rthigh to x-axis <-32.> now;
		turn lthigh to x-axis <1.> now;
		turn ruparm to x-axis <5.> now;
		turn luparm to x-axis <2.> now;
		turn lloarm to x-axis <-60.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] - [0.] now;
		turn pelvis to x-axis <4.> now;
		turn rthigh to x-axis <-43.> now;
		turn lthigh to x-axis <11.> now;
		turn lleg to x-axis <30.> now;
		turn rleg to x-axis <79.> now;
		turn ruparm to x-axis <8.> now;
		turn luparm to x-axis <-8.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <13.> now;
		turn rthigh to x-axis <-49.> now;
		turn lthigh to x-axis <12.> now;
		turn lleg to x-axis <29.> now;
		turn rleg to x-axis <33.> now;
		turn ruparm to x-axis <15.> now;
		turn luparm to x-axis <-18.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <9.> now;
		turn rthigh to x-axis <-34.> now;
		turn lthigh to x-axis <3.> now;
		turn lleg to x-axis <48.> now;
		turn ruparm to x-axis <21.> now;
		turn luparm to x-axis <-7.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] - [0.] now;
		turn pelvis to x-axis <6.> now;
		turn rthigh to x-axis <-26.> now;
		turn lthigh to x-axis <-12.> now;
		turn lleg to x-axis <66.> now;
		turn ruparm to x-axis <11.> now;
		turn luparm to x-axis <5.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] now;
		turn pelvis to x-axis <3.> now;
		turn rthigh to x-axis <-15.> now;
		turn lthigh to x-axis <-27.> now;
		turn ruparm to x-axis <2.> now;
		turn luparm to x-axis <15.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		turn pelvis to x-axis <0.> now;
		turn rthigh to x-axis <2.> now;
		turn lthigh to x-axis <-34.> now;
		turn lleg to x-axis <69.> now;
		turn ruparm to x-axis <-0.> now;
		turn luparm to x-axis <24.> now;
		turn lelbow to z-axis <-10.> now;
		turn lloarm to x-axis <-60.> now;
		turn lhand to y-axis <-61.> now;
		turn rloarm to x-axis <-46.> now;
		sleep 90;
	}
	move pelvis to y-axis [0.] - [0.] now;
	turn pelvis to x-axis <4.> now;
	turn rthigh to x-axis <11.> now;
	turn lthigh to x-axis <-44.> now;
	turn lleg to x-axis <76.> now;
	turn ruparm to x-axis <-8.> now;
	turn luparm to x-axis <26.> now;
	turn lelbow to z-axis <-10.> now;
	turn rloarm to x-axis <-46.> now;
	sleep 90;
}

walklegs()
{
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <13.> now;
		turn rthigh to x-axis <17.> now;
		turn lthigh to x-axis <-49.> now;
		turn lleg to x-axis <32.> now;
		turn rleg to x-axis <17.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <9.> now;
		turn rthigh to x-axis <30.> now;
		turn lthigh to x-axis <-32.> now;
		turn lleg to x-axis <22.> now;
		turn rleg to x-axis <18.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [1.] now;
		turn pelvis to x-axis <6.> now;
		turn rthigh to x-axis <-0.> now;
		turn lthigh to x-axis <-23.> now;
		turn rleg to x-axis <64.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] now;
		turn pelvis to x-axis <3.> now;
		turn rthigh to x-axis <-28.> now;
		turn lthigh to x-axis <-11.> now;
		turn rleg to x-axis <84.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		turn pelvis to x-axis <0.> now;
		turn rthigh to x-axis <-32.> now;
		turn lthigh to x-axis <1.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] - [0.] now;
		turn pelvis to x-axis <4.> now;
		turn rthigh to x-axis <-43.> now;
		turn lthigh to x-axis <11.> now;
		turn lleg to x-axis <30.> now;
		turn rleg to x-axis <79.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <13.> now;
		turn rthigh to x-axis <-49.> now;
		turn lthigh to x-axis <12.> now;
		turn lleg to x-axis <29.> now;
		turn rleg to x-axis <33.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [-0.] now;
		turn pelvis to x-axis <9.> now;
		turn rthigh to x-axis <-34.> now;
		turn lthigh to x-axis <3.> now;
		turn lleg to x-axis <48.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] - [0.] now;
		turn pelvis to x-axis <6.> now;
		turn rthigh to x-axis <-26.> now;
		turn lthigh to x-axis <-12.> now;
		turn lleg to x-axis <66.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		move pelvis to y-axis [0.] now;
		turn pelvis to x-axis <3.> now;
		turn rthigh to x-axis <-15.> now;
		turn lthigh to x-axis <-27.> now;
		sleep 90;
	}
	if( Static_Var_5 )
	{
		turn pelvis to x-axis <0.> now;
		turn rthigh to x-axis <2.> now;
		turn lthigh to x-axis <-34.> now;
		turn lleg to x-axis <69.> now;
		sleep 90;
	}
	move pelvis to y-axis [0.] - [0.] now;
	turn pelvis to x-axis <4.> now;
	turn rthigh to x-axis <11.> now;
	turn lthigh to x-axis <-44.> now;
	turn lleg to x-axis <76.> now;
	sleep 90;
}

drawgun()
{
	if( TRUE )
	{
		turn ruparm to x-axis <-18.> now;
		turn luparm to x-axis <-37.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-68.> now;
		sleep 80;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-57.> now;
		turn luparm to x-axis <-37.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-83.> now;
		sleep 60;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-76.> now;
		turn luparm to x-axis <-37.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-92.> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-103.> now;
		turn luparm to x-axis <-37.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-108.> now;
		sleep 60;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-114.> now;
		turn luparm to x-axis <-37.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-123.> now;
		sleep 80;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-136.> now;
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-135.> now;
		sleep 70;
	}
	if( TRUE )
	{
		turn lloarm to z-axis <22.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-108.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move luparm to z-axis [0.] now;
		turn luparm to x-axis <-37.> now;
		turn lhand to y-axis <-44.> now;
		turn rloarm to x-axis <-78.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move luparm to z-axis [1.] now;
		turn luparm to x-axis <-55.> now;
		turn lelbow to z-axis <16.> now;
		turn lloarm to z-axis <21.> now;
		turn lhand to y-axis <0.> now;
		turn rloarm to x-axis <-57.> now;
		sleep 50;
	}
	if( TRUE )
	{
		move luparm to z-axis [1.] now;
		turn ruparm to x-axis <-114.> now;
		turn luparm to x-axis <-56.> now;
		turn lelbow to z-axis <21.> now;
		turn lloarm to z-axis <36.> now;
		turn rloarm to x-axis <-56.> now;
		sleep 40;
	}
	if( TRUE )
	{
		move luparm to z-axis [2.] now;
		turn ruparm to x-axis <-79.> now;
		turn luparm to x-axis <-59.> now;
		turn lelbow to z-axis <24.> now;
		turn lloarm to z-axis <52.> now;
		sleep 30;
	}
	if( TRUE )
	{
		move luparm to z-axis [2.] now;
		move rloarm to y-axis [1.] now;
		turn ruparm to x-axis <-49.> now;
		turn luparm to x-axis <-62.> now;
		turn lelbow to z-axis <49.> now;
		turn lloarm to z-axis <41.> now;
		turn lhand to y-axis <57.> now;
		sleep 20;
	}
	move luparm to z-axis [2.] now;
	move rloarm to y-axis [2.] now;
	turn ruparm to x-axis <3.> now;
	turn luparm to x-axis <-44.> now;
	turn lelbow to z-axis <45.> now;
	turn lloarm to z-axis <46.> now;
	turn lhand to y-axis <-261.> now;
	turn rloarm to x-axis <-95.> now;
	sleep 70;
	Static_Var_3 = 0;
}

holstgun()
{
	if( TRUE )
	{
		move luparm to z-axis [2.] now;
		move rloarm to y-axis [2.] now;
		turn ruparm to x-axis <3.> now;
		turn luparm to x-axis <-44.> now;
		turn lelbow to z-axis <45.> now;
		turn lloarm to z-axis <46.> now;
		turn lhand to y-axis <-261.> now;
		turn rloarm to x-axis <-95.> now;
		sleep 110;
	}
	if( TRUE )
	{
		move luparm to z-axis [2.] now;
		move rloarm to y-axis [0.] now;
		turn ruparm to x-axis <-28.> now;
		turn luparm to x-axis <-61.> now;
		turn lelbow to z-axis <34.> now;
		turn lloarm to z-axis <30.> now;
		turn lhand to y-axis <54.> now;
		turn rloarm to x-axis <-91.> now;
		sleep 90;
	}
	if( TRUE )
	{
		move luparm to z-axis [1.] now;
		move rloarm to y-axis [0.] now;
		turn ruparm to x-axis <-57.> now;
		turn luparm to x-axis <-53.> now;
		turn lelbow to z-axis <28.> now;
		turn lloarm to z-axis <30.> now;
		turn lhand to y-axis <15.> now;
		sleep 90;
	}
	if( TRUE )
	{
		move luparm to z-axis [1.] now;
		turn ruparm to x-axis <-105.> now;
		turn luparm to x-axis <-44.> now;
		turn lelbow to z-axis <25.> now;
		turn lhand to y-axis <-1.> now;
		sleep 80;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-124.> now;
		turn luparm to x-axis <-44.> now;
		turn lelbow to z-axis <18.> now;
		turn lhand to y-axis <-8.> now;
		turn rloarm to x-axis <-113.> now;
		sleep 80;
	}
	if( TRUE )
	{
		move luparm to z-axis [1.] now;
		turn ruparm to x-axis <-148.> now;
		turn luparm to x-axis <-43.> now;
		turn lelbow to z-axis <16.> now;
		turn lloarm to z-axis <23.> now;
		turn lhand to y-axis <15.> now;
		turn rloarm to x-axis <-129.> now;
		sleep 140;
	}
	if( TRUE )
	{
		move luparm to z-axis [0.] now;
		turn luparm to x-axis <-41.> now;
		turn lelbow to z-axis <11.> now;
		turn lhand to y-axis <-10.> now;
		turn rloarm to x-axis <-137.> now;
		sleep 190;
	}
	if( TRUE )
	{
		turn luparm to x-axis <-40.> now;
		turn lelbow to z-axis <10.> now;
		turn rloarm to x-axis <-102.> now;
		sleep 110;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-123.> now;
		turn luparm to x-axis <-39.> now;
		turn lelbow to z-axis <10.> now;
		turn rloarm to x-axis <-61.> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-90.> now;
		turn luparm to x-axis <-39.> now;
		turn lelbow to z-axis <7.> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-43.> now;
		turn luparm to x-axis <-37.> now;
		turn lelbow to z-axis <5.> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn ruparm to x-axis <-24.> now;
		turn luparm to x-axis <-38.> now;
		turn lelbow to z-axis <3.> now;
		sleep 90;
	}
	move luparm to z-axis [0.] now;
	move rloarm to y-axis [0.] now;
	turn ruparm to x-axis <-18.> now;
	turn luparm to x-axis <-37.> now;
	turn lelbow to z-axis <0.> now;
	turn lloarm to z-axis <22.> now;
	turn lhand to y-axis <-44.> now;
	turn rloarm to x-axis <-68.> now;
	sleep 40;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_5;
		aiming = Static_Var_6;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_7 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_7 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_7 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.] speed [1.];
				turn rthigh to x-axis <0.> speed <200.>;
				turn rleg to x-axis <0.> speed <200.>;
				turn lthigh to x-axis <0.> speed <200.>;
				turn lleg to x-axis <0.> speed <200.>;
				if( !aiming )
				{
					turn torso to y-axis <0.> speed <200.>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	Static_Var_1 = 2000;
	hide flare;
	hide grip;
	hide bar;
	show backgun;
	Static_Var_5 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	start-script SmokeUnit();
	start-script MotionControl();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 1;
}

StartMoving()
{
	Static_Var_5 = 1;
}

StopMoving()
{
	Static_Var_5 = 0;
}

RestoreAfterDelay()
{
	sleep Static_Var_1;
	set-signal-mask 2;
	Static_Var_3 = 1;
	Static_Var_4 = 1;
	turn torso to y-axis <0.> speed <70.>;
	wait-for-turn torso around y-axis;
	start-script holstgun();
	sleep 730;
	show backgun;
	hide grip;
	hide bar;
	sleep 640;
	Static_Var_4 = 0;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	while( !Static_Var_7 )
	{
		sleep 100;
	}
	if( Static_Var_3 == 1 )
	{
		start-script drawgun();
		sleep 400;
		show grip;
		show bar;
		hide backgun;
	}
	while( Static_Var_3 == 1 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <200.>;
	turn grip to x-axis <0.> - pitch speed <200.>;
	wait-for-turn torso around y-axis;
	wait-for-turn grip around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move bar to y-axis [-1.] speed [500.];
	wait-for-move bar along y-axis;
	show flare;
	sleep 100;
	hide flare;
	move bar to y-axis [0.] speed [120.];
}

QuerySecondary(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = and_here;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = launch2;
	}
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	Static_Var_6 = 1;
	while( !Static_Var_7 )
	{
		sleep 100;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( Static_Var_2 == 0 )
	{
		Static_Var_2 = 1;
		return (0);
	}
	if( Static_Var_2 == 1 )
	{
		Static_Var_2 = 0;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode backgun type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP3;
		explode grip type BITMAPONLY | BITMAP4;
		explode bar type BITMAPONLY | BITMAP4;
		explode lelbow type BITMAPONLY | BITMAP5;
		explode lhand type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lloarm type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode luparm type BITMAPONLY | BITMAP5;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rloarm type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode backgun type FALL | BITMAP1;
		explode ground type FALL | BITMAP3;
		explode grip type BITMAPONLY | BITMAP4;
		explode bar type BITMAPONLY | BITMAP4;
		explode lelbow type FALL | BITMAP5;
		explode lhand type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rloarm type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode grip type BITMAPONLY | BITMAP4;
		explode bar type BITMAPONLY | BITMAP4;
		explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode grip type BITMAPONLY | BITMAP4;
	explode bar type BITMAPONLY | BITMAP4;
	explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
