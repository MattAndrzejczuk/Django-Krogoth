#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hip, torso, lshoulder, luparm, lelbow, lloarm, spinner,
       barrel1, barrel2, barrel3, barrel4, flare1, shell, rshoulder, ruparm,
       relbow, rloarm, rhand, biggun, bigflare, head, flare2, hip1,
       upleg1, knee1, loleg1, ankle1, foot1, hip2, upleg2, knee2,
       loleg2, ankle2, foot2, hip3, upleg3, knee3, loleg3, ankle3,
       foot3, hip4, upleg4, knee4, loleg4, ankle4, foot4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

walklegs()
{
	if( TRUE )
	{
		if( Static_Var_7 != 1 )
		{
			turn upleg1 to x-axis <30.> speed <50.>;
			turn loleg1 to x-axis <-30.> speed <50.>;
			turn foot1 to x-axis <20.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			turn upleg2 to x-axis <0.> speed <50.>;
			turn loleg2 to x-axis <0.> speed <50.>;
			turn foot2 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			move hip3 to z-axis [-5.] speed [8.];
			turn foot3 to z-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			move hip4 to z-axis [0.] speed [8.];
			turn foot4 to x-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 1 )
		{
			move hip1 to z-axis [5.] speed [8.];
			turn foot1 to x-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			move hip2 to z-axis [0.] speed [8.];
			turn foot2 to z-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			turn upleg3 to x-axis <-30.> speed <50.>;
			turn loleg3 to x-axis <30.> speed <50.>;
			turn foot3 to x-axis <20.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			turn upleg4 to x-axis <0.> speed <50.>;
			turn loleg4 to x-axis <0.> speed <50.>;
			turn foot4 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 1 )
		{
			turn upleg1 to x-axis <0.> speed <50.>;
			turn loleg1 to x-axis <0.> speed <50.>;
			turn foot1 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			turn upleg2 to x-axis <30.> speed <50.>;
			turn loleg2 to x-axis <-30.> speed <50.>;
			turn foot2 to x-axis <20.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			move hip3 to z-axis [0.] speed [8.];
			turn foot3 to x-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			move hip4 to z-axis [-5.] speed [8.];
			turn foot4 to z-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 1 )
		{
			move hip1 to z-axis [0.] speed [8.];
			turn foot1 to z-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			move hip2 to z-axis [5.] speed [8.];
			turn foot2 to x-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			turn upleg3 to x-axis <0.> speed <50.>;
			turn loleg3 to x-axis <0.> speed <50.>;
			turn foot3 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			turn upleg4 to x-axis <-30.> speed <50.>;
			turn loleg4 to x-axis <30.> speed <50.>;
			turn foot4 to x-axis <20.> speed <30.>;
		}
		sleep 150;
	}
	return (0);
}

walk()
{
	if( TRUE )
	{
		turn torso to y-axis <10.> speed <10.>;
		turn head to y-axis <-10.> speed <10.>;
		turn ruparm to x-axis <-10.> speed <10.>;
		turn luparm to x-axis <10.> speed <10.>;
		if( Static_Var_7 != 1 )
		{
			turn upleg1 to x-axis <30.> speed <50.>;
			turn loleg1 to x-axis <-30.> speed <50.>;
			turn foot1 to x-axis <20.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			turn upleg2 to x-axis <0.> speed <50.>;
			turn loleg2 to x-axis <0.> speed <50.>;
			turn foot2 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			move hip3 to z-axis [-5.] speed [5.];
			turn foot3 to z-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			move hip4 to z-axis [0.] speed [5.];
			turn foot4 to x-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		turn torso to y-axis <0.> speed <10.>;
		turn head to y-axis <0.> speed <10.>;
		turn ruparm to x-axis <0.> speed <10.>;
		turn luparm to x-axis <0.> speed <10.>;
		if( Static_Var_7 != 1 )
		{
			move hip1 to z-axis [5.] speed [5.];
			turn foot1 to x-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			move hip2 to z-axis [0.] speed [5.];
			turn foot2 to z-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			turn upleg3 to x-axis <-30.> speed <50.>;
			turn loleg3 to x-axis <30.> speed <50.>;
			turn foot3 to x-axis <20.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			turn upleg4 to x-axis <0.> speed <50.>;
			turn loleg4 to x-axis <0.> speed <50.>;
			turn foot4 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		turn torso to y-axis <-10.> speed <10.>;
		turn head to y-axis <10.> speed <10.>;
		turn ruparm to x-axis <10.> speed <10.>;
		turn luparm to x-axis <-10.> speed <10.>;
		if( Static_Var_7 != 1 )
		{
			turn upleg1 to x-axis <0.> speed <50.>;
			turn loleg1 to x-axis <0.> speed <50.>;
			turn foot1 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			turn upleg2 to x-axis <30.> speed <50.>;
			turn loleg2 to x-axis <-30.> speed <50.>;
			turn foot2 to x-axis <20.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			move hip3 to z-axis [0.] speed [5.];
			turn foot3 to x-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			move hip4 to z-axis [-5.] speed [5.];
			turn foot4 to z-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		turn torso to y-axis <0.> speed <10.>;
		turn head to y-axis <0.> speed <10.>;
		turn ruparm to x-axis <0.> speed <10.>;
		turn luparm to x-axis <0.> speed <10.>;
		if( Static_Var_7 != 1 )
		{
			move hip1 to z-axis [0.] speed [5.];
			turn foot1 to z-axis <0.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 2 )
		{
			move hip2 to z-axis [5.] speed [5.];
			turn foot2 to x-axis <0.> speed <30.>;
		}
		sleep 150;
	}
	if( TRUE )
	{
		if( Static_Var_7 != 3 )
		{
			turn upleg3 to x-axis <0.> speed <50.>;
			turn loleg3 to x-axis <0.> speed <50.>;
			turn foot3 to x-axis <-10.> speed <30.>;
		}
		sleep 150;
		if( Static_Var_7 != 4 )
		{
			turn upleg4 to x-axis <-30.> speed <50.>;
			turn loleg4 to x-axis <30.> speed <50.>;
			turn foot4 to x-axis <20.> speed <30.>;
		}
		sleep 150;
	}
	return (0);
}

stand()
{
	if( TRUE )
	{
		if( Static_Var_7 != 1 )
		{
			turn upleg1 to x-axis <0.> speed <25.>;
			turn upleg1 to y-axis <0.> speed <25.>;
			turn knee1 to y-axis <-45.> speed <25.>;
			turn loleg1 to x-axis <0.> speed <25.>;
			turn foot1 to x-axis <0.> speed <25.>;
		}
		if( Static_Var_7 != 2 )
		{
			turn upleg2 to x-axis <0.> speed <25.>;
			turn upleg2 to y-axis <0.> speed <25.>;
			turn knee2 to y-axis <45.> speed <25.>;
			turn loleg2 to x-axis <0.> speed <25.>;
			turn foot2 to x-axis <0.> speed <25.>;
		}
		if( Static_Var_7 != 3 )
		{
			turn upleg3 to x-axis <0.> speed <25.>;
			turn upleg3 to y-axis <0.> speed <25.>;
			turn knee3 to y-axis <-45.> speed <25.>;
			turn loleg3 to x-axis <0.> speed <25.>;
			turn foot3 to x-axis <0.> speed <25.>;
		}
		if( Static_Var_7 != 4 )
		{
			turn upleg4 to x-axis <0.> speed <25.>;
			turn upleg4 to y-axis <0.> speed <25.>;
			turn knee4 to y-axis <45.> speed <25.>;
			turn loleg4 to x-axis <0.> speed <25.>;
			turn foot4 to x-axis <0.> speed <25.>;
		}
		if( !Static_Var_3 )
		{
			turn torso to y-axis <0.> speed <10.>;
			turn head to y-axis <0.> speed <10.>;
			turn ruparm to x-axis <0.> speed <10.>;
			turn luparm to x-axis <0.> speed <10.>;
		}
	}
	return (0);
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_2;
		aiming = Static_Var_3;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_4 = 0;
				turn lelbow to x-axis <-25.> speed <25.>;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_4 = 1;
			if( justmoved )
			{
				call-script stand();
				if( !aiming )
				{
					call-script stand();
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	hide bigflare;
	hide flare1;
	hide flare2;
	turn hip1 to y-axis <45.> now;
	turn hip2 to y-axis <-45.> now;
	turn hip3 to y-axis <45.> now;
	turn hip4 to y-axis <-45.> now;
	turn knee1 to y-axis <-45.> now;
	turn knee2 to y-axis <45.> now;
	turn knee3 to y-axis <-45.> now;
	turn knee4 to y-axis <45.> now;
	Static_Var_8 = 0;
	Static_Var_5 = 0;
	Static_Var_1 = 2000;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	start-script SmokeUnit();
	start-script MotionControl();
	set ARMORED to 1;
	return (0);
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 2;
	return (0);
}

StartMoving()
{
	turn hip1 to y-axis <30.> speed <50.>;
	turn hip2 to y-axis <-30.> speed <50.>;
	turn hip3 to y-axis <30.> speed <50.>;
	turn hip4 to y-axis <-30.> speed <50.>;
	turn knee1 to y-axis <-30.> speed <50.>;
	turn knee2 to y-axis <30.> speed <50.>;
	turn knee3 to y-axis <-30.> speed <50.>;
	turn knee4 to y-axis <30.> speed <50.>;
	Static_Var_2 = 1;
	return (0);
}

StopMoving()
{
	Static_Var_2 = 0;
	return (0);
}

setsfxoccupy(Func_Var_1)
{
	Static_Var_6 = Func_Var_1;
	return (0);
}

RestoreAfterDelay()
{
	sleep 15000;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	turn torso to y-axis <0.> speed <45.>;
	turn head to y-axis <0.> speed <23.>;
	turn flare2 to x-axis <0.> speed <23.>;
	turn ruparm to x-axis <0.> speed <45.>;
	turn luparm to x-axis <0.> speed <45.>;
	turn relbow to x-axis <0.> speed <45.>;
	turn lelbow to x-axis <0.> speed <45.>;
	turn rloarm to x-axis <0.> speed <45.>;
	turn lloarm to x-axis <0.> speed <45.>;
	wait-for-turn torso around y-axis;
	wait-for-turn head around y-axis;
	wait-for-turn flare2 around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn relbow around x-axis;
	wait-for-turn lelbow around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn lloarm around x-axis;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = lelbow;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	Static_Var_3 = 1;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <45.>;
	turn lelbow to x-axis <0.> - pitch speed <23.>;
	wait-for-turn torso around y-axis;
	wait-for-turn lelbow around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Static_Var_8 == 0 )
	{
		show flare1;
		move barrel1 to z-axis [-5.] now;
		sleep 150;
		explode shell type FALL;
		hide flare1;
		move barrel1 to z-axis [0.] speed [20.];
		turn spinner to z-axis <81038.> speed <720176.>;
	}
	if( Static_Var_8 == 1 )
	{
		show flare1;
		move barrel2 to z-axis [-5.] now;
		sleep 150;
		explode shell type FALL;
		hide flare1;
		move barrel2 to z-axis [0.] speed [20.];
		turn spinner to z-axis <162076.> speed <720176.>;
	}
	if( Static_Var_8 == 2 )
	{
		show flare1;
		move barrel3 to z-axis [-5.] now;
		sleep 150;
		explode shell type FALL;
		hide flare1;
		move barrel3 to z-axis [0.] speed [20.];
		turn spinner to z-axis <-81038.> speed <720176.>;
	}
	if( Static_Var_8 == 3 )
	{
		show flare1;
		move barrel4 to z-axis [-5.] now;
		sleep 150;
		explode shell type FALL;
		hide flare1;
		move barrel4 to z-axis [0.] speed [20.];
		turn spinner to z-axis <0.> speed <720176.>;
	}
	++Static_Var_8;
	if( Static_Var_8 == 4 )
	{
		Static_Var_8 = 0;
	}
	return (0);
}

QuerySecondary(piecenum)
{
	piecenum = flare2;
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = head;
	return (0);
}

AimSecondary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	Static_Var_3 = 1;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	turn head to y-axis heading speed <23.>;
	turn flare2 to x-axis <0.> - pitch speed <23.>;
	wait-for-turn head around y-axis;
	wait-for-turn flare2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	show flare2;
	explode flare2 type BITMAPONLY | BITMAP5;
	hide flare2;
	return (0);
}

QueryTertiary(piecenum)
{
	piecenum = bigflare;
	return (0);
}

AimFromTertiary(piecenum)
{
	piecenum = relbow;
	return (0);
}

AimTertiary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	Static_Var_3 = 1;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <45.>;
	turn relbow to x-axis <0.> - pitch speed <23.>;
	wait-for-turn torso around y-axis;
	wait-for-turn relbow around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	move biggun to z-axis [-5.] speed [50.];
	show bigflare;
	sleep 150;
	hide bigflare;
	sleep 550;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode barrel2 type BITMAPONLY | BITMAP1;
		explode barrel3 type BITMAPONLY | BITMAP1;
		explode barrel4 type BITMAPONLY | BITMAP1;
		explode head type BITMAPONLY | BITMAP2;
		explode foot1 type BITMAPONLY | BITMAP3;
		explode foot3 type BITMAPONLY | BITMAP3;
		explode rloarm type BITMAPONLY | BITMAP3;
		explode lloarm type BITMAPONLY | BITMAP3;
		explode loleg1 type BITMAPONLY | BITMAP4;
		explode spinner type BITMAPONLY | BITMAP4;
		explode biggun type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode barrel2 type BITMAPONLY | BITMAP1;
		explode barrel3 type BITMAPONLY | BITMAP1;
		explode barrel4 type BITMAPONLY | BITMAP1;
		explode head type BITMAPONLY | BITMAP2;
		explode foot1 type FALL | BITMAP3;
		explode foot3 type FALL | BITMAP3;
		explode rloarm type FALL | BITMAP3;
		explode lloarm type FALL | BITMAP3;
		explode loleg1 type FALL | BITMAP4;
		explode spinner type SHATTER | BITMAP4;
		explode biggun type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode barrel2 type BITMAPONLY | BITMAP1;
		explode barrel3 type BITMAPONLY | BITMAP1;
		explode barrel4 type BITMAPONLY | BITMAP1;
		explode head type BITMAPONLY | BITMAP2;
		explode foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode foot3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode loleg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode spinner type SHATTER | BITMAP4;
		explode biggun type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode barrel1 type BITMAPONLY | BITMAP1;
	explode barrel2 type BITMAPONLY | BITMAP1;
	explode barrel3 type BITMAPONLY | BITMAP1;
	explode barrel4 type BITMAPONLY | BITMAP1;
	explode head type BITMAPONLY | BITMAP2;
	explode foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode foot3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode loleg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode spinner type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode biggun type BITMAPONLY | BITMAP5;
	return (0);
}
