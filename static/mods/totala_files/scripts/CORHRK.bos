#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  missile1, missile2, torso, Thigh1, Thigh2, Leg2, Foot2, Leg1,
       Foot1, head, launcher, ground;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;


walk()
{
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh1 to z-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		move Thigh2 to z-axis [-0.] now;
		turn Thigh1 to x-axis <12.> now;
		turn Thigh2 to x-axis <-45.> now;
		turn Leg2 to x-axis <-19.> now;
		turn Foot2 to x-axis <65.> now;
		turn Leg1 to x-axis <5.> now;
		turn Foot1 to x-axis <-5.> now;
		sleep 90;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		turn Thigh1 to x-axis <17.> now;
		turn Thigh2 to x-axis <-56.> now;
		turn Leg2 to x-axis <6.> now;
		turn Foot2 to x-axis <50.> now;
		turn Leg1 to x-axis <-1.> now;
		turn Foot1 to x-axis <5.> now;
		sleep 120;
	}
	if( TRUE )
	{
		move torso to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <20.> now;
		turn Thigh2 to x-axis <-31.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Foot2 to x-axis <40.> now;
		turn Leg1 to x-axis <-6.> now;
		turn Foot1 to x-axis <12.> now;
		sleep 117;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		turn Thigh1 to x-axis <19.> now;
		turn Thigh2 to x-axis <-13.> now;
		turn Leg2 to x-axis <-6.> now;
		turn Foot2 to x-axis <19.> now;
		turn Leg1 to x-axis <-22.> now;
		turn Foot1 to x-axis <30.> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <5.> now;
		turn Thigh2 to x-axis <-1.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Leg2 to y-axis <0.> now;
		turn Foot2 to x-axis <11.> now;
		turn Leg1 to x-axis <-41.> now;
		turn Foot1 to x-axis <47.> now;
		sleep 52;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-18.> now;
		turn Thigh2 to x-axis <-0.> now;
		turn Leg2 to x-axis <-6.> now;
		turn Foot2 to x-axis <6.> now;
		turn Leg1 to x-axis <-30.> now;
		turn Foot1 to x-axis <51.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-39.> now;
		turn Thigh2 to x-axis <4.> now;
		turn Leg2 to x-axis <-1.> now;
		turn Foot2 to x-axis <0.> now;
		turn Leg1 to x-axis <-20.> now;
		turn Foot1 to x-axis <56.> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-54.> now;
		turn Thigh2 to x-axis <12.> now;
		turn Leg2 to x-axis <-0.> now;
		turn Foot2 to x-axis <0.> now;
		turn Leg1 to x-axis <4.> now;
		turn Foot1 to x-axis <50.> now;
		sleep 104;
	}
	if( TRUE )
	{
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-35.> now;
		turn Thigh2 to x-axis <22.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Foot2 to x-axis <19.> now;
		turn Leg1 to x-axis <-6.> now;
		turn Foot1 to x-axis <41.> now;
		sleep 115;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-8.> now;
		turn Thigh2 to x-axis <18.> now;
		turn Leg2 to x-axis <-24.> now;
		turn Foot2 to x-axis <31.> now;
		turn Leg1 to x-axis <-10.> now;
		turn Foot1 to x-axis <19.> now;
		sleep 108;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <2.> now;
		turn Thigh2 to x-axis <9.> now;
		turn Leg2 to x-axis <-37.> now;
		turn Foot2 to x-axis <41.> now;
		turn Leg1 to x-axis <-5.> now;
		turn Foot1 to x-axis <2.> now;
		sleep 110;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <5.> now;
		turn Thigh2 to x-axis <-8.> now;
		turn Leg2 to x-axis <-34.> now;
		turn Foot2 to x-axis <54.> now;
		turn Leg1 to x-axis <3.> now;
		turn Foot1 to x-axis <-8.> now;
		sleep 62;
	}
	move torso to y-axis [-0.] now;
	move Thigh1 to x-axis [0.] now;
	move Thigh1 to y-axis [0.] now;
	move Thigh2 to y-axis [0.] now;
	turn Thigh1 to x-axis <9.> now;
	turn Thigh2 to x-axis <-27.> now;
	turn Leg2 to x-axis <-27.> now;
	turn Leg2 to y-axis <0.> now;
	turn Foot2 to x-axis <59.> now;
	turn Leg1 to x-axis <4.> now;
	turn Foot1 to x-axis <-6.> now;
	sleep 61;
}

walklegs()
{
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh1 to z-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		move Thigh2 to z-axis [-0.] now;
		turn Thigh1 to x-axis <12.> now;
		turn Thigh2 to x-axis <-45.> now;
		turn Leg2 to x-axis <-19.> now;
		turn Foot2 to x-axis <65.> now;
		turn Leg1 to x-axis <5.> now;
		turn Foot1 to x-axis <-5.> now;
		sleep 90;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <17.> now;
		turn Thigh2 to x-axis <-56.> now;
		turn Leg2 to x-axis <6.> now;
		turn Foot2 to x-axis <50.> now;
		turn Leg1 to x-axis <-1.> now;
		turn Foot1 to x-axis <5.> now;
		sleep 120;
	}
	if( TRUE )
	{
		move torso to y-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <20.> now;
		turn Thigh2 to x-axis <-31.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Foot2 to x-axis <40.> now;
		turn Leg1 to x-axis <-6.> now;
		turn Foot1 to x-axis <12.> now;
		sleep 117;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		turn Thigh1 to x-axis <19.> now;
		turn Thigh2 to x-axis <-13.> now;
		turn Leg2 to x-axis <-6.> now;
		turn Foot2 to x-axis <19.> now;
		turn Leg1 to x-axis <-22.> now;
		turn Foot1 to x-axis <30.> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <5.> now;
		turn Thigh2 to x-axis <-1.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Leg2 to y-axis <0.> now;
		turn Foot2 to x-axis <11.> now;
		turn Leg1 to x-axis <-41.> now;
		turn Foot1 to x-axis <47.> now;
		sleep 52;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-18.> now;
		turn Thigh2 to x-axis <-0.> now;
		turn Leg2 to x-axis <-6.> now;
		turn Foot2 to x-axis <6.> now;
		turn Leg1 to x-axis <-30.> now;
		turn Foot1 to x-axis <51.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		turn Thigh1 to x-axis <-39.> now;
		turn Thigh2 to x-axis <4.> now;
		turn Leg2 to x-axis <-1.> now;
		turn Foot2 to x-axis <0.> now;
		turn Leg1 to x-axis <-20.> now;
		turn Foot1 to x-axis <56.> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-54.> now;
		turn Thigh2 to x-axis <12.> now;
		turn Leg2 to x-axis <-0.> now;
		turn Foot2 to x-axis <0.> now;
		turn Leg1 to x-axis <4.> now;
		turn Foot1 to x-axis <50.> now;
		sleep 104;
	}
	if( TRUE )
	{
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [-0.] now;
		move Thigh2 to y-axis [0.] now;
		turn Thigh1 to x-axis <-35.> now;
		turn Thigh2 to x-axis <22.> now;
		turn Leg2 to x-axis <-9.> now;
		turn Foot2 to x-axis <19.> now;
		turn Leg1 to x-axis <-6.> now;
		turn Foot1 to x-axis <41.> now;
		sleep 115;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <-8.> now;
		turn Thigh2 to x-axis <18.> now;
		turn Leg2 to x-axis <-24.> now;
		turn Foot2 to x-axis <31.> now;
		turn Leg1 to x-axis <-10.> now;
		turn Foot1 to x-axis <19.> now;
		sleep 108;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to x-axis [0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <2.> now;
		turn Thigh2 to x-axis <9.> now;
		turn Leg2 to x-axis <-37.> now;
		turn Foot2 to x-axis <41.> now;
		turn Leg1 to x-axis <-5.> now;
		turn Foot1 to x-axis <2.> now;
		sleep 110;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.] now;
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to y-axis [-0.] now;
		turn Thigh1 to x-axis <5.> now;
		turn Thigh2 to x-axis <-8.> now;
		turn Leg2 to x-axis <-34.> now;
		turn Foot2 to x-axis <54.> now;
		turn Leg1 to x-axis <3.> now;
		turn Foot1 to x-axis <-8.> now;
		sleep 62;
	}
	move torso to y-axis [-0.] now;
	move Thigh1 to x-axis [0.] now;
	move Thigh1 to y-axis [0.] now;
	move Thigh2 to y-axis [0.] now;
	turn Thigh1 to x-axis <9.> now;
	turn Thigh2 to x-axis <-27.> now;
	turn Leg2 to x-axis <-27.> now;
	turn Leg2 to y-axis <0.> now;
	turn Foot2 to x-axis <59.> now;
	turn Leg1 to x-axis <4.> now;
	turn Foot1 to x-axis <-6.> now;
	sleep 61;
}

stand()
{
	move Thigh1 to y-axis [0.] now;
	move Thigh2 to x-axis [0.] now;
	move Thigh2 to y-axis [0.] now;
	move Foot2 to x-axis [0.] now;
	move Leg1 to x-axis [0.] now;
	sleep 200;
}

activatescr()
{
	if( TRUE )
	{
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to x-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		move Foot2 to x-axis [0.] now;
		move Leg1 to x-axis [0.] now;
		move missile1 to z-axis [0.] now;
		move missile1 to z-axis [9.] speed [19.];
		move missile2 to z-axis [0.] now;
		move missile2 to z-axis [9.] speed [19.];
		sleep 493;
	}
	sleep 9;
}

deactivatescr()
{
	if( TRUE )
	{
		move Thigh1 to y-axis [0.] now;
		move Thigh2 to x-axis [0.] now;
		move Thigh2 to y-axis [0.] now;
		move Foot2 to x-axis [0.] now;
		move Leg1 to x-axis [0.] now;
		move missile1 to z-axis [9.] now;
		move missile1 to z-axis [0.] speed [925.];
		move missile2 to z-axis [9.] now;
		move missile2 to z-axis [0.] speed [920.];
		sleep 10;
	}
	sleep 10;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	call-script activatescr();
	Static_Var_2 = 1;
}

Stop()
{
	Static_Var_2 = 0;
	call-script deactivatescr();
}

InitState()
{
	Static_Var_8 = 1;
	Static_Var_9 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_9 )
	{
		Static_Var_8 = requestedstate;
		return (0);
	}
	Static_Var_9 = 1;
	currentstate = Static_Var_8;
	Static_Var_8 = requestedstate;
	while( Static_Var_8 != currentstate )
	{
		if( Static_Var_8 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_8 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_9 = 0;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_3;
		aiming = Static_Var_4;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				call-script stand();
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 1;
	Static_Var_1 = 1;
	hide missile1;
	hide missile2;
	Static_Var_2 = 0;
	Static_Var_6 = 200;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_6 = Func_Var_1;
}

StartMoving()
{
	Static_Var_3 = 1;
}

StopMoving()
{
	Static_Var_3 = 0;
}

RestoreAfterDelay()
{
	sleep Static_Var_6;
	turn head to y-axis <0.> speed <90.>;
	turn launcher to x-axis <0.> speed <45.>;
	Static_Var_4 = 0;
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal 2;
	set-signal-mask 2;
	Static_Var_4 = 1;
	while( !Static_Var_5 )
	{
		sleep 100;
	}
	turn head to y-axis heading speed <150.>;
	turn launcher to x-axis <-90.> speed <200.>;
	wait-for-turn head around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Static_Var_1 == 1 )
	{
		Static_Var_1 = 2;
		return (0);
	}
	if( Static_Var_1 == 2 )
	{
		Static_Var_2 = 0;
		Static_Var_1 = 1;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 1 )
	{
		piecenum = missile1;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = missile2;
	}
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode Foot1 type BITMAPONLY | BITMAP3;
		explode Foot2 type BITMAPONLY | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode head type BITMAPONLY | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode Leg1 type BITMAPONLY | BITMAP2;
		explode Leg2 type BITMAPONLY | BITMAP2;
		explode missile1 type BITMAPONLY | BITMAP3;
		explode missile2 type BITMAPONLY | BITMAP3;
		explode Thigh1 type BITMAPONLY | BITMAP4;
		explode Thigh2 type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Foot1 type FALL | BITMAP3;
		explode Foot2 type FALL | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode head type FALL | SMOKE | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode Leg1 type FALL | BITMAP2;
		explode Leg2 type FALL | BITMAP2;
		explode missile1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode missile2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Thigh1 type FALL | BITMAP4;
		explode Thigh2 type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode Foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode head type FALL | SMOKE | FIRE | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode Leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode Leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode missile1 type FALL | SMOKE | FIRE | BITMAP3;
		explode missile2 type FALL | SMOKE | FIRE | BITMAP3;
		explode Thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode Thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode Foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ground type BITMAPONLY | BITMAP3;
	explode head type FALL | SMOKE | FIRE | BITMAP5;
	explode launcher type BITMAPONLY | BITMAP1;
	explode Leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode Leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode missile1 type FALL | SMOKE | FIRE | BITMAP3;
	explode missile2 type FALL | SMOKE | FIRE | BITMAP3;
	explode Thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode Thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
