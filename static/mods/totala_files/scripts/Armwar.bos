#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, gunflare, emgflare, hips, l_thigh, r_thigh, head, luparm,
       ruparm, rarm, larm, rleg, rfoot, lleg, lfoot, lemg,
       rgun;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;


walk()
{
	if( TRUE )
	{
		move hips to y-axis [0.] now;
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] now;
		move l_thigh to y-axis [0.] speed [3.];
		move r_thigh to y-axis [0.] now;
		move r_thigh to y-axis [0.] speed [1.];
		move torso to y-axis [0.] now;
		move torso to y-axis [-0.] speed [2.];
		turn hips to x-axis <7.> now;
		turn hips to x-axis <9.> speed <50.>;
		turn l_thigh to x-axis <18.> now;
		turn l_thigh to x-axis <20.> speed <46.>;
		turn r_thigh to x-axis <-38.> now;
		turn r_thigh to x-axis <-33.> speed <82.>;
		turn torso to y-axis <-9.> now;
		turn torso to y-axis <-7.> speed <35.>;
		turn head to y-axis <10.> now;
		turn head to y-axis <7.> speed <43.>;
		turn luparm to x-axis <-20.> now;
		turn luparm to x-axis <-14.> speed <104.>;
		turn ruparm to x-axis <22.> now;
		turn ruparm to x-axis <26.> speed <89.>;
		turn rarm to x-axis <25.> now;
		turn rarm to x-axis <45.> speed <430.>;
		turn larm to x-axis <0.> now;
		turn larm to x-axis <-8.> speed <179.>;
		turn rleg to x-axis <17.> now;
		turn rleg to x-axis <13.> speed <78.>;
		turn rfoot to x-axis <-23.> now;
		turn rfoot to x-axis <-13.> speed <175.>;
		turn lleg to x-axis <0.> now;
		turn lleg to x-axis <10.> speed <215.>;
		turn lfoot to x-axis <-17.> now;
		turn lfoot to x-axis <-10.> speed <136.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [3.];
		move r_thigh to y-axis [0.] speed [1.];
		move torso to y-axis [-0.] speed [2.];
		turn hips to x-axis <11.> speed <50.>;
		turn l_thigh to x-axis <22.> speed <46.>;
		turn r_thigh to x-axis <-29.> speed <82.>;
		turn torso to y-axis <-5.> speed <35.>;
		turn head to y-axis <5.> speed <43.>;
		turn luparm to x-axis <-9.> speed <104.>;
		turn ruparm to x-axis <30.> speed <89.>;
		turn rarm to x-axis <66.> speed <430.>;
		turn larm to x-axis <-17.> speed <179.>;
		turn rleg to x-axis <9.> speed <78.>;
		turn rfoot to x-axis <8.> speed <462.>;
		turn lleg to x-axis <21.> speed <215.>;
		turn lfoot to x-axis <-3.> speed <136.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [4.];
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [0.] speed [2.];
		move torso to y-axis [1.] speed [7.];
		turn hips to x-axis <9.> speed <62.>;
		turn l_thigh to x-axis <7.> speed <351.>;
		turn r_thigh to x-axis <-20.> speed <221.>;
		turn torso to y-axis <-3.> speed <46.>;
		turn head to y-axis <3.> speed <54.>;
		turn luparm to x-axis <0.> speed <209.>;
		turn ruparm to x-axis <16.> speed <326.>;
		turn rarm to x-axis <62.> speed <108.>;
		turn larm to x-axis <-3.> speed <334.>;
		turn rleg to x-axis <7.> speed <54.>;
		turn rfoot to x-axis <4.> speed <104.>;
		turn lleg to x-axis <27.> speed <163.>;
		turn lfoot to x-axis <-10.> speed <163.>;
		sleep 42;
	}
	if( TRUE )
	{
		move hips to y-axis [0.] speed [3.];
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [0.] speed [2.];
		move torso to y-axis [0.] speed [6.];
		turn hips to x-axis <6.> speed <58.>;
		turn l_thigh to x-axis <-7.> speed <328.>;
		turn r_thigh to x-axis <-11.> speed <207.>;
		turn torso to y-axis <-1.> speed <42.>;
		turn head to y-axis <1.> speed <50.>;
		turn luparm to x-axis <8.> speed <195.>;
		turn ruparm to x-axis <3.> speed <304.>;
		turn rarm to x-axis <57.> speed <101.>;
		turn larm to x-axis <10.> speed <312.>;
		turn rleg to x-axis <4.> speed <50.>;
		turn rfoot to x-axis <0.> speed <97.>;
		turn lleg to x-axis <34.> speed <152.>;
		turn lfoot to x-axis <-17.> speed <152.>;
		sleep 45;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [4.];
		move torso to y-axis [0.] speed [2.];
		turn hips to x-axis <5.> speed <22.>;
		turn l_thigh to x-axis <-13.> speed <91.>;
		turn r_thigh to x-axis <0.> speed <165.>;
		turn torso to y-axis <2.> speed <54.>;
		turn head to y-axis <-2.> speed <44.>;
		turn luparm to x-axis <12.> speed <64.>;
		turn ruparm to x-axis <-1.> speed <71.>;
		turn rarm to x-axis <43.> speed <198.>;
		turn larm to x-axis <14.> speed <54.>;
		turn rfoot to x-axis <-8.> speed <113.>;
		turn lleg to x-axis <23.> speed <158.>;
		turn lfoot to x-axis <-12.> speed <69.>;
		sleep 71;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [4.];
		move torso to y-axis [0.] speed [2.];
		turn hips to x-axis <3.> speed <21.>;
		turn l_thigh to x-axis <-20.> speed <90.>;
		turn r_thigh to x-axis <12.> speed <163.>;
		turn torso to y-axis <5.> speed <53.>;
		turn head to y-axis <-5.> speed <43.>;
		turn luparm to x-axis <17.> speed <63.>;
		turn ruparm to x-axis <-7.> speed <70.>;
		turn rarm to x-axis <29.> speed <195.>;
		turn larm to x-axis <18.> speed <53.>;
		turn rfoot to x-axis <-16.> speed <112.>;
		turn lleg to x-axis <12.> speed <156.>;
		turn lfoot to x-axis <-7.> speed <68.>;
		sleep 72;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [3.];
		turn hips to x-axis <5.> speed <18.>;
		turn l_thigh to x-axis <-28.> speed <92.>;
		turn r_thigh to x-axis <14.> speed <26.>;
		turn torso to y-axis <7.> speed <18.>;
		turn head to y-axis <-7.> speed <22.>;
		turn luparm to x-axis <19.> speed <22.>;
		turn ruparm to x-axis <-13.> speed <68.>;
		turn rarm to x-axis <14.> speed <158.>;
		turn larm to x-axis <26.> speed <92.>;
		turn rleg to x-axis <2.> speed <26.>;
		turn rfoot to x-axis <-16.> speed <0.>;
		turn lleg to x-axis <14.> speed <26.>;
		turn lfoot to x-axis <-16.> speed <100.>;
		sleep 93;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [3.];
		turn hips to x-axis <7.> speed <18.>;
		turn l_thigh to x-axis <-37.> speed <90.>;
		turn r_thigh to x-axis <17.> speed <25.>;
		turn torso to y-axis <9.> speed <18.>;
		turn head to y-axis <-9.> speed <22.>;
		turn luparm to x-axis <21.> speed <22.>;
		turn ruparm to x-axis <-19.> speed <66.>;
		turn rarm to x-axis <0.> speed <155.>;
		turn larm to x-axis <35.> speed <90.>;
		turn rleg to x-axis <0.> speed <25.>;
		turn rfoot to x-axis <-16.> speed <0.>;
		turn lleg to x-axis <17.> speed <25.>;
		turn lfoot to x-axis <-26.> speed <98.>;
		sleep 95;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [1.];
		move r_thigh to y-axis [0.] speed [3.];
		move torso to y-axis [-0.] speed [2.];
		turn hips to x-axis <9.> speed <50.>;
		turn l_thigh to x-axis <-33.> speed <78.>;
		turn r_thigh to x-axis <19.> speed <53.>;
		turn torso to y-axis <7.> speed <39.>;
		turn head to y-axis <-7.> speed <35.>;
		turn luparm to x-axis <25.> speed <89.>;
		turn ruparm to x-axis <-14.> speed <104.>;
		turn rarm to x-axis <-7.> speed <143.>;
		turn larm to x-axis <50.> speed <315.>;
		turn rleg to x-axis <10.> speed <218.>;
		turn rfoot to x-axis <-8.> speed <161.>;
		turn lleg to x-axis <13.> speed <78.>;
		turn lfoot to x-axis <-9.> speed <344.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [1.];
		move r_thigh to y-axis [0.] speed [3.];
		move torso to y-axis [-0.] speed [2.];
		turn hips to x-axis <11.> speed <50.>;
		turn l_thigh to x-axis <-29.> speed <78.>;
		turn r_thigh to x-axis <22.> speed <53.>;
		turn torso to y-axis <5.> speed <39.>;
		turn head to y-axis <-5.> speed <35.>;
		turn luparm to x-axis <30.> speed <89.>;
		turn ruparm to x-axis <-9.> speed <104.>;
		turn rarm to x-axis <-14.> speed <143.>;
		turn larm to x-axis <66.> speed <315.>;
		turn rleg to x-axis <21.> speed <218.>;
		turn rfoot to x-axis <0.> speed <161.>;
		turn lleg to x-axis <9.> speed <78.>;
		turn lfoot to x-axis <7.> speed <344.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [2.];
		move r_thigh to y-axis [0.] speed [0.];
		move torso to y-axis [1.] speed [6.];
		turn hips to x-axis <9.> speed <56.>;
		turn l_thigh to x-axis <-20.> speed <194.>;
		turn r_thigh to x-axis <7.> speed <314.>;
		turn torso to y-axis <3.> speed <37.>;
		turn head to y-axis <-4.> speed <41.>;
		turn luparm to x-axis <16.> speed <288.>;
		turn ruparm to x-axis <0.> speed <187.>;
		turn rarm to x-axis <-1.> speed <265.>;
		turn larm to x-axis <61.> speed <97.>;
		turn rleg to x-axis <36.> speed <329.>;
		turn rfoot to x-axis <-5.> speed <104.>;
		turn lleg to x-axis <7.> speed <52.>;
		turn lfoot to x-axis <3.> speed <82.>;
		sleep 47;
	}
	if( TRUE )
	{
		move hips to y-axis [0.] speed [3.];
		move l_thigh to y-axis [0.] speed [2.];
		move r_thigh to y-axis [0.] speed [0.];
		move torso to y-axis [0.] speed [6.];
		turn hips to x-axis <6.> speed <54.>;
		turn l_thigh to x-axis <-11.> speed <190.>;
		turn r_thigh to x-axis <-7.> speed <307.>;
		turn torso to y-axis <2.> speed <36.>;
		turn head to y-axis <-2.> speed <40.>;
		turn luparm to x-axis <3.> speed <282.>;
		turn ruparm to x-axis <8.> speed <183.>;
		turn rarm to x-axis <10.> speed <260.>;
		turn larm to x-axis <57.> speed <95.>;
		turn rleg to x-axis <52.> speed <322.>;
		turn rfoot to x-axis <-10.> speed <102.>;
		turn lleg to x-axis <4.> speed <51.>;
		turn lfoot to x-axis <0.> speed <80.>;
		sleep 48;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [4.];
		move torso to y-axis [0.] speed [2.];
		turn hips to x-axis <5.> speed <21.>;
		turn l_thigh to x-axis <0.> speed <161.>;
		turn r_thigh to x-axis <-13.> speed <90.>;
		turn torso to y-axis <-1.> speed <52.>;
		turn head to y-axis <1.> speed <52.>;
		turn luparm to x-axis <-2.> speed <71.>;
		turn ruparm to x-axis <13.> speed <66.>;
		turn rarm to x-axis <14.> speed <54.>;
		turn larm to x-axis <43.> speed <185.>;
		turn rleg to x-axis <39.> speed <180.>;
		turn rfoot to x-axis <-7.> speed <40.>;
		turn lleg to x-axis <4.> speed <2.>;
		turn lfoot to x-axis <-8.> speed <109.>;
		sleep 74;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [3.];
		move torso to y-axis [0.] speed [2.];
		turn hips to x-axis <3.> speed <20.>;
		turn l_thigh to x-axis <12.> speed <157.>;
		turn r_thigh to x-axis <-20.> speed <87.>;
		turn torso to y-axis <-5.> speed <50.>;
		turn head to y-axis <5.> speed <50.>;
		turn luparm to x-axis <-7.> speed <69.>;
		turn ruparm to x-axis <17.> speed <64.>;
		turn rarm to x-axis <18.> speed <53.>;
		turn larm to x-axis <29.> speed <180.>;
		turn rleg to x-axis <25.> speed <175.>;
		turn rfoot to x-axis <-4.> speed <39.>;
		turn lleg to x-axis <4.> speed <2.>;
		turn lfoot to x-axis <-16.> speed <106.>;
		sleep 76;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [3.];
		turn hips to x-axis <5.> speed <18.>;
		turn l_thigh to x-axis <15.> speed <28.>;
		turn r_thigh to x-axis <-29.> speed <93.>;
		turn torso to y-axis <-7.> speed <18.>;
		turn head to y-axis <7.> speed <22.>;
		turn luparm to x-axis <-13.> speed <65.>;
		turn ruparm to x-axis <19.> speed <20.>;
		turn rarm to x-axis <21.> speed <29.>;
		turn larm to x-axis <14.> speed <158.>;
		turn rleg to x-axis <21.> speed <44.>;
		turn rfoot to x-axis <-12.> speed <86.>;
		turn lleg to x-axis <2.> speed <22.>;
		turn lfoot to x-axis <-16.> speed <3.>;
		sleep 94;
	}
	sleep 94;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	if( TRUE )
	{
		move hips to y-axis [0.] now;
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] now;
		move l_thigh to y-axis [0.] speed [3.];
		move r_thigh to y-axis [0.] now;
		move r_thigh to y-axis [0.] speed [1.];
		turn hips to x-axis <7.> now;
		turn hips to x-axis <9.> speed <50.>;
		turn l_thigh to x-axis <18.> now;
		turn l_thigh to x-axis <20.> speed <46.>;
		turn r_thigh to x-axis <-38.> now;
		turn r_thigh to x-axis <-33.> speed <82.>;
		turn rleg to x-axis <17.> now;
		turn rleg to x-axis <13.> speed <78.>;
		turn rfoot to x-axis <-23.> now;
		turn rfoot to x-axis <-13.> speed <175.>;
		turn lleg to x-axis <0.> now;
		turn lleg to x-axis <10.> speed <215.>;
		turn lfoot to x-axis <-17.> now;
		turn lfoot to x-axis <-10.> speed <136.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [3.];
		move r_thigh to y-axis [0.] speed [1.];
		turn hips to x-axis <11.> speed <50.>;
		turn l_thigh to x-axis <22.> speed <46.>;
		turn r_thigh to x-axis <-29.> speed <82.>;
		turn rleg to x-axis <9.> speed <78.>;
		turn rfoot to x-axis <8.> speed <462.>;
		turn lleg to x-axis <21.> speed <215.>;
		turn lfoot to x-axis <-3.> speed <136.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [4.];
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [0.] speed [2.];
		turn hips to x-axis <9.> speed <62.>;
		turn l_thigh to x-axis <7.> speed <351.>;
		turn r_thigh to x-axis <-20.> speed <221.>;
		turn rleg to x-axis <7.> speed <54.>;
		turn rfoot to x-axis <4.> speed <104.>;
		turn lleg to x-axis <27.> speed <163.>;
		turn lfoot to x-axis <-10.> speed <163.>;
		sleep 42;
	}
	if( TRUE )
	{
		move hips to y-axis [0.] speed [3.];
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [0.] speed [2.];
		turn hips to x-axis <6.> speed <58.>;
		turn l_thigh to x-axis <-7.> speed <328.>;
		turn r_thigh to x-axis <-11.> speed <207.>;
		turn rleg to x-axis <4.> speed <50.>;
		turn rfoot to x-axis <0.> speed <97.>;
		turn lleg to x-axis <34.> speed <152.>;
		turn lfoot to x-axis <-17.> speed <152.>;
		sleep 45;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [4.];
		turn hips to x-axis <5.> speed <22.>;
		turn l_thigh to x-axis <-13.> speed <91.>;
		turn r_thigh to x-axis <0.> speed <165.>;
		turn rfoot to x-axis <-8.> speed <113.>;
		turn lleg to x-axis <23.> speed <158.>;
		turn lfoot to x-axis <-12.> speed <69.>;
		sleep 71;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [4.];
		turn hips to x-axis <3.> speed <21.>;
		turn l_thigh to x-axis <-20.> speed <90.>;
		turn r_thigh to x-axis <12.> speed <163.>;
		turn rfoot to x-axis <-16.> speed <112.>;
		turn lleg to x-axis <12.> speed <156.>;
		turn lfoot to x-axis <-7.> speed <68.>;
		sleep 72;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [1.] speed [3.];
		turn hips to x-axis <5.> speed <18.>;
		turn l_thigh to x-axis <-28.> speed <92.>;
		turn r_thigh to x-axis <14.> speed <26.>;
		turn rleg to x-axis <2.> speed <26.>;
		turn rfoot to x-axis <-16.> speed <0.>;
		turn lleg to x-axis <14.> speed <26.>;
		turn lfoot to x-axis <-16.> speed <100.>;
		sleep 93;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [3.];
		turn hips to x-axis <7.> speed <18.>;
		turn l_thigh to x-axis <-37.> speed <90.>;
		turn r_thigh to x-axis <17.> speed <25.>;
		turn rleg to x-axis <0.> speed <25.>;
		turn rfoot to x-axis <-16.> speed <0.>;
		turn lleg to x-axis <17.> speed <25.>;
		turn lfoot to x-axis <-26.> speed <98.>;
		sleep 95;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [1.];
		move r_thigh to y-axis [0.] speed [3.];
		turn hips to x-axis <9.> speed <50.>;
		turn l_thigh to x-axis <-33.> speed <78.>;
		turn r_thigh to x-axis <19.> speed <53.>;
		turn rleg to x-axis <10.> speed <218.>;
		turn rfoot to x-axis <-8.> speed <161.>;
		turn lleg to x-axis <13.> speed <78.>;
		turn lfoot to x-axis <-9.> speed <344.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [1.];
		move r_thigh to y-axis [0.] speed [3.];
		turn hips to x-axis <11.> speed <50.>;
		turn l_thigh to x-axis <-29.> speed <78.>;
		turn r_thigh to x-axis <22.> speed <53.>;
		turn rleg to x-axis <21.> speed <218.>;
		turn rfoot to x-axis <0.> speed <161.>;
		turn lleg to x-axis <9.> speed <78.>;
		turn lfoot to x-axis <7.> speed <344.>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.] speed [3.];
		move l_thigh to y-axis [0.] speed [2.];
		move r_thigh to y-axis [0.] speed [0.];
		turn hips to x-axis <9.> speed <56.>;
		turn l_thigh to x-axis <-20.> speed <194.>;
		turn r_thigh to x-axis <7.> speed <314.>;
		turn rleg to x-axis <36.> speed <329.>;
		turn rfoot to x-axis <-5.> speed <104.>;
		turn lleg to x-axis <7.> speed <52.>;
		turn lfoot to x-axis <3.> speed <82.>;
		sleep 47;
	}
	if( TRUE )
	{
		move hips to y-axis [0.] speed [3.];
		move l_thigh to y-axis [0.] speed [2.];
		move r_thigh to y-axis [0.] speed [0.];
		turn hips to x-axis <6.> speed <54.>;
		turn l_thigh to x-axis <-11.> speed <190.>;
		turn r_thigh to x-axis <-7.> speed <307.>;
		turn rleg to x-axis <52.> speed <322.>;
		turn rfoot to x-axis <-10.> speed <102.>;
		turn lleg to x-axis <4.> speed <51.>;
		turn lfoot to x-axis <0.> speed <80.>;
		sleep 48;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [4.];
		turn hips to x-axis <5.> speed <21.>;
		turn l_thigh to x-axis <0.> speed <161.>;
		turn r_thigh to x-axis <-13.> speed <90.>;
		turn rleg to x-axis <39.> speed <180.>;
		turn rfoot to x-axis <-7.> speed <40.>;
		turn lleg to x-axis <4.> speed <2.>;
		turn lfoot to x-axis <-8.> speed <109.>;
		sleep 74;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [3.];
		turn hips to x-axis <3.> speed <20.>;
		turn l_thigh to x-axis <12.> speed <157.>;
		turn r_thigh to x-axis <-20.> speed <87.>;
		turn rleg to x-axis <25.> speed <175.>;
		turn rfoot to x-axis <-4.> speed <39.>;
		turn lleg to x-axis <4.> speed <2.>;
		turn lfoot to x-axis <-16.> speed <106.>;
		sleep 76;
	}
	if( TRUE )
	{
		move l_thigh to y-axis [0.] speed [0.];
		move r_thigh to y-axis [1.] speed [3.];
		turn hips to x-axis <5.> speed <18.>;
		turn l_thigh to x-axis <15.> speed <28.>;
		turn r_thigh to x-axis <-29.> speed <93.>;
		turn rleg to x-axis <21.> speed <44.>;
		turn rfoot to x-axis <-12.> speed <86.>;
		turn lleg to x-axis <2.> speed <22.>;
		turn lfoot to x-axis <-16.> speed <3.>;
		sleep 94;
	}
	sleep 94;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_1;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn r_thigh to x-axis <0.> speed <200.>;
				turn rleg to x-axis <0.> speed <200.>;
				turn rfoot to x-axis <0.> speed <200.>;
				turn l_thigh to x-axis <0.> speed <200.>;
				turn lleg to x-axis <0.> speed <200.>;
				turn lfoot to x-axis <0.> speed <200.>;
				if( !aiming )
				{
					turn torso to y-axis <0.> speed <90.>;
					turn rarm to x-axis <0.> speed <200.>;
					turn ruparm to x-axis <0.> speed <200.>;
					turn larm to x-axis <0.> speed <200.>;
					turn luparm to x-axis <0.> speed <200.>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide gunflare;
	hide emgflare;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 3000;
	Static_Var_5 = 1;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_4 = Func_Var_1 * 2;
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep Static_Var_4;
	turn torso to y-axis <0.> speed <90.>;
	turn ruparm to x-axis <0.> speed <45.>;
	turn rarm to y-axis <0.> speed <45.>;
	turn luparm to x-axis <0.> speed <45.>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn luparm around x-axis;
	Static_Var_2 = 0;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( Static_Var_5 == 1 )
	{
		piecenum = gunflare;
	}
	if( Static_Var_5 == 2 )
	{
		piecenum = emgflare;
	}
}

FirePrimary()
{
	if( Static_Var_5 == 1 )
	{
		show gunflare;
		sleep 100;
		hide gunflare;
		Static_Var_5 = 2;
		return (0);
	}
	if( Static_Var_5 == 2 )
	{
		show emgflare;
		sleep 100;
		hide emgflare;
		Static_Var_5 = 1;
	}
}

AimPrimary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	Static_Var_2 = 1;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <200.>;
	turn ruparm to x-axis <0.> - pitch speed <200.>;
	turn luparm to x-axis <0.> - pitch speed <200.>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lemg type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode larm type BITMAPONLY | BITMAP5;
		explode l_thigh type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP2;
		explode rgun type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rarm type BITMAPONLY | BITMAP2;
		explode r_thigh type BITMAPONLY | BITMAP3;
		explode ruparm type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lemg type FALL | BITMAP2;
		explode lfoot type FALL | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode larm type FALL | BITMAP5;
		explode l_thigh type FALL | BITMAP1;
		explode luparm type FALL | BITMAP2;
		explode rgun type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rarm type FALL | BITMAP2;
		explode r_thigh type FALL | BITMAP3;
		explode ruparm type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lemg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode l_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode r_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lemg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode l_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode r_thigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
