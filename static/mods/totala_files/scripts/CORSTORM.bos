#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret, ground;

static-var  Static_Var_1;


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move pelvis to y-axis [1.] now;
			move rfoot to z-axis [0.] now;
			move lfoot to z-axis [0.] now;
			move launcher to y-axis [0.] now;
			turn pelvis to y-axis <0.> now;
			turn torso to x-axis <-10.> now;
			turn lthigh to x-axis <12.> now;
			turn rthigh to x-axis <8.> now;
			turn rthigh to y-axis <0.> now;
			turn rleg to x-axis <0.> now;
			turn rfoot to x-axis <5.> now;
			turn lleg to x-axis <-25.> now;
			turn lfoot to x-axis <13.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <0.> now;
			turn torso to x-axis <-8.> now;
			turn lthigh to x-axis <22.> now;
			turn rthigh to x-axis <-14.> now;
			turn rleg to x-axis <-5.> now;
			turn rfoot to x-axis <5.> now;
			turn lleg to x-axis <-9.> now;
			turn lfoot to x-axis <-8.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <-6.> now;
			turn lthigh to x-axis <28.> now;
			turn rthigh to x-axis <-15.> now;
			turn rleg to x-axis <-52.> now;
			turn rfoot to x-axis <46.> now;
			turn lleg to x-axis <-4.> now;
			turn lfoot to x-axis <-14.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <2.> now;
			turn lthigh to x-axis <37.> now;
			turn rthigh to x-axis <-16.> now;
			turn rleg to x-axis <-31.> now;
			turn rfoot to x-axis <45.> now;
			turn lleg to x-axis <0.> now;
			turn lfoot to x-axis <-14.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <-2.> now;
			turn lthigh to x-axis <25.> now;
			turn rthigh to x-axis <-11.> now;
			turn rleg to x-axis <-23.> now;
			turn rfoot to x-axis <35.> now;
			turn lleg to x-axis <8.> now;
			turn lfoot to x-axis <-13.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <-8.> now;
			turn lthigh to x-axis <10.> now;
			turn rthigh to x-axis <-4.> now;
			turn rleg to x-axis <-29.> now;
			turn rfoot to x-axis <33.> now;
			turn lleg to x-axis <1.> now;
			turn lfoot to x-axis <-7.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [1.] now;
			turn pelvis to y-axis <0.> now;
			turn torso to x-axis <-10.> now;
			turn lthigh to x-axis <-14.> now;
			turn rthigh to x-axis <12.> now;
			turn rleg to x-axis <-16.> now;
			turn rfoot to x-axis <4.> now;
			turn lleg to x-axis <5.> now;
			turn lfoot to x-axis <-3.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <-8.> now;
			turn lthigh to x-axis <-19.> now;
			turn rthigh to x-axis <21.> now;
			turn rleg to x-axis <-8.> now;
			turn rfoot to x-axis <-10.> now;
			turn lleg to x-axis <-24.> now;
			turn lfoot to x-axis <26.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <0.> now;
			turn torso to x-axis <-6.> now;
			turn lthigh to x-axis <-15.> now;
			turn rthigh to x-axis <30.> now;
			turn rleg to x-axis <-4.> now;
			turn rfoot to x-axis <-13.> now;
			turn lleg to x-axis <-49.> now;
			turn lfoot to x-axis <44.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [0.] now;
			turn pelvis to y-axis <0.> now;
			turn torso to x-axis <2.> now;
			turn lthigh to x-axis <-16.> now;
			turn rthigh to x-axis <39.> now;
			turn rthigh to y-axis <0.> now;
			turn rleg to x-axis <0.> now;
			turn rfoot to x-axis <-14.> now;
			turn lleg to x-axis <-30.> now;
			turn lfoot to x-axis <45.> now;
			sleep 90;
		}
		if( TRUE )
		{
			move pelvis to y-axis [1.] now;
			turn pelvis to y-axis <-0.> now;
			turn torso to x-axis <-2.> now;
			turn lthigh to x-axis <-2.> now;
			turn rthigh to x-axis <24.> now;
			turn rleg to x-axis <13.> now;
			turn rfoot to x-axis <-2.> now;
			turn lleg to x-axis <-37.> now;
			turn lfoot to x-axis <40.> now;
			sleep 90;
		}
		move pelvis to y-axis [1.] now;
		turn pelvis to y-axis <0.> now;
		turn torso to x-axis <-8.> now;
		turn lthigh to x-axis <5.> now;
		turn rthigh to x-axis <17.> now;
		turn rleg to x-axis <8.> now;
		turn rfoot to x-axis <4.> now;
		turn lleg to x-axis <-33.> now;
		turn lfoot to x-axis <28.> now;
		sleep 90;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	call-script walk();
}

StopMoving()
{
	signal 2;
	set-signal-mask 2;
	move pelvis to y-axis [0.] speed [1.];
	turn pelvis to y-axis <0.> speed <150.>;
	turn pelvis to z-axis <0.> speed <150.>;
	turn rthigh to x-axis <0.> speed <150.>;
	turn rleg to x-axis <0.> speed <150.>;
	turn rfoot to x-axis <0.> speed <150.>;
	turn lthigh to x-axis <0.> speed <150.>;
	turn lleg to x-axis <0.> speed <150.>;
	turn lfoot to x-axis <0.> speed <150.>;
}

Create()
{
	Static_Var_1 = 0;
	start-script StopMoving();
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = rfirept;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = lfirept;
	}
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.> speed <90.>;
	turn launcher to x-axis <0.> speed <45.>;
}

AimPrimary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret to y-axis heading speed <90.>;
	turn launcher to x-axis <0.> - pitch speed <45.>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Static_Var_1 == 0 )
	{
		Static_Var_1 = 1;
		return (0);
	}
	if( Static_Var_1 == 1 )
	{
		Static_Var_1 = 0;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lfirept type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rfirept type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode launcher type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
