#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, launcher, charge, plunger, flare;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	dont-cache turret;
	dont-cache launcher;
	dont-cache charge;
	dont-cache plunger;
	dont-shade turret;
	dont-shade launcher;
	dont-shade charge;
	dont-shade plunger;
	start-script SmokeUnit();
	move plunger to z-axis [-4.] now;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <200.>;
	wait-for-turn turret around y-axis;
	return (1);
}

FirePrimary()
{
	move plunger to z-axis [0.] speed [100.];
	wait-for-move plunger along z-axis;
	hide charge;
	sleep 250;
	move plunger to z-axis [-4.] speed [4.];
	move launcher to y-axis [-4.] speed [8.];
	wait-for-move launcher along y-axis;
	show charge;
	move launcher to y-axis [0.] speed [8.];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	hide charge;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP1;
		explode plunger type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		explode launcher type BITMAPONLY | BITMAP1;
		explode plunger type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP5;
		explode turret type SHATTER | BITMAP3;
		explode plunger type FALL | BITMAP4;
		explode launcher type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP5;
	explode turret type SHATTER | BITMAP3;
	explode plunger type FALL | BITMAP4;
	explode launcher type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
