#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  nanospray, turret, rfoot, lfoot, pelvis, lflap, rflap, guncover,
       nozzle, arms, nanobody2, ground;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6;


walk()
{
	if( TRUE )
	{
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-2.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <2.> now;
		turn rfoot to x-axis <-2.> now;
		turn lfoot to x-axis <-2.> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <0.> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-2.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-1.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-1.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-2.> now;
		turn lfoot to x-axis <2.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to z-axis [-1.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-3.> now;
		turn rfoot to x-axis <-5.> now;
		turn lfoot to x-axis <4.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-5.> now;
		turn rfoot to x-axis <-6.> now;
		turn lfoot to x-axis <5.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [-0.] now;
		turn pelvis to x-axis <-4.> now;
		turn rfoot to x-axis <-19.> now;
		turn lfoot to x-axis <4.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [1.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [-2.] now;
		turn pelvis to x-axis <-2.> now;
		turn lfoot to x-axis <2.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [2.] now;
		move lfoot to y-axis [0.] now;
		turn pelvis to x-axis <2.> now;
		turn rfoot to x-axis <-2.> now;
		turn lfoot to x-axis <-2.> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <0.> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [-0.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [-2.] now;
		turn pelvis to x-axis <-1.> now;
		turn rfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [-0.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [-1.] now;
		turn pelvis to x-axis <-2.> now;
		turn rfoot to x-axis <2.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [1.] now;
		move lfoot to z-axis [-0.] now;
		turn pelvis to x-axis <-3.> now;
		turn rfoot to x-axis <3.> now;
		turn lfoot to x-axis <-5.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-5.> now;
		turn rfoot to x-axis <5.> now;
		turn lfoot to x-axis <-6.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-4.> now;
		turn rfoot to x-axis <4.> now;
		turn lfoot to x-axis <-19.> now;
		sleep 47;
	}
	move pelvis to y-axis [0.] now;
	move rfoot to y-axis [-0.] now;
	move rfoot to z-axis [-2.] now;
	move lfoot to y-axis [1.] now;
	move lfoot to z-axis [1.] now;
	turn pelvis to x-axis <2.> now;
	turn rfoot to x-axis <-2.> now;
	turn lfoot to x-axis <-19.> now;
	sleep 47;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	if( TRUE )
	{
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-2.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <2.> now;
		turn rfoot to x-axis <-2.> now;
		turn lfoot to x-axis <-2.> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <0.> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-2.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-1.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [-1.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-2.> now;
		turn lfoot to x-axis <2.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to z-axis [-1.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-3.> now;
		turn rfoot to x-axis <-5.> now;
		turn lfoot to x-axis <4.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-5.> now;
		turn rfoot to x-axis <-6.> now;
		turn lfoot to x-axis <5.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		move lfoot to z-axis [-0.] now;
		turn pelvis to x-axis <-4.> now;
		turn rfoot to x-axis <-19.> now;
		turn lfoot to x-axis <4.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [1.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [-0.] now;
		move lfoot to z-axis [-2.] now;
		turn pelvis to x-axis <-2.> now;
		turn lfoot to x-axis <2.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		move rfoot to z-axis [2.] now;
		move lfoot to y-axis [0.] now;
		turn pelvis to x-axis <2.> now;
		turn rfoot to x-axis <-2.> now;
		turn lfoot to x-axis <-2.> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.> now;
		turn rfoot to x-axis <0.> now;
		turn lfoot to x-axis <0.> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [-0.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [-2.] now;
		turn pelvis to x-axis <-1.> now;
		turn rfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		move rfoot to y-axis [-0.] now;
		move rfoot to z-axis [1.] now;
		move lfoot to y-axis [0.] now;
		move lfoot to z-axis [-1.] now;
		turn pelvis to x-axis <-2.> now;
		turn rfoot to x-axis <2.> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [1.] now;
		move lfoot to z-axis [-0.] now;
		turn pelvis to x-axis <-3.> now;
		turn rfoot to x-axis <3.> now;
		turn lfoot to x-axis <-5.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [0.] now;
		move lfoot to y-axis [1.] now;
		move lfoot to z-axis [0.] now;
		turn pelvis to x-axis <-5.> now;
		turn rfoot to x-axis <5.> now;
		turn lfoot to x-axis <-6.> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		move rfoot to z-axis [-0.] now;
		move lfoot to z-axis [1.] now;
		turn pelvis to x-axis <-4.> now;
		turn rfoot to x-axis <4.> now;
		turn lfoot to x-axis <-19.> now;
		sleep 47;
	}
	move pelvis to y-axis [0.] now;
	move rfoot to y-axis [-0.] now;
	move rfoot to z-axis [-2.] now;
	move lfoot to y-axis [1.] now;
	move lfoot to z-axis [1.] now;
	turn pelvis to x-axis <2.> now;
	turn rfoot to x-axis <-2.> now;
	turn lfoot to x-axis <-19.> now;
	sleep 47;
}

stand()
{
	move rfoot to y-axis [0.] now;
	move lfoot to y-axis [0.] now;
	sleep 200;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = Static_Var_2;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
		}
		if( !Func_Var_1 )
		{
			Static_Var_4 = 1;
			call-script stand();
		}
	}
}

Go()
{
	Static_Var_3 = 1;
	if( TRUE )
	{
		turn lflap to z-axis <0.> now;
		turn lflap to z-axis <97.> speed <190.>;
		turn rflap to z-axis <0.> now;
		turn rflap to z-axis <-97.> speed <190.>;
		sleep 514;
	}
	if( TRUE )
	{
		turn guncover to x-axis <126.> speed <245.>;
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-97.> speed <0.>;
		sleep 518;
	}
	if( TRUE )
	{
		move nozzle to z-axis [0.] speed [0.];
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-97.> speed <0.>;
		turn arms to x-axis <90.> speed <169.>;
		turn nanobody2 to x-axis <-90.> speed <169.>;
		sleep 531;
	}
	if( TRUE )
	{
		move nozzle to z-axis [4.] speed [8.];
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-97.> speed <0.>;
		turn arms to x-axis <90.> speed <0.>;
		turn nanobody2 to x-axis <-90.> speed <0.>;
		sleep 530;
	}
	sleep 529;
	turn turret to y-axis Static_Var_1 speed <160.>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.> speed <160.>;
	wait-for-turn turret around y-axis;
	if( TRUE )
	{
		move nozzle to z-axis [4.] now;
		move nozzle to z-axis [-0.] speed [4.];
		turn guncover to x-axis <127.> now;
		turn lflap to z-axis <98.> now;
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-98.> now;
		turn rflap to z-axis <-97.> speed <0.>;
		turn arms to x-axis <90.> now;
		turn arms to x-axis <90.> speed <0.>;
		turn nanobody2 to x-axis <-90.> now;
		sleep 997;
	}
	if( TRUE )
	{
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-97.> speed <0.>;
		turn arms to x-axis <0.> speed <89.>;
		turn nanobody2 to x-axis <-40.> speed <49.>;
		sleep 1008;
	}
	if( TRUE )
	{
		turn guncover to x-axis <126.> speed <0.>;
		turn lflap to z-axis <97.> speed <0.>;
		turn nanobody2 to x-axis <0.> speed <39.>;
		sleep 1008;
	}
	if( TRUE )
	{
		turn guncover to x-axis <0.> speed <125.>;
		turn lflap to z-axis <97.> speed <0.>;
		turn rflap to z-axis <-97.> speed <0.>;
		sleep 1008;
	}
	if( TRUE )
	{
		turn lflap to z-axis <0.> speed <97.>;
		turn rflap to z-axis <0.> speed <97.>;
		sleep 1008;
	}
	sleep 1008;
	Static_Var_3 = 0;
}

InitState()
{
	Static_Var_5 = 1;
	Static_Var_6 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_6 )
	{
		Static_Var_5 = requestedstate;
		return (0);
	}
	Static_Var_6 = 1;
	currentstate = Static_Var_5;
	Static_Var_5 = requestedstate;
	while( Static_Var_5 != currentstate )
	{
		if( Static_Var_5 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_5 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_6 = 0;
}

Create()
{
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_1 = 0;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	Static_Var_2 = 1;
}

StopMoving()
{
	Static_Var_2 = 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type BITMAPONLY | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type BITMAPONLY | BITMAP2;
		explode nozzle type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type FALL | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | BITMAP2;
		explode nozzle type FALL | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type BITMAPONLY | BITMAP2;
	explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lflap type BITMAPONLY | BITMAP4;
	explode lfoot type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode nanobody2 type BITMAPONLY | BITMAP1;
	explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type BITMAPONLY | BITMAP4;
	explode rflap type BITMAPONLY | BITMAP5;
	explode rfoot type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP2;
}
