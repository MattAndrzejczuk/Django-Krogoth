#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, rfirept, lfirept, lcannon, rcannon, locase, lthigh, rthigh,
       torso, rleg, rfoot, lleg, lfoot, upcase2, canbase, ground;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;


walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		move lcannon to y-axis [0.] now;
		move lcannon to z-axis [0.] now;
		move rcannon to y-axis [0.] now;
		move rcannon to z-axis [0.] now;
		move locase to y-axis [0.] now;
		move rfirept to y-axis [-0.] now;
		move rfirept to z-axis [0.] now;
		move lfirept to y-axis [-0.] now;
		move lfirept to z-axis [0.] now;
		turn lthigh to x-axis <-63.> now;
		turn rthigh to x-axis <4.> now;
		turn torso to z-axis <-5.> now;
		turn rleg to x-axis <83.> now;
		turn rfoot to x-axis <-37.> now;
		turn lleg to x-axis <57.> now;
		turn lfoot to x-axis <5.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-52.> now;
		turn rthigh to x-axis <-8.> now;
		turn torso to z-axis <0.> now;
		turn rleg to x-axis <106.> now;
		turn rfoot to x-axis <-27.> now;
		turn lleg to x-axis <45.> now;
		turn lfoot to x-axis <6.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-39.> now;
		turn rthigh to x-axis <-20.> now;
		turn rleg to x-axis <119.> now;
		turn lleg to x-axis <39.> now;
		turn lfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-29.> now;
		turn rthigh to x-axis <-30.> now;
		turn torso to z-axis <2.> now;
		turn rleg to x-axis <73.> now;
		turn rfoot to x-axis <-34.> now;
		turn lleg to x-axis <30.> now;
		turn lfoot to x-axis <-1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-20.> now;
		turn rthigh to x-axis <-56.> now;
		turn torso to z-axis <8.> now;
		turn rleg to x-axis <58.> now;
		turn lleg to x-axis <41.> now;
		turn lfoot to x-axis <-21.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-17.> now;
		turn rthigh to x-axis <-58.> now;
		turn torso to z-axis <10.> now;
		turn rleg to x-axis <-10.> now;
		turn lleg to x-axis <59.> now;
		turn lfoot to x-axis <-32.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-5.> now;
		turn rthigh to x-axis <-65.> now;
		turn torso to z-axis <10.> now;
		turn rleg to x-axis <36.> now;
		turn lleg to x-axis <53.> now;
		turn lfoot to x-axis <-34.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <3.> now;
		turn rthigh to x-axis <-66.> now;
		turn torso to z-axis <7.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <-8.> now;
		turn lleg to x-axis <57.> now;
		turn lfoot to x-axis <-30.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <5.> now;
		turn rthigh to x-axis <-62.> now;
		turn torso to z-axis <5.> now;
		turn rleg to x-axis <45.> now;
		turn rfoot to x-axis <17.> now;
		turn lleg to x-axis <78.> now;
		turn lfoot to x-axis <-35.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-5.> now;
		turn rthigh to x-axis <-52.> now;
		turn torso to z-axis <0.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <9.> now;
		turn lleg to x-axis <101.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-21.> now;
		turn rthigh to x-axis <-36.> now;
		turn torso to z-axis <0.> now;
		turn rfoot to x-axis <-7.> now;
		turn lleg to x-axis <104.> now;
		turn lfoot to x-axis <-53.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-33.> now;
		turn rthigh to x-axis <-22.> now;
		turn torso to z-axis <-8.> now;
		turn rleg to x-axis <39.> now;
		turn rfoot to x-axis <-13.> now;
		turn lleg to x-axis <85.> now;
		turn lfoot to x-axis <-45.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-69.> now;
		turn rthigh to x-axis <-11.> now;
		turn torso to z-axis <-10.> now;
		turn rleg to x-axis <38.> now;
		turn rfoot to x-axis <-21.> now;
		turn lleg to x-axis <79.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-61.> now;
		turn rthigh to x-axis <4.> now;
		turn torso to z-axis <-9.> now;
		turn rleg to x-axis <26.> now;
		turn rfoot to x-axis <-23.> now;
		turn lleg to x-axis <10.> now;
		sleep 60;
	}
	move pelvis to y-axis [-0.] now;
	turn lthigh to x-axis <-63.> now;
	turn rthigh to x-axis <17.> now;
	turn torso to z-axis <-7.> now;
	turn rleg to x-axis <29.> now;
	turn rfoot to x-axis <-21.> now;
	turn lleg to x-axis <29.> now;
	turn lfoot to x-axis <-1.> now;
	sleep 60;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		move lcannon to y-axis [0.] now;
		move lcannon to z-axis [0.] now;
		move rcannon to y-axis [0.] now;
		move rcannon to z-axis [0.] now;
		move locase to y-axis [0.] now;
		move rfirept to y-axis [-0.] now;
		move rfirept to z-axis [0.] now;
		move lfirept to y-axis [-0.] now;
		move lfirept to z-axis [0.] now;
		turn lthigh to x-axis <-63.> now;
		turn rthigh to x-axis <4.> now;
		turn rleg to x-axis <83.> now;
		turn rfoot to x-axis <-37.> now;
		turn lleg to x-axis <57.> now;
		turn lfoot to x-axis <5.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-52.> now;
		turn rthigh to x-axis <-8.> now;
		turn rleg to x-axis <106.> now;
		turn rfoot to x-axis <-27.> now;
		turn lleg to x-axis <45.> now;
		turn lfoot to x-axis <6.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-39.> now;
		turn rthigh to x-axis <-20.> now;
		turn rleg to x-axis <119.> now;
		turn lleg to x-axis <39.> now;
		turn lfoot to x-axis <1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-29.> now;
		turn rthigh to x-axis <-30.> now;
		turn rleg to x-axis <73.> now;
		turn rfoot to x-axis <-34.> now;
		turn lleg to x-axis <30.> now;
		turn lfoot to x-axis <-1.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-20.> now;
		turn rthigh to x-axis <-56.> now;
		turn rleg to x-axis <58.> now;
		turn lleg to x-axis <41.> now;
		turn lfoot to x-axis <-21.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-17.> now;
		turn rthigh to x-axis <-58.> now;
		turn rleg to x-axis <-10.> now;
		turn lleg to x-axis <59.> now;
		turn lfoot to x-axis <-32.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-5.> now;
		turn rthigh to x-axis <-65.> now;
		turn rleg to x-axis <36.> now;
		turn lleg to x-axis <53.> now;
		turn lfoot to x-axis <-34.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <3.> now;
		turn rthigh to x-axis <-66.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <-8.> now;
		turn lleg to x-axis <57.> now;
		turn lfoot to x-axis <-30.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <5.> now;
		turn rthigh to x-axis <-62.> now;
		turn rleg to x-axis <45.> now;
		turn rfoot to x-axis <17.> now;
		turn lleg to x-axis <78.> now;
		turn lfoot to x-axis <-35.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-5.> now;
		turn rthigh to x-axis <-52.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <9.> now;
		turn lleg to x-axis <101.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-21.> now;
		turn rthigh to x-axis <-36.> now;
		turn rfoot to x-axis <-7.> now;
		turn lleg to x-axis <104.> now;
		turn lfoot to x-axis <-53.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-33.> now;
		turn rthigh to x-axis <-22.> now;
		turn rleg to x-axis <39.> now;
		turn rfoot to x-axis <-13.> now;
		turn lleg to x-axis <85.> now;
		turn lfoot to x-axis <-45.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-69.> now;
		turn rthigh to x-axis <-11.> now;
		turn rleg to x-axis <38.> now;
		turn rfoot to x-axis <-21.> now;
		turn lleg to x-axis <79.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-61.> now;
		turn rthigh to x-axis <4.> now;
		turn rleg to x-axis <26.> now;
		turn rfoot to x-axis <-23.> now;
		turn lleg to x-axis <10.> now;
		sleep 60;
	}
	move pelvis to y-axis [-0.] now;
	turn lthigh to x-axis <-63.> now;
	turn rthigh to x-axis <17.> now;
	turn rleg to x-axis <29.> now;
	turn rfoot to x-axis <-21.> now;
	turn lleg to x-axis <29.> now;
	turn lfoot to x-axis <-1.> now;
	sleep 60;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_4 )
	{
		while( !Static_Var_3 )
		{
			sleep 150;
		}
		move lcannon to y-axis [0.] now;
		move lcannon to z-axis [0.] now;
		move rcannon to y-axis [0.] now;
		move rcannon to z-axis [0.] now;
		move locase to y-axis [0.] now;
		move locase to z-axis [0.] now;
		move locase to z-axis [-1.] speed [0.];
		move rfirept to y-axis [-0.] now;
		move rfirept to z-axis [0.] now;
		move lfirept to y-axis [-0.] now;
		move lfirept to z-axis [0.] now;
		turn upcase2 to x-axis <0.> now;
		turn upcase2 to x-axis <-43.> speed <111.>;
		turn locase to x-axis <0.> now;
		turn locase to x-axis <61.> speed <156.>;
		sleep 394;
		move upcase2 to z-axis [-4.] speed [88.];
		turn upcase2 to x-axis <-47.> speed <64.>;
		move locase to z-axis [-4.] speed [88.];
		turn locase to x-axis <64.> speed <64.>;
		sleep 50;
		turn upcase2 to x-axis <-121.> speed <1374.>;
		turn locase to x-axis <139.> speed <1374.>;
		sleep 55;
		turn upcase2 to x-axis <-45.> speed <903.>;
		turn locase to x-axis <63.> speed <903.>;
		sleep 85;
		turn upcase2 to x-axis <-19.> speed <754.>;
		turn locase to x-axis <37.> speed <754.>;
		sleep 35;
		turn upcase2 to x-axis <-47.> speed <2887.>;
		turn locase to x-axis <64.> speed <2887.>;
		sleep 10;
		sleep 10;
		Static_Var_4 = 1;
	}
}

Stop()
{
	if( Static_Var_4 )
	{
		Static_Var_4 = 0;
		move lcannon to y-axis [0.] now;
		move lcannon to z-axis [0.] now;
		move rcannon to y-axis [0.] now;
		move rcannon to z-axis [0.] now;
		move upcase2 to z-axis [-4.] now;
		move upcase2 to z-axis [1.] speed [22.];
		move locase to y-axis [0.] now;
		move locase to z-axis [-1.] now;
		move rfirept to y-axis [-0.] now;
		move rfirept to z-axis [0.] now;
		move lfirept to y-axis [-0.] now;
		move lfirept to z-axis [0.] now;
		turn upcase2 to x-axis <-47.> now;
		turn locase to x-axis <62.> now;
		sleep 229;
		move upcase2 to z-axis [2.] speed [14.];
		turn upcase2 to x-axis <-41.> speed <111.>;
		sleep 54;
		move upcase2 to z-axis [0.] speed [200.];
		move locase to z-axis [0.] speed [88.];
		turn upcase2 to x-axis <0.> speed <4840.>;
		turn locase to x-axis <0.> speed <7239.>;
		sleep 9;
		sleep 5;
	}
	Static_Var_2 = 0;
}

InitState()
{
	Static_Var_7 = 1;
	Static_Var_8 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_8 )
	{
		Static_Var_7 = requestedstate;
		return (0);
	}
	Static_Var_8 = 1;
	currentstate = Static_Var_7;
	Static_Var_7 = requestedstate;
	while( Static_Var_7 != currentstate )
	{
		if( Static_Var_7 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_7 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_8 = 0;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_1;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.] speed [1.];
				turn rthigh to x-axis <0.> speed <200.>;
				turn rleg to x-axis <0.> speed <200.>;
				turn lthigh to x-axis <0.> speed <200.>;
				turn lleg to x-axis <0.> speed <200.>;
				if( !aiming )
				{
					turn torso to y-axis <0.> speed <90.>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 3000;
	hide rfirept;
	hide lfirept;
	dont-shade locase;
	dont-shade lcannon;
	dont-shade rcannon;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_6 = Func_Var_1 * 2;
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

RestoreAfterDelay()
{
	sleep Static_Var_6;
	set-signal-mask 0;
	turn torso to y-axis <0.> speed <90.>;
	turn canbase to x-axis <0.> speed <45.>;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal 2;
	set-signal-mask 2;
	while( !Static_Var_4 )
	{
		sleep 350;
	}
	turn torso to y-axis heading speed <90.>;
	turn canbase to x-axis <0.> - pitch speed <45.>;
	wait-for-turn torso around y-axis;
	wait-for-turn canbase around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = pelvis;
}

QueryPrimary(piecenum)
{
	if( Static_Var_5 == 0 )
	{
		piecenum = rfirept;
	}
	if( Static_Var_5 == 1 )
	{
		piecenum = lfirept;
	}
}

FirePrimary()
{
	if( Static_Var_5 == 0 )
	{
		Static_Var_5 = 1;
		show rfirept;
		move rcannon to z-axis [-2.] speed [25.];
		sleep 100;
		hide rfirept;
		move rcannon to z-axis [0.] speed [4.];
		return (0);
	}
	if( Static_Var_5 == 1 )
	{
		Static_Var_5 = 0;
		show lfirept;
		move lcannon to z-axis [-2.] speed [25.];
		sleep 100;
		hide lfirept;
		move lcannon to z-axis [0.] speed [4.];
	}
}

Killed(severity, corpsetype)
{
	hide rfirept;
	hide lfirept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode lcannon type BITMAPONLY | BITMAP3;
		explode lfirept type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode locase type BITMAPONLY | BITMAP2;
		explode lthigh type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rcannon type BITMAPONLY | BITMAP5;
		explode rfirept type BITMAPONLY | BITMAP2;
		explode rfoot type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode upcase2 type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type FALL | BITMAP2;
		explode lcannon type SHATTER | BITMAP3;
		explode lfirept type FALL | BITMAP4;
		explode lfoot type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode locase type FALL | BITMAP2;
		explode lthigh type FALL | BITMAP3;
		explode pelvis type FALL | BITMAP4;
		explode rcannon type SHATTER | BITMAP5;
		explode rfirept type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode upcase2 type FALL | BITMAP4;
		explode rthigh type FALL | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode canbase type BITMAPONLY | BITMAP1;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lcannon type SHATTER | BITMAP3;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode locase type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rcannon type SHATTER | BITMAP5;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode upcase2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode canbase type BITMAPONLY | BITMAP1;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lcannon type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode locase type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rcannon type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode upcase2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
