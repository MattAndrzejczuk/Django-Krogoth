#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, light, bouy;

static-var  Static_Var_1, Static_Var_2;


Go()
{
	spin base around y-axis speed <60.>;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Stop()
{
	spin base around y-axis speed <0.>;
}

InitState()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_1 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	dont-shade base;
	dont-cache base;
	dont-shade light;
	dont-cache light;
	call-script InitState();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = bouy;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode bouy type BITMAPONLY | BITMAP2;
		explode light type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode bouy type BITMAPONLY | BITMAP2;
		explode light type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode bouy type SHATTER | EXPLODE_ON_HIT | BITMAP2;
		explode light type BITMAPONLY | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP5;
	explode light type BITMAPONLY | BITMAP3;
}
