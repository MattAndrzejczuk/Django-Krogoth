#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  head, rthigh, lthigh, rfoot, lleg, lfoot, ltoes, lheel,
       rleg, rtoes, rheel;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;


walk()
{
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [2.] now;
		move rfoot to y-axis [-1.] now;
		turn head to x-axis <-1.> now;
		turn rthigh to x-axis <12.> now;
		turn lthigh to x-axis <15.> now;
		turn lleg to x-axis <126.> now;
		turn lfoot to x-axis <-100.> now;
		turn ltoes to x-axis <-53.> now;
		turn lheel to x-axis <-41.> now;
		turn rleg to x-axis <48.> now;
		turn rfoot to x-axis <-47.> now;
		turn rtoes to x-axis <-12.> now;
		turn rheel to x-axis <-21.> now;
		sleep 38;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		turn head to x-axis <-3.> now;
		turn rthigh to x-axis <20.> now;
		turn lthigh to x-axis <2.> now;
		turn lleg to x-axis <117.> now;
		turn lfoot to x-axis <-92.> now;
		turn ltoes to x-axis <-40.> now;
		turn lheel to x-axis <-32.> now;
		turn rleg to x-axis <50.> now;
		turn rfoot to x-axis <-50.> now;
		turn rtoes to x-axis <-16.> now;
		turn rheel to x-axis <-27.> now;
		sleep 37;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		turn head to x-axis <-6.> now;
		turn rthigh to x-axis <27.> now;
		turn lthigh to x-axis <-12.> now;
		turn lleg to x-axis <108.> now;
		turn lfoot to x-axis <-85.> now;
		turn ltoes to x-axis <-26.> now;
		turn lheel to x-axis <-23.> now;
		turn rleg to x-axis <52.> now;
		turn rfoot to x-axis <-52.> now;
		turn rtoes to x-axis <-20.> now;
		turn rheel to x-axis <-32.> now;
		sleep 38;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		turn head to x-axis <-8.> now;
		turn rthigh to x-axis <34.> now;
		turn lthigh to x-axis <-26.> now;
		turn lleg to x-axis <99.> now;
		turn lfoot to x-axis <-78.> now;
		turn ltoes to x-axis <-13.> now;
		turn lheel to x-axis <-14.> now;
		turn rleg to x-axis <53.> now;
		turn rfoot to x-axis <-55.> now;
		turn rtoes to x-axis <-23.> now;
		turn rheel to x-axis <-37.> now;
		sleep 37;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		turn head to x-axis <-11.> now;
		turn rthigh to x-axis <41.> now;
		turn lthigh to x-axis <-39.> now;
		turn lleg to x-axis <90.> now;
		turn lfoot to x-axis <-70.> now;
		turn ltoes to x-axis <0.> now;
		turn lheel to x-axis <-5.> now;
		turn rleg to x-axis <55.> now;
		turn rfoot to x-axis <-57.> now;
		turn rtoes to x-axis <-27.> now;
		turn rheel to x-axis <-42.> now;
		sleep 71;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		move rleg to y-axis [1.] now;
		move rfoot to y-axis [-0.] now;
		turn head to x-axis <-5.> now;
		turn rthigh to x-axis <43.> now;
		turn lthigh to x-axis <-41.> now;
		turn lleg to x-axis <45.> now;
		turn lfoot to x-axis <-35.> now;
		turn ltoes to x-axis <-6.> now;
		turn lheel to x-axis <6.> now;
		turn rleg to x-axis <46.> now;
		turn rfoot to x-axis <-33.> now;
		turn rtoes to x-axis <-51.> now;
		turn rheel to x-axis <-69.> now;
		sleep 71;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [0.] now;
		move rleg to y-axis [0.] now;
		move rfoot to y-axis [0.] now;
		turn head to x-axis <0.> now;
		turn rthigh to x-axis <45.> now;
		turn lthigh to x-axis <-43.> now;
		turn lleg to x-axis <1.> now;
		turn lfoot to x-axis <0.> now;
		turn ltoes to x-axis <-13.> now;
		turn lheel to x-axis <17.> now;
		turn rleg to x-axis <38.> now;
		turn rfoot to x-axis <-8.> now;
		turn rtoes to x-axis <-74.> now;
		turn rheel to x-axis <-97.> now;
		sleep 24;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [0.] now;
		move rleg to y-axis [1.] now;
		turn head to x-axis <5.> now;
		turn lthigh to x-axis <-35.> now;
		turn lleg to x-axis <10.> now;
		turn ltoes to x-axis <-29.> now;
		turn lheel to x-axis <9.> now;
		turn rleg to x-axis <42.> now;
		turn rfoot to x-axis <-12.> now;
		turn rtoes to x-axis <-73.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		move rleg to y-axis [0.] now;
		turn head to x-axis <10.> now;
		turn rthigh to x-axis <45.> now;
		turn lthigh to x-axis <-27.> now;
		turn lleg to x-axis <20.> now;
		turn ltoes to x-axis <-44.> now;
		turn lheel to x-axis <0.> now;
		turn rleg to x-axis <46.> now;
		turn rfoot to x-axis <-16.> now;
		turn rtoes to x-axis <-71.> now;
		turn rheel to x-axis <-97.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [0.] now;
		move lfoot to y-axis [-0.] now;
		move rfoot to y-axis [0.] now;
		turn head to x-axis <11.> now;
		turn rthigh to x-axis <50.> now;
		turn lthigh to x-axis <-15.> now;
		turn lleg to x-axis <22.> now;
		turn lfoot to x-axis <-17.> now;
		turn ltoes to x-axis <-22.> now;
		turn rleg to x-axis <62.> now;
		turn rfoot to x-axis <-25.> now;
		turn rtoes to x-axis <-56.> now;
		turn rheel to x-axis <-105.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		move rfoot to y-axis [0.] now;
		turn head to x-axis <13.> now;
		turn rthigh to x-axis <56.> now;
		turn lthigh to x-axis <-2.> now;
		turn lleg to x-axis <25.> now;
		turn lfoot to x-axis <-34.> now;
		turn ltoes to x-axis <0.> now;
		turn rleg to x-axis <79.> now;
		turn rfoot to x-axis <-34.> now;
		turn rtoes to x-axis <-40.> now;
		turn rheel to x-axis <-113.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		turn head to x-axis <9.> now;
		turn rthigh to x-axis <45.> now;
		turn lthigh to x-axis <1.> now;
		turn lleg to x-axis <31.> now;
		turn lfoot to x-axis <-37.> now;
		turn ltoes to x-axis <-3.> now;
		turn lheel to x-axis <-6.> now;
		turn rleg to x-axis <91.> now;
		turn rfoot to x-axis <-50.> now;
		turn rtoes to x-axis <-44.> now;
		turn rheel to x-axis <-97.> now;
		sleep 22;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		move rfoot to y-axis [0.] now;
		turn head to x-axis <6.> now;
		turn rthigh to x-axis <35.> now;
		turn lthigh to x-axis <5.> now;
		turn lleg to x-axis <37.> now;
		turn lfoot to x-axis <-41.> now;
		turn ltoes to x-axis <-6.> now;
		turn lheel to x-axis <-11.> now;
		turn rleg to x-axis <102.> now;
		turn rfoot to x-axis <-66.> now;
		turn rtoes to x-axis <-47.> now;
		turn rheel to x-axis <-81.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		move rfoot to y-axis [0.] now;
		turn head to x-axis <3.> now;
		turn rthigh to x-axis <25.> now;
		turn lthigh to x-axis <9.> now;
		turn lleg to x-axis <43.> now;
		turn lfoot to x-axis <-44.> now;
		turn ltoes to x-axis <-9.> now;
		turn lheel to x-axis <-17.> now;
		turn rleg to x-axis <114.> now;
		turn rfoot to x-axis <-83.> now;
		turn rtoes to x-axis <-50.> now;
		turn rheel to x-axis <-65.> now;
		sleep 22;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		turn head to x-axis <-1.> now;
		turn rthigh to x-axis <15.> now;
		turn lthigh to x-axis <12.> now;
		turn lleg to x-axis <49.> now;
		turn lfoot to x-axis <-48.> now;
		turn ltoes to x-axis <-12.> now;
		turn lheel to x-axis <-23.> now;
		turn rleg to x-axis <126.> now;
		turn rfoot to x-axis <-99.> now;
		turn rtoes to x-axis <-53.> now;
		turn rheel to x-axis <-50.> now;
		sleep 39;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		turn head to x-axis <-3.> now;
		turn rthigh to x-axis <2.> now;
		turn lthigh to x-axis <20.> now;
		turn lleg to x-axis <51.> now;
		turn lfoot to x-axis <-50.> now;
		turn ltoes to x-axis <-17.> now;
		turn lheel to x-axis <-28.> now;
		turn rleg to x-axis <116.> now;
		turn rfoot to x-axis <-92.> now;
		turn rtoes to x-axis <-39.> now;
		turn rheel to x-axis <-37.> now;
		sleep 39;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		turn head to x-axis <-6.> now;
		turn rthigh to x-axis <-12.> now;
		turn lthigh to x-axis <27.> now;
		turn lleg to x-axis <53.> now;
		turn lfoot to x-axis <-53.> now;
		turn ltoes to x-axis <-22.> now;
		turn lheel to x-axis <-34.> now;
		turn rleg to x-axis <105.> now;
		turn rfoot to x-axis <-85.> now;
		turn rtoes to x-axis <-25.> now;
		turn rheel to x-axis <-25.> now;
		sleep 39;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		turn head to x-axis <-8.> now;
		turn rthigh to x-axis <-25.> now;
		turn lthigh to x-axis <34.> now;
		turn lleg to x-axis <55.> now;
		turn lfoot to x-axis <-55.> now;
		turn ltoes to x-axis <-27.> now;
		turn lheel to x-axis <-40.> now;
		turn rleg to x-axis <95.> now;
		turn rfoot to x-axis <-78.> now;
		turn rtoes to x-axis <-11.> now;
		turn rheel to x-axis <-12.> now;
		sleep 39;
	}
	if( TRUE )
	{
		move rthigh to y-axis [2.] now;
		move lthigh to y-axis [1.] now;
		move lfoot to y-axis [-1.] now;
		turn head to x-axis <-11.> now;
		turn rthigh to x-axis <-39.> now;
		turn lthigh to x-axis <41.> now;
		turn lleg to x-axis <58.> now;
		turn lfoot to x-axis <-57.> now;
		turn ltoes to x-axis <-32.> now;
		turn lheel to x-axis <-45.> now;
		turn rleg to x-axis <85.> now;
		turn rfoot to x-axis <-70.> now;
		turn rtoes to x-axis <3.> now;
		turn rheel to x-axis <0.> now;
		sleep 72;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		move lleg to y-axis [1.] now;
		move lfoot to y-axis [-0.] now;
		turn head to x-axis <-5.> now;
		turn rthigh to x-axis <-41.> now;
		turn lthigh to x-axis <43.> now;
		turn lleg to x-axis <46.> now;
		turn lfoot to x-axis <-32.> now;
		turn ltoes to x-axis <-51.> now;
		turn lheel to x-axis <-66.> now;
		turn rleg to x-axis <51.> now;
		turn rfoot to x-axis <-35.> now;
		turn rtoes to x-axis <-6.> now;
		turn rheel to x-axis <6.> now;
		sleep 71;
	}
	if( TRUE )
	{
		move rthigh to y-axis [0.] now;
		move lthigh to y-axis [1.] now;
		move lleg to y-axis [0.] now;
		move lfoot to y-axis [0.] now;
		turn head to x-axis <0.> now;
		turn rthigh to x-axis <-43.> now;
		turn lthigh to x-axis <45.> now;
		turn lleg to x-axis <34.> now;
		turn lfoot to x-axis <-7.> now;
		turn ltoes to x-axis <-70.> now;
		turn lheel to x-axis <-87.> now;
		turn rleg to x-axis <18.> now;
		turn rfoot to x-axis <0.> now;
		turn rtoes to x-axis <-14.> now;
		turn rheel to x-axis <13.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lleg to y-axis [1.] now;
		turn head to x-axis <5.> now;
		turn rthigh to x-axis <-35.> now;
		turn lleg to x-axis <40.> now;
		turn lfoot to x-axis <-12.> now;
		turn ltoes to x-axis <-71.> now;
		turn lheel to x-axis <-96.> now;
		turn rleg to x-axis <19.> now;
		turn rtoes to x-axis <-32.> now;
		turn rheel to x-axis <6.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [0.] now;
		move lleg to y-axis [0.] now;
		turn head to x-axis <10.> now;
		turn rthigh to x-axis <-28.> now;
		turn lleg to x-axis <46.> now;
		turn lfoot to x-axis <-16.> now;
		turn ltoes to x-axis <-72.> now;
		turn lheel to x-axis <-105.> now;
		turn rleg to x-axis <19.> now;
		turn rtoes to x-axis <-50.> now;
		turn rheel to x-axis <0.> now;
		sleep 23;
	}
	if( TRUE )
	{
		move rthigh to y-axis [0.] now;
		move rfoot to y-axis [-0.] now;
		turn head to x-axis <11.> now;
		turn rthigh to x-axis <-15.> now;
		turn lthigh to x-axis <50.> now;
		turn lleg to x-axis <62.> now;
		turn lfoot to x-axis <-25.> now;
		turn ltoes to x-axis <-56.> now;
		turn lheel to x-axis <-109.> now;
		turn rleg to x-axis <22.> now;
		turn rfoot to x-axis <-17.> now;
		turn rtoes to x-axis <-25.> now;
		sleep 22;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move rfoot to y-axis [-1.] now;
		turn head to x-axis <13.> now;
		turn rthigh to x-axis <-3.> now;
		turn lthigh to x-axis <56.> now;
		turn lleg to x-axis <78.> now;
		turn lfoot to x-axis <-34.> now;
		turn ltoes to x-axis <-41.> now;
		turn lheel to x-axis <-112.> now;
		turn rleg to x-axis <24.> now;
		turn rfoot to x-axis <-34.> now;
		turn rtoes to x-axis <0.> now;
		sleep 24;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [1.] now;
		turn head to x-axis <9.> now;
		turn rthigh to x-axis <1.> now;
		turn lthigh to x-axis <46.> now;
		turn lleg to x-axis <90.> now;
		turn lfoot to x-axis <-50.> now;
		turn ltoes to x-axis <-44.> now;
		turn lheel to x-axis <-95.> now;
		turn rleg to x-axis <30.> now;
		turn rfoot to x-axis <-37.> now;
		turn rtoes to x-axis <-3.> now;
		turn rheel to x-axis <-5.> now;
		sleep 24;
	}
	if( TRUE )
	{
		move rthigh to y-axis [1.] now;
		move lthigh to y-axis [2.] now;
		turn head to x-axis <6.> now;
		turn rthigh to x-axis <5.> now;
		turn lthigh to x-axis <36.> now;
		turn lleg to x-axis <102.> now;
		turn lfoot to x-axis <-67.> now;
		turn ltoes to x-axis <-47.> now;
		turn lheel to x-axis <-77.> now;
		turn rleg to x-axis <36.> now;
		turn rfoot to x-axis <-41.> now;
		turn rtoes to x-axis <-6.> now;
		turn rheel to x-axis <-11.> now;
		sleep 24;
	}
	move rthigh to y-axis [1.] now;
	move lthigh to y-axis [2.] now;
	turn head to x-axis <3.> now;
	turn rthigh to x-axis <9.> now;
	turn lthigh to x-axis <25.> now;
	turn lleg to x-axis <114.> now;
	turn lfoot to x-axis <-83.> now;
	turn ltoes to x-axis <-50.> now;
	turn lheel to x-axis <-59.> now;
	turn rleg to x-axis <42.> now;
	turn rfoot to x-axis <-44.> now;
	turn rtoes to x-axis <-9.> now;
	turn rheel to x-axis <-16.> now;
	sleep 23;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from head;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = Static_Var_1;
		if( Func_Var_1 )
		{
			call-script walk();
			if( Static_Var_2 == 3 )
			{
				emit-sfx 259 from lleg;
				emit-sfx 259 from rleg;
			}
		}
		if( !Func_Var_1 )
		{
			move rthigh to y-axis [0.] speed [10.];
			move lthigh to y-axis [0.] speed [10.];
			move lleg to y-axis [0.] speed [10.];
			move rleg to y-axis [0.] speed [10.];
			move lfoot to y-axis [0.] speed [10.];
			move rfoot to y-axis [0.] speed [10.];
			turn head to x-axis <0.> speed <200.>;
			turn rthigh to x-axis <0.> speed <200.>;
			turn lthigh to x-axis <0.> speed <200.>;
			turn lleg to x-axis <0.> speed <200.>;
			turn lfoot to x-axis <0.> speed <200.>;
			turn ltoes to x-axis <0.> speed <200.>;
			turn lheel to x-axis <0.> speed <200.>;
			turn rleg to x-axis <0.> speed <200.>;
			turn rfoot to x-axis <0.> speed <200.>;
			turn rtoes to x-axis <0.> speed <200.>;
			turn rheel to x-axis <0.> speed <200.>;
			sleep 200;
		}
	}
}

Create()
{
	Static_Var_3 = 1;
	Static_Var_1 = 0;
	start-script MotionControl();
	start-script SmokeUnit();
}

Reload()
{
	sleep 5000;
	Static_Var_3 = 1;
}

StartBuilding(Func_Var_1)
{
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	Static_Var_3 = 0;
	set INBUILDSTANCE to 1;
	start-script Reload();
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_2 = Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = head;
}

Killed(severity, corpsetype)
{
	if( Static_Var_2 == 1 )
	{
		if( severity <= 50 )
		{
			corpsetype = 2;
			explode head type SHATTER | BITMAP1;
			explode rthigh type FALL | BITMAP1;
			explode lthigh type FALL | BITMAP3;
			explode rfoot type FALL | BITMAP4;
			explode lleg type FALL | BITMAP2;
			explode lfoot type FALL | BITMAP1;
			explode ltoes type BITMAPONLY | BITMAP2;
			explode lheel type BITMAPONLY | BITMAP3;
			explode rleg type FALL | BITMAP5;
			explode rtoes type BITMAPONLY | BITMAP4;
			explode rheel type BITMAPONLY | BITMAP5;
			return (0);
		}
		corpsetype = 3;
		explode head type SHATTER | BITMAP1;
		explode rthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( Static_Var_2 == 2 )
	{
		if( severity <= 50 )
		{
			corpsetype = 2;
			explode head type SHATTER | BITMAP1;
			explode rthigh type FALL | BITMAP1;
			explode lthigh type FALL | BITMAP3;
			explode rfoot type FALL | BITMAP4;
			explode lleg type FALL | BITMAP2;
			explode lfoot type FALL | BITMAP1;
			explode ltoes type BITMAPONLY | BITMAP2;
			explode lheel type BITMAPONLY | BITMAP3;
			explode rleg type FALL | BITMAP5;
			explode rtoes type BITMAPONLY | BITMAP4;
			explode rheel type BITMAPONLY | BITMAP5;
			return (0);
		}
		corpsetype = 3;
		explode head type SHATTER | BITMAP1;
		explode rthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( Static_Var_2 == 3 )
	{
		if( severity <= 50 )
		{
			corpsetype = 2;
			explode head type SHATTER | BITMAP1;
			explode rthigh type FALL | BITMAP1;
			explode lthigh type FALL | BITMAP3;
			explode rfoot type FALL | BITMAP4;
			explode lleg type FALL | BITMAP2;
			explode lfoot type FALL | BITMAP1;
			explode ltoes type BITMAPONLY | BITMAP2;
			explode lheel type BITMAPONLY | BITMAP3;
			explode rleg type FALL | BITMAP5;
			explode rtoes type BITMAPONLY | BITMAP4;
			explode rheel type BITMAPONLY | BITMAP5;
			return (0);
		}
		corpsetype = 3;
		explode head type SHATTER | BITMAP1;
		explode rthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode head type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode head type SHATTER | BITMAP1;
		explode rthigh type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP2;
		explode lfoot type FALL | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type FALL | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode head type SHATTER | BITMAP1;
		explode rthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode ltoes type BITMAPONLY | BITMAP2;
		explode lheel type BITMAPONLY | BITMAP3;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode head type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode ltoes type BITMAPONLY | BITMAP2;
	explode lheel type BITMAPONLY | BITMAP3;
	explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rtoes type BITMAPONLY | BITMAP4;
	explode rheel type BITMAPONLY | BITMAP5;
}
