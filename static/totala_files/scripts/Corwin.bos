#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, fan, cradle;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Go()
{
	spin fan around z-axis speed Static_Var_2;
	turn cradle to y-axis Static_Var_3 speed Static_Var_1;
}

Stop()
{
	spin fan around z-axis speed <0.>;
	turn cradle to y-axis Static_Var_3 speed <0.>;
}

InitState()
{
	Static_Var_4 = 1;
	Static_Var_5 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_5 )
	{
		Static_Var_4 = requestedstate;
		return (0);
	}
	Static_Var_5 = 1;
	currentstate = Static_Var_4;
	Static_Var_4 = requestedstate;
	while( Static_Var_4 != currentstate )
	{
		if( Static_Var_4 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_4 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_5 = 0;
}

Create()
{
	Static_Var_1 = 3640;
	dont-cache cradle;
	dont-cache fan;
	dont-shade cradle;
	dont-shade fan;
	Static_Var_2 = 1820;
	Static_Var_3 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SetSpeed(Func_Var_1)
{
	Static_Var_2 = 0 - Func_Var_1;
	if( !get BUILD_PERCENT_LEFT )
	{
		spin fan around z-axis speed Func_Var_1;
		set ACTIVATION to 100;
	}
}

SetDirection(Func_Var_1)
{
	Static_Var_3 = Func_Var_1;
	if( !get BUILD_PERCENT_LEFT )
	{
		turn cradle to y-axis Func_Var_1 speed Static_Var_1;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode cradle type BITMAPONLY | BITMAP2;
		explode fan type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode cradle type BITMAPONLY | BITMAP2;
		explode fan type SHATTER | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode cradle type BITMAPONLY | BITMAP2;
		explode fan type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode cradle type BITMAPONLY | BITMAP2;
	explode fan type SHATTER | EXPLODE_ON_HIT | BITMAP3;
}
