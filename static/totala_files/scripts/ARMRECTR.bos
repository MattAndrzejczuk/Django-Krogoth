#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  llathe, rlathe, torso, hips, Lleg, Rleg, Rfoot, Lfoot,
       Lshoulder, Rshoulder, head, Rarm, Larm, llathepoint, rlathepoint, shield1,
       shield2, shield3, shield4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;


walk()
{
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] now;
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [0.] now;
		move Lleg to y-axis [-0.] speed [0.];
		turn hips to x-axis <3.> now;
		turn hips to x-axis <5.> speed <24.>;
		turn torso to y-axis <10.> now;
		turn torso to y-axis <7.> speed <24.>;
		turn Lleg to x-axis <-29.> now;
		turn Lleg to x-axis <-26.> speed <27.>;
		turn Rleg to x-axis <24.> now;
		turn Rleg to x-axis <28.> speed <45.>;
		turn Rfoot to x-axis <-4.> now;
		turn Rfoot to x-axis <16.> speed <203.>;
		turn Lfoot to x-axis <0.> now;
		turn Lfoot to x-axis <7.> speed <76.>;
		turn Lshoulder to x-axis <-32.> now;
		turn Lshoulder to x-axis <-22.> speed <100.>;
		turn Rshoulder to x-axis <-27.> now;
		turn Rshoulder to x-axis <-19.> speed <82.>;
		turn head to y-axis <-9.> now;
		turn head to y-axis <-6.> speed <24.>;
		turn Rarm to x-axis <-35.> now;
		turn Rarm to x-axis <-34.> speed <3.>;
		turn rlathe to x-axis <37.> now;
		turn rlathe to x-axis <26.> speed <109.>;
		turn Larm to x-axis <2.> now;
		turn Larm to x-axis <-7.> speed <100.>;
		turn llathe to x-axis <47.> now;
		turn llathe to x-axis <53.> speed <63.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [-1.] speed [0.];
		turn hips to x-axis <7.> speed <24.>;
		turn torso to y-axis <4.> speed <24.>;
		turn Lleg to x-axis <-23.> speed <27.>;
		turn Rleg to x-axis <33.> speed <45.>;
		turn Rfoot to x-axis <36.> speed <203.>;
		turn Lfoot to x-axis <15.> speed <76.>;
		turn Lshoulder to x-axis <-12.> speed <100.>;
		turn Rshoulder to x-axis <-10.> speed <82.>;
		turn head to y-axis <-4.> speed <24.>;
		turn Rarm to x-axis <-34.> speed <3.>;
		turn rlathe to x-axis <15.> speed <109.>;
		turn Larm to x-axis <-17.> speed <100.>;
		turn llathe to x-axis <60.> speed <63.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [2.];
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [1.];
		move Rleg to y-axis [0.] speed [6.];
		move Rfoot to y-axis [1.] speed [1.];
		move Lfoot to y-axis [-1.] speed [0.];
		turn hips to x-axis <6.> speed <20.>;
		turn torso to y-axis <3.> speed <30.>;
		turn Lleg to x-axis <-14.> speed <152.>;
		turn Rleg to x-axis <13.> speed <334.>;
		turn Rfoot to x-axis <45.> speed <157.>;
		turn Lfoot to x-axis <7.> speed <126.>;
		turn Lshoulder to x-axis <-19.> speed <121.>;
		turn Rshoulder to x-axis <-10.> speed <5.>;
		turn head to y-axis <-3.> speed <20.>;
		turn Rarm to x-axis <-29.> speed <91.>;
		turn rlathe to x-axis <9.> speed <101.>;
		turn Larm to x-axis <-25.> speed <131.>;
		turn llathe to x-axis <77.> speed <293.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [2.];
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [1.];
		move Rleg to y-axis [1.] speed [6.];
		move Rfoot to y-axis [0.] speed [1.];
		move Lfoot to y-axis [-0.] speed [0.];
		turn hips to x-axis <5.> speed <20.>;
		turn torso to y-axis <1.> speed <30.>;
		turn Lleg to x-axis <-5.> speed <152.>;
		turn Rleg to x-axis <-6.> speed <334.>;
		turn Rfoot to x-axis <55.> speed <157.>;
		turn Lfoot to x-axis <0.> speed <126.>;
		turn Lshoulder to x-axis <-26.> speed <121.>;
		turn Rshoulder to x-axis <-10.> speed <5.>;
		turn head to y-axis <-1.> speed <20.>;
		turn Rarm to x-axis <-23.> speed <91.>;
		turn rlathe to x-axis <3.> speed <101.>;
		turn Larm to x-axis <-33.> speed <131.>;
		turn llathe to x-axis <95.> speed <293.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [0.];
		move Rleg to y-axis [0.] speed [6.];
		move Rfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <1.> speed <65.>;
		turn torso to y-axis <0.> speed <25.>;
		turn Lleg to x-axis <8.> speed <228.>;
		turn Rleg to x-axis <-20.> speed <238.>;
		turn Rfoot to x-axis <43.> speed <197.>;
		turn Lfoot to x-axis <-10.> speed <167.>;
		turn Lshoulder to x-axis <-17.> speed <162.>;
		turn Rshoulder to x-axis <-10.> speed <5.>;
		turn head to y-axis <0.> speed <30.>;
		turn Rarm to x-axis <-17.> speed <101.>;
		turn rlathe to x-axis <1.> speed <20.>;
		turn Larm to x-axis <-43.> speed <172.>;
		turn llathe to x-axis <79.> speed <263.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [0.];
		move Rleg to y-axis [0.] speed [3.];
		move Rfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <-2.> speed <39.>;
		turn torso to y-axis <-1.> speed <15.>;
		turn Lleg to x-axis <21.> speed <136.>;
		turn Rleg to x-axis <-35.> speed <142.>;
		turn Rfoot to x-axis <31.> speed <118.>;
		turn Lfoot to x-axis <-20.> speed <100.>;
		turn Lshoulder to x-axis <-7.> speed <97.>;
		turn Rshoulder to x-axis <-10.> speed <3.>;
		turn head to y-axis <1.> speed <18.>;
		turn Rarm to x-axis <-11.> speed <60.>;
		turn rlathe to x-axis <0.> speed <12.>;
		turn Larm to x-axis <-54.> speed <103.>;
		turn llathe to x-axis <63.> speed <158.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [1.];
		move Lleg to y-axis [-0.] speed [1.];
		move Lfoot to y-axis [-1.] speed [0.];
		turn hips to x-axis <0.> speed <27.>;
		turn torso to y-axis <-4.> speed <27.>;
		turn Lleg to x-axis <22.> speed <6.>;
		turn Rleg to x-axis <-32.> speed <27.>;
		turn Rfoot to x-axis <15.> speed <158.>;
		turn Lfoot to x-axis <-13.> speed <66.>;
		turn Lshoulder to x-axis <-9.> speed <24.>;
		turn Rshoulder to x-axis <-20.> speed <97.>;
		turn head to y-axis <3.> speed <21.>;
		turn Rarm to x-axis <-3.> speed <82.>;
		turn rlathe to x-axis <12.> speed <121.>;
		turn Larm to x-axis <-56.> speed <24.>;
		turn llathe to x-axis <65.> speed <15.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [1.];
		move Lleg to y-axis [0.] speed [1.];
		move Lfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <3.> speed <27.>;
		turn torso to y-axis <-7.> speed <27.>;
		turn Lleg to x-axis <23.> speed <6.>;
		turn Rleg to x-axis <-29.> speed <27.>;
		turn Rfoot to x-axis <0.> speed <158.>;
		turn Lfoot to x-axis <-6.> speed <66.>;
		turn Lshoulder to x-axis <-12.> speed <24.>;
		turn Rshoulder to x-axis <-30.> speed <97.>;
		turn head to y-axis <6.> speed <21.>;
		turn Rarm to x-axis <4.> speed <82.>;
		turn rlathe to x-axis <24.> speed <121.>;
		turn Larm to x-axis <-58.> speed <24.>;
		turn llathe to x-axis <66.> speed <15.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Rleg to y-axis [-0.] speed [0.];
		turn hips to x-axis <5.> speed <24.>;
		turn torso to y-axis <-5.> speed <15.>;
		turn Lleg to x-axis <28.> speed <57.>;
		turn Rleg to x-axis <-26.> speed <33.>;
		turn Rfoot to x-axis <7.> speed <72.>;
		turn Lfoot to x-axis <14.> speed <215.>;
		turn Lshoulder to x-axis <-14.> speed <27.>;
		turn Rshoulder to x-axis <-19.> speed <109.>;
		turn head to y-axis <4.> speed <15.>;
		turn Rarm to x-axis <-6.> speed <112.>;
		turn rlathe to x-axis <31.> speed <63.>;
		turn Larm to x-axis <-46.> speed <121.>;
		turn llathe to x-axis <47.> speed <191.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Rleg to y-axis [-1.] speed [0.];
		turn hips to x-axis <7.> speed <24.>;
		turn torso to y-axis <-4.> speed <15.>;
		turn Lleg to x-axis <34.> speed <57.>;
		turn Rleg to x-axis <-23.> speed <33.>;
		turn Rfoot to x-axis <14.> speed <72.>;
		turn Lfoot to x-axis <36.> speed <215.>;
		turn Lshoulder to x-axis <-17.> speed <27.>;
		turn Rshoulder to x-axis <-8.> speed <109.>;
		turn head to y-axis <3.> speed <15.>;
		turn Rarm to x-axis <-17.> speed <112.>;
		turn rlathe to x-axis <37.> speed <63.>;
		turn Larm to x-axis <-34.> speed <121.>;
		turn llathe to x-axis <28.> speed <191.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [6.];
		move Rleg to y-axis [-1.] speed [0.];
		move Rfoot to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <6.> speed <25.>;
		turn torso to y-axis <-3.> speed <20.>;
		turn Lleg to x-axis <13.> speed <344.>;
		turn Rleg to x-axis <-13.> speed <157.>;
		turn Rfoot to x-axis <6.> speed <136.>;
		turn Lfoot to x-axis <45.> speed <157.>;
		turn Lshoulder to x-axis <-6.> speed <192.>;
		turn Rshoulder to x-axis <-13.> speed <91.>;
		turn head to y-axis <2.> speed <15.>;
		turn Rarm to x-axis <-24.> speed <111.>;
		turn rlathe to x-axis <52.> speed <253.>;
		turn Larm to x-axis <-33.> speed <20.>;
		turn llathe to x-axis <16.> speed <202.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [1.] speed [6.];
		move Rleg to y-axis [-0.] speed [0.];
		move Rfoot to y-axis [-1.] speed [0.];
		move Lfoot to y-axis [0.] speed [1.];
		turn hips to x-axis <4.> speed <25.>;
		turn torso to y-axis <-1.> speed <20.>;
		turn Lleg to x-axis <-6.> speed <344.>;
		turn Rleg to x-axis <-4.> speed <157.>;
		turn Rfoot to x-axis <-1.> speed <136.>;
		turn Lfoot to x-axis <55.> speed <157.>;
		turn Lshoulder to x-axis <5.> speed <192.>;
		turn Rshoulder to x-axis <-19.> speed <91.>;
		turn head to y-axis <1.> speed <15.>;
		turn Rarm to x-axis <-31.> speed <111.>;
		turn rlathe to x-axis <68.> speed <253.>;
		turn Larm to x-axis <-32.> speed <20.>;
		turn llathe to x-axis <4.> speed <202.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [5.];
		move Rleg to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <1.> speed <50.>;
		turn torso to y-axis <0.> speed <40.>;
		turn Lleg to x-axis <-21.> speed <253.>;
		turn Rleg to x-axis <7.> speed <197.>;
		turn Rfoot to x-axis <-9.> speed <131.>;
		turn Lfoot to x-axis <42.> speed <217.>;
		turn Lshoulder to x-axis <-4.> speed <167.>;
		turn Rshoulder to x-axis <-20.> speed <20.>;
		turn head to y-axis <-1.> speed <45.>;
		turn Rarm to x-axis <-33.> speed <40.>;
		turn Larm to x-axis <-14.> speed <299.>;
		turn llathe to x-axis <1.> speed <45.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [3.];
		move Rleg to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <-1.> speed <30.>;
		turn torso to y-axis <3.> speed <24.>;
		turn Lleg to x-axis <-37.> speed <152.>;
		turn Rleg to x-axis <19.> speed <118.>;
		turn Rfoot to x-axis <-17.> speed <79.>;
		turn Lfoot to x-axis <29.> speed <130.>;
		turn Lshoulder to x-axis <-14.> speed <100.>;
		turn Rshoulder to x-axis <-21.> speed <12.>;
		turn head to y-axis <-4.> speed <27.>;
		turn Rarm to x-axis <-35.> speed <24.>;
		turn Larm to x-axis <3.> speed <179.>;
		turn llathe to x-axis <-1.> speed <27.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [1.] speed [0.];
		move Rleg to y-axis [-1.] speed [0.];
		move Rfoot to y-axis [-0.] speed [0.];
		turn hips to x-axis <0.> speed <21.>;
		turn torso to y-axis <6.> speed <33.>;
		turn Lleg to x-axis <-33.> speed <39.>;
		turn Rleg to x-axis <21.> speed <24.>;
		turn Rfoot to x-axis <-10.> speed <66.>;
		turn Lfoot to x-axis <14.> speed <145.>;
		turn Lshoulder to x-axis <-23.> speed <88.>;
		turn Rshoulder to x-axis <-24.> speed <27.>;
		turn head to y-axis <-6.> speed <24.>;
		turn Rarm to x-axis <-35.> speed <3.>;
		turn rlathe to x-axis <52.> speed <155.>;
		turn Larm to x-axis <3.> speed <6.>;
		turn llathe to x-axis <23.> speed <243.>;
		sleep 100;
	}
	sleep 100;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] now;
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [0.] now;
		move Lleg to y-axis [-0.] speed [0.];
		turn hips to x-axis <3.> now;
		turn hips to x-axis <5.> speed <24.>;
		turn Lleg to x-axis <-29.> now;
		turn Lleg to x-axis <-26.> speed <27.>;
		turn Rleg to x-axis <24.> now;
		turn Rleg to x-axis <28.> speed <45.>;
		turn Rfoot to x-axis <-4.> now;
		turn Rfoot to x-axis <16.> speed <203.>;
		turn Lfoot to x-axis <0.> now;
		turn Lfoot to x-axis <7.> speed <76.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [-1.] speed [0.];
		turn hips to x-axis <7.> speed <24.>;
		turn Lleg to x-axis <-23.> speed <27.>;
		turn Rleg to x-axis <33.> speed <45.>;
		turn Rfoot to x-axis <36.> speed <203.>;
		turn Lfoot to x-axis <15.> speed <76.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [2.];
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [1.];
		move Rleg to y-axis [0.] speed [6.];
		move Rfoot to y-axis [1.] speed [1.];
		move Lfoot to y-axis [-1.] speed [0.];
		turn hips to x-axis <6.> speed <20.>;
		turn Lleg to x-axis <-14.> speed <152.>;
		turn Rleg to x-axis <13.> speed <334.>;
		turn Rfoot to x-axis <45.> speed <157.>;
		turn Lfoot to x-axis <7.> speed <126.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [2.];
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [1.];
		move Rleg to y-axis [1.] speed [6.];
		move Rfoot to y-axis [0.] speed [1.];
		move Lfoot to y-axis [-0.] speed [0.];
		turn hips to x-axis <5.> speed <20.>;
		turn Lleg to x-axis <-5.> speed <152.>;
		turn Rleg to x-axis <-6.> speed <334.>;
		turn Rfoot to x-axis <55.> speed <157.>;
		turn Lfoot to x-axis <0.> speed <126.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [0.];
		move Rleg to y-axis [0.] speed [6.];
		move Rfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <1.> speed <65.>;
		turn Lleg to x-axis <8.> speed <228.>;
		turn Rleg to x-axis <-20.> speed <238.>;
		turn Rfoot to x-axis <43.> speed <197.>;
		turn Lfoot to x-axis <-10.> speed <167.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Lleg to y-axis [-0.] speed [0.];
		move Rleg to y-axis [0.] speed [3.];
		move Rfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <-2.> speed <39.>;
		turn Lleg to x-axis <21.> speed <136.>;
		turn Rleg to x-axis <-35.> speed <142.>;
		turn Rfoot to x-axis <31.> speed <118.>;
		turn Lfoot to x-axis <-20.> speed <100.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [1.];
		move Lleg to y-axis [-0.] speed [1.];
		move Lfoot to y-axis [-1.] speed [0.];
		turn hips to x-axis <0.> speed <27.>;
		turn Lleg to x-axis <22.> speed <6.>;
		turn Rleg to x-axis <-32.> speed <27.>;
		turn Rfoot to x-axis <15.> speed <158.>;
		turn Lfoot to x-axis <-13.> speed <66.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to y-axis [0.] speed [1.];
		move Lleg to y-axis [0.] speed [1.];
		move Lfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <3.> speed <27.>;
		turn Lleg to x-axis <23.> speed <6.>;
		turn Rleg to x-axis <-29.> speed <27.>;
		turn Rfoot to x-axis <0.> speed <158.>;
		turn Lfoot to x-axis <-6.> speed <66.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Rleg to y-axis [-0.] speed [0.];
		turn hips to x-axis <5.> speed <24.>;
		turn Lleg to x-axis <28.> speed <57.>;
		turn Rleg to x-axis <-26.> speed <33.>;
		turn Rfoot to x-axis <7.> speed <72.>;
		turn Lfoot to x-axis <14.> speed <215.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [0.];
		move Rleg to y-axis [-1.] speed [0.];
		turn hips to x-axis <7.> speed <24.>;
		turn Lleg to x-axis <34.> speed <57.>;
		turn Rleg to x-axis <-23.> speed <33.>;
		turn Rfoot to x-axis <14.> speed <72.>;
		turn Lfoot to x-axis <36.> speed <215.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [6.];
		move Rleg to y-axis [-1.] speed [0.];
		move Rfoot to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <6.> speed <25.>;
		turn Lleg to x-axis <13.> speed <344.>;
		turn Rleg to x-axis <-13.> speed <157.>;
		turn Rfoot to x-axis <6.> speed <136.>;
		turn Lfoot to x-axis <45.> speed <157.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [1.] speed [6.];
		move Rleg to y-axis [-0.] speed [0.];
		move Rfoot to y-axis [-1.] speed [0.];
		move Lfoot to y-axis [0.] speed [1.];
		turn hips to x-axis <4.> speed <25.>;
		turn Lleg to x-axis <-6.> speed <344.>;
		turn Rleg to x-axis <-4.> speed <157.>;
		turn Rfoot to x-axis <-1.> speed <136.>;
		turn Lfoot to x-axis <55.> speed <157.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [5.];
		move Rleg to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [1.] speed [1.];
		turn hips to x-axis <1.> speed <50.>;
		turn Lleg to x-axis <-21.> speed <253.>;
		turn Rleg to x-axis <7.> speed <197.>;
		turn Rfoot to x-axis <-9.> speed <131.>;
		turn Lfoot to x-axis <42.> speed <217.>;
		sleep 60;
	}
	if( Static_Var_2 )
	{
		move Lleg to y-axis [0.] speed [3.];
		move Rleg to y-axis [-0.] speed [0.];
		move Lfoot to y-axis [0.] speed [0.];
		turn hips to x-axis <-1.> speed <30.>;
		turn Lleg to x-axis <-37.> speed <152.>;
		turn Rleg to x-axis <19.> speed <118.>;
		turn Rfoot to x-axis <-17.> speed <79.>;
		turn Lfoot to x-axis <29.> speed <130.>;
		sleep 100;
	}
	if( Static_Var_2 )
	{
		move hips to z-axis [0.] speed [1.];
		move Lleg to y-axis [1.] speed [0.];
		move Rleg to y-axis [-1.] speed [0.];
		move Rfoot to y-axis [-0.] speed [0.];
		turn hips to x-axis <0.> speed <21.>;
		turn Lleg to x-axis <-33.> speed <39.>;
		turn Rleg to x-axis <21.> speed <24.>;
		turn Rfoot to x-axis <-10.> speed <66.>;
		turn Lfoot to x-axis <14.> speed <145.>;
		sleep 100;
	}
	sleep 100;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_2;
		aiming = Static_Var_3;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_4 = 1;
			if( justmoved )
			{
				move hips to y-axis [0.] speed [3.];
				move hips to z-axis [0.] speed [3.];
				move Lleg to y-axis [0.] speed [3.];
				move Rleg to y-axis [0.] speed [3.];
				move Rfoot to y-axis [0.] speed [3.];
				move Lfoot to y-axis [0.] speed [3.];
				turn hips to x-axis <0.> speed <150.>;
				turn torso to y-axis <0.> speed <150.>;
				turn Lleg to x-axis <0.> speed <150.>;
				turn Rleg to x-axis <0.> speed <150.>;
				turn Rfoot to x-axis <0.> speed <150.>;
				turn Lfoot to x-axis <0.> speed <150.>;
				justmoved = FALSE;
			}
		}
		sleep 100;
	}
}

Go()
{
	Static_Var_3 = 1;
	if( Static_Var_3 )
	{
		turn Lshoulder to x-axis <0.> now;
		turn Lshoulder to x-axis <-10.> speed <59.>;
		turn Rshoulder to x-axis <0.> now;
		turn Rshoulder to x-axis <-10.> speed <57.>;
		turn Rarm to x-axis <0.> now;
		turn Rarm to x-axis <-22.> speed <120.>;
		turn Larm to x-axis <0.> now;
		turn Larm to x-axis <-22.> speed <120.>;
		sleep 185;
	}
	if( Static_Var_3 )
	{
		turn Lshoulder to x-axis <-21.> speed <48.>;
		turn Rshoulder to x-axis <-21.> speed <47.>;
		turn Rarm to x-axis <-44.> speed <98.>;
		turn Larm to x-axis <-44.> speed <98.>;
		sleep 225;
	}
	if( Static_Var_3 )
	{
		turn Rarm to z-axis <33.> speed <145.>;
		turn rlathe to z-axis <-63.> speed <277.>;
		turn Larm to z-axis <-33.> speed <145.>;
		turn llathe to z-axis <62.> speed <272.>;
		sleep 230;
	}
	if( Static_Var_3 )
	{
		turn torso to x-axis <27.> speed <121.>;
		turn Rarm to z-axis <20.> speed <58.>;
		turn Larm to z-axis <-20.> speed <58.>;
		sleep 230;
	}
	sleep 10;
	turn torso to y-axis Static_Var_1 speed <160.>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.> speed <160.>;
	wait-for-turn torso around y-axis;
	if( Static_Var_3 )
	{
		turn torso to x-axis <28.> now;
		turn torso to x-axis <0.> speed <139.>;
		turn Lshoulder to x-axis <-22.> now;
		turn Rshoulder to x-axis <-21.> now;
		turn Rarm to x-axis <-44.> now;
		turn Rarm to z-axis <20.> now;
		turn Rarm to z-axis <33.> speed <66.>;
		turn rlathe to z-axis <-64.> now;
		turn Larm to x-axis <-44.> now;
		turn Larm to z-axis <-20.> now;
		turn Larm to z-axis <-33.> speed <66.>;
		turn llathe to z-axis <63.> now;
		sleep 200;
	}
	if( Static_Var_3 )
	{
		turn Rarm to z-axis <0.> speed <167.>;
		turn rlathe to z-axis <0.> speed <319.>;
		turn Larm to z-axis <0.> speed <167.>;
		turn llathe to z-axis <0.> speed <313.>;
		sleep 200;
	}
	if( Static_Var_3 )
	{
		turn Lshoulder to x-axis <-10.> speed <54.>;
		turn Rshoulder to x-axis <-10.> speed <53.>;
		turn Rarm to x-axis <-22.> speed <111.>;
		turn Larm to x-axis <-22.> speed <111.>;
		sleep 200;
	}
	if( Static_Var_3 )
	{
		turn Lshoulder to x-axis <0.> speed <54.>;
		turn Rshoulder to x-axis <0.> speed <53.>;
		turn Rarm to x-axis <0.> speed <111.>;
		turn Larm to x-axis <0.> speed <111.>;
		sleep 200;
	}
	sleep 10;
	Static_Var_3 = 0;
}

InitState()
{
	Static_Var_6 = 1;
	Static_Var_7 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_7 )
	{
		Static_Var_6 = requestedstate;
		return (0);
	}
	Static_Var_7 = 1;
	currentstate = Static_Var_6;
	Static_Var_6 = requestedstate;
	while( Static_Var_6 != currentstate )
	{
		if( Static_Var_6 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_6 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_7 = 0;
}

Create()
{
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script MotionControl();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	Static_Var_2 = 1;
}

StopMoving()
{
	Static_Var_2 = 0;
}

QueryNanoPiece(piecenum)
{
	piecenum = Static_Var_5;
	Static_Var_5 = !Static_Var_5;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode head type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode hips type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode Larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode Lfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode llathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode llathepoint type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode Lleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode Lshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode Rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode Rfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rlathe type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rlathepoint type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode Rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP3;
	explode Rshoulder type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode shield1 type BITMAPONLY | BITMAP5;
	explode shield2 type BITMAPONLY | BITMAP1;
	explode shield3 type BITMAPONLY | BITMAP2;
	explode shield4 type BITMAPONLY | BITMAP3;
	explode torso type BITMAPONLY | BITMAP4;
}
