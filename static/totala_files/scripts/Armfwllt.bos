#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, gun, barrel, flare;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from gun;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	hide flare;
	cache base;
	dont-cache gun;
	dont-cache barrel;
	dont-cache flare;
	dont-cache gun;
	dont-shade barrel;
	dont-shade flare;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script SmokeUnit();
	set ARMORED to 1;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn gun to y-axis heading speed <300.>;
	turn gun to x-axis <0.> - pitch speed <200.>;
	wait-for-turn gun around y-axis;
	wait-for-turn gun around x-axis;
	return (1);
}

FirePrimary()
{
	show flare;
	sleep 150;
	hide flare;
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	corpsetype = 1;
	explode base type BITMAPONLY | BITMAP3;
	explode gun type SHATTER | BITMAP4;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
