#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, Left_Back_Leg, Left_Back_Foot, Right_Back_Leg, Righ_Back_Foot, Left_Front_Leg, Left_Front_Foot, Right_Front_Leg,
       Right_Front_Foot, Hump, Tail;

static-var  Static_Var_1;


MotionControl()
{
	while( TRUE )
	{
		if( Static_Var_1 )
		{
			turn Left_Back_Leg to y-axis <30.> speed <180.>;
			turn Right_Back_Leg to y-axis <30.> speed <180.>;
			turn Left_Front_Leg to y-axis <-30.> speed <180.>;
			turn Right_Front_Leg to y-axis <-30.> speed <180.>;
			turn Tail to y-axis <-10.> speed <100.>;
			wait-for-turn Left_Back_Leg around y-axis;
			turn Left_Back_Leg to y-axis <-30.> speed <180.>;
			turn Right_Back_Leg to y-axis <-30.> speed <180.>;
			turn Left_Front_Leg to y-axis <30.> speed <180.>;
			turn Right_Front_Leg to y-axis <30.> speed <180.>;
			turn Tail to y-axis <10.> speed <100.>;
			wait-for-turn Left_Back_Leg around y-axis;
		}
		if( !Static_Var_1 )
		{
			sleep 100;
		}
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	Static_Var_1 = 0;
	start-script MotionControl();
}

StartMoving()
{
	Static_Var_1 = 1;
	move Tail to z-axis [0.] speed [50.];
	wait-for-move Tail along z-axis;
}

StopMoving()
{
	Static_Var_1 = 0;
	turn Left_Back_Leg to y-axis <0.> speed <30.>;
	turn Right_Back_Leg to y-axis <0.> speed <30.>;
	turn Left_Front_Leg to y-axis <0.> speed <30.>;
	turn Right_Front_Leg to y-axis <0.> speed <30.>;
	turn Tail to y-axis <10.> speed <30.>;
	move Tail to z-axis [3.] speed [3.];
	wait-for-move Tail along z-axis;
	sleep 150;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode Left_Back_Leg type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode Left_Back_Foot type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode Right_Back_Leg type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode Righ_Back_Foot type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode Left_Front_Leg type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode Left_Front_Foot type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode Right_Front_Foot type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode Right_Front_Leg type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode Tail type FALL | EXPLODE_ON_HIT | BITMAP2;
	explode Hump type FALL | EXPLODE_ON_HIT | BITMAP2;
}

Go()
{
}

Stop()
{
}
