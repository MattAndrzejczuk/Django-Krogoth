#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, lthigh, rthigh, rleg, rfoot, lleg, lfoot,
       tongend, ltong, rtong, tongpivot;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;


walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <-67.> now;
		turn rthigh to x-axis <4.> now;
		turn rleg to x-axis <69.> now;
		turn rfoot to x-axis <-37.> now;
		turn lleg to x-axis <68.> now;
		turn lfoot to x-axis <-1.> now;
		sleep 40;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-60.> now;
		turn rthigh to x-axis <-5.> now;
		turn rleg to x-axis <88.> now;
		turn rfoot to x-axis <-27.> now;
		turn lleg to x-axis <61.> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-52.> now;
		turn rthigh to x-axis <-33.> now;
		turn rleg to x-axis <119.> now;
		turn lleg to x-axis <56.> now;
		turn lfoot to x-axis <-5.> now;
		sleep 80;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-45.> now;
		turn rthigh to x-axis <-41.> now;
		turn lleg to x-axis <52.> now;
		turn lfoot to x-axis <-7.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-38.> now;
		turn rthigh to x-axis <-45.> now;
		turn rleg to x-axis <98.> now;
		turn rfoot to x-axis <-34.> now;
		turn lleg to x-axis <54.> now;
		turn lfoot to x-axis <-14.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-30.> now;
		turn rthigh to x-axis <-54.> now;
		turn rleg to x-axis <62.> now;
		turn lleg to x-axis <55.> now;
		turn lfoot to x-axis <-23.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-11.> now;
		turn rthigh to x-axis <-86.> now;
		turn rleg to x-axis <81.> now;
		turn lleg to x-axis <35.> now;
		turn lfoot to x-axis <-24.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-7.> now;
		turn rthigh to x-axis <-82.> now;
		turn rleg to x-axis <46.> now;
		turn lleg to x-axis <70.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <6.> now;
		turn rthigh to x-axis <-66.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <23.> now;
		turn lleg to x-axis <68.> now;
		turn lfoot to x-axis <-35.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-3.> now;
		turn rthigh to x-axis <-59.> now;
		turn rfoot to x-axis <15.> now;
		turn lleg to x-axis <91.> now;
		sleep 40;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-26.> now;
		turn rthigh to x-axis <-52.> now;
		turn rfoot to x-axis <9.> now;
		turn lleg to x-axis <113.> now;
		sleep 80;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-50.> now;
		turn rthigh to x-axis <-36.> now;
		turn rfoot to x-axis <-7.> now;
		turn lleg to x-axis <122.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-56.> now;
		turn rthigh to x-axis <-22.> now;
		turn rleg to x-axis <39.> now;
		turn rfoot to x-axis <-13.> now;
		turn lleg to x-axis <110.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-69.> now;
		turn rthigh to x-axis <-16.> now;
		turn rleg to x-axis <41.> now;
		turn rfoot to x-axis <-21.> now;
		turn lleg to x-axis <99.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-80.> now;
		turn rthigh to x-axis <-7.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <-30.> now;
		turn lleg to x-axis <80.> now;
		sleep 60;
	}
	move pelvis to y-axis [-0.] now;
	turn lthigh to x-axis <-78.> now;
	turn rthigh to x-axis <-1.> now;
	turn rleg to x-axis <60.> now;
	turn rfoot to x-axis <-33.> now;
	turn lleg to x-axis <54.> now;
	sleep 60;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <-67.> now;
		turn rthigh to x-axis <4.> now;
		turn rleg to x-axis <69.> now;
		turn rfoot to x-axis <-37.> now;
		turn lleg to x-axis <68.> now;
		turn lfoot to x-axis <-1.> now;
		sleep 40;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-60.> now;
		turn rthigh to x-axis <-5.> now;
		turn rleg to x-axis <88.> now;
		turn rfoot to x-axis <-27.> now;
		turn lleg to x-axis <61.> now;
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-52.> now;
		turn rthigh to x-axis <-33.> now;
		turn rleg to x-axis <119.> now;
		turn lleg to x-axis <56.> now;
		turn lfoot to x-axis <-5.> now;
		sleep 80;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-45.> now;
		turn rthigh to x-axis <-41.> now;
		turn lleg to x-axis <52.> now;
		turn lfoot to x-axis <-7.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-38.> now;
		turn rthigh to x-axis <-45.> now;
		turn rleg to x-axis <98.> now;
		turn rfoot to x-axis <-34.> now;
		turn lleg to x-axis <54.> now;
		turn lfoot to x-axis <-14.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-30.> now;
		turn rthigh to x-axis <-54.> now;
		turn rleg to x-axis <62.> now;
		turn lleg to x-axis <55.> now;
		turn lfoot to x-axis <-23.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-11.> now;
		turn rthigh to x-axis <-86.> now;
		turn rleg to x-axis <81.> now;
		turn lleg to x-axis <35.> now;
		turn lfoot to x-axis <-24.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-7.> now;
		turn rthigh to x-axis <-82.> now;
		turn rleg to x-axis <46.> now;
		turn lleg to x-axis <70.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-1.] now;
		turn lthigh to x-axis <6.> now;
		turn rthigh to x-axis <-66.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <23.> now;
		turn lleg to x-axis <68.> now;
		turn lfoot to x-axis <-35.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-3.> now;
		turn rthigh to x-axis <-59.> now;
		turn rfoot to x-axis <15.> now;
		turn lleg to x-axis <91.> now;
		sleep 40;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		sleep 30;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-26.> now;
		turn rthigh to x-axis <-52.> now;
		turn rfoot to x-axis <9.> now;
		turn lleg to x-axis <113.> now;
		sleep 80;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-50.> now;
		turn rthigh to x-axis <-36.> now;
		turn rfoot to x-axis <-7.> now;
		turn lleg to x-axis <122.> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.] now;
		turn lthigh to x-axis <-56.> now;
		turn rthigh to x-axis <-22.> now;
		turn rleg to x-axis <39.> now;
		turn rfoot to x-axis <-13.> now;
		turn lleg to x-axis <110.> now;
		turn lfoot to x-axis <-38.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-69.> now;
		turn rthigh to x-axis <-16.> now;
		turn rleg to x-axis <41.> now;
		turn rfoot to x-axis <-21.> now;
		turn lleg to x-axis <99.> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.] now;
		turn lthigh to x-axis <-80.> now;
		turn rthigh to x-axis <-7.> now;
		turn rleg to x-axis <43.> now;
		turn rfoot to x-axis <-30.> now;
		turn lleg to x-axis <80.> now;
		sleep 60;
	}
	move pelvis to y-axis [-0.] now;
	turn lthigh to x-axis <-78.> now;
	turn rthigh to x-axis <-1.> now;
	turn rleg to x-axis <60.> now;
	turn rfoot to x-axis <-33.> now;
	turn lleg to x-axis <54.> now;
	sleep 60;
}

open()
{
	if( TRUE )
	{
		move tongend to y-axis [0.] now;
		move tongend to y-axis [-3.] speed [3.];
		move ltong to y-axis [0.] now;
		move ltong to y-axis [-3.] speed [3.];
		move rtong to y-axis [0.] now;
		move rtong to y-axis [-3.] speed [3.];
		turn ltong to y-axis <0.> now;
		turn ltong to y-axis <0.> speed <0.>;
		turn rtong to y-axis <0.> now;
		turn rtong to y-axis <0.> speed <0.>;
		sleep 751;
	}
	if( TRUE )
	{
		turn ltong to y-axis <-119.> speed <157.>;
		turn rtong to y-axis <116.> speed <154.>;
		sleep 758;
	}
	sleep 17;
}

close()
{
	if( TRUE )
	{
		move tongend to y-axis [-3.] now;
		move ltong to y-axis [-3.] now;
		move rtong to y-axis [-3.] now;
		turn ltong to y-axis <-119.> now;
		turn ltong to y-axis <0.> speed <174.>;
		turn rtong to y-axis <117.> now;
		turn rtong to y-axis <0.> - <0.> speed <170.>;
		sleep 683;
	}
	if( TRUE )
	{
		move tongend to y-axis [0.] speed [4.];
		move ltong to y-axis [0.] speed [4.];
		move rtong to y-axis [0.] speed [4.];
		turn ltong to y-axis <0.> speed <0.>;
		turn rtong to y-axis <0.> speed <0.>;
		sleep 689;
	}
	sleep 21;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = Static_Var_1;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rthigh to x-axis <0.> speed <200.>;
				turn rleg to x-axis <0.> speed <200.>;
				turn rfoot to x-axis <0.> speed <200.>;
				turn lthigh to x-axis <0.> speed <200.>;
				turn lleg to x-axis <0.> speed <200.>;
				turn lfoot to x-axis <0.> speed <200.>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
	Static_Var_5 = 0;
}

Activate()
{
	if( Static_Var_5 )
	{
		set ACTIVATION to 0;
		return (0);
	}
	signal 2;
	set-signal-mask 2;
	call-script open();
	spin tongpivot around z-axis speed <100.>;
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	turn tongpivot to z-axis <0.> speed <-100.>;
	wait-for-turn tongpivot around z-axis;
	call-script close();
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	if( get ACTIVATION )
	{
		Static_Var_5 = 1;
	}
	if( Static_Var_5 )
	{
		signal 4;
		set-signal-mask 4;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_5 = 0;
		set ACTIVATION to 100;
	}
}

StartMoving()
{
	Static_Var_1 = 1;
}

StopMoving()
{
	Static_Var_1 = 0;
}

RestoreAfterDelay()
{
	sleep Static_Var_4;
	Static_Var_2 = 0;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type BITMAPONLY | BITMAP1;
		explode tongend type BITMAPONLY | BITMAP1;
		explode tongpivot type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type SHATTER | BITMAP1;
		explode pelvis type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP1;
		explode rleg type FALL | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type FALL | BITMAP1;
		explode tongend type FALL | BITMAP1;
		explode tongpivot type FALL | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode ltong type SHATTER | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode rtong type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode tongend type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode tongpivot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type BITMAPONLY | BITMAP1;
	explode ltong type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type BITMAPONLY | BITMAP1;
	explode rtong type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode tongend type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode tongpivot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type BITMAPONLY | BITMAP1;
}
