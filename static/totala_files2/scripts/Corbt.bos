#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, patch1, patch2, turret, barrel, flarea, flareb, flarec,
       flared, exploder, smoky1, smoky2, glowy1, glowy2;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flarea;
	hide flareb;
	hide flarec;
	hide flared;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	set-signal-mask 2;
	sleep 20000;
	turn turret to y-axis <0.> speed <20.>;
}

BelchSmoke()
{
	dont-cache glowy1;
	dont-cache glowy2;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 170;
	emit-sfx 256 | 1 from smoky2;
	sleep 60;
	emit-sfx 256 | 1 from smoky1;
	sleep 230;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 170;
	emit-sfx 256 | 1 from smoky2;
	sleep 60;
	emit-sfx 256 | 1 from smoky1;
	sleep 230;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 170;
	emit-sfx 256 | 1 from smoky2;
	sleep 60;
	emit-sfx 256 | 1 from smoky1;
	sleep 230;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 170;
	emit-sfx 256 | 1 from smoky2;
	sleep 60;
	emit-sfx 256 | 1 from smoky1;
	sleep 230;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 2 from smoky1;
	emit-sfx 256 | 1 from smoky2;
	sleep 170;
	emit-sfx 256 | 1 from smoky2;
	sleep 60;
	emit-sfx 256 | 1 from smoky1;
	sleep 230;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	emit-sfx 256 | 2 from smoky2;
	sleep 230;
	emit-sfx 256 | 1 from smoky2;
	emit-sfx 256 | 2 from smoky1;
	sleep 115;
	emit-sfx 256 | 1 from smoky1;
	cache glowy1;
	cache glowy2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	piecenum = flarea;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <25.>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-3.] speed [100.];
	sleep 20;
	show flarea;
	sleep 70;
	show flareb;
	explode exploder type BITMAP5;
	emit-sfx 256 | 2 from flarea;
	sleep 70;
	emit-sfx 256 | 1 from flareb;
	sleep 80;
	show flared;
	emit-sfx 256 | 1 from flarea;
	emit-sfx 0 from flarea;
	emit-sfx 256 | 2 from flarec;
	sleep 70;
	hide flarea;
	emit-sfx 0 from flared;
	emit-sfx 256 | 1 from flareb;
	emit-sfx 256 | 2 from flarec;
	sleep 80;
	hide flareb;
	emit-sfx 256 | 1 from flared;
	sleep 50;
	hide flarec;
	sleep 50;
	emit-sfx 0 from flared;
	hide flared;
	move barrel to z-axis [0.] speed [1.];
	start-script BelchSmoke();
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode patch1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode patch2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode patch1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode patch2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode patch1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode patch2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
