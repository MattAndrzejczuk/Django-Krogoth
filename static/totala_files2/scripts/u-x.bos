piece base, turret, sleeve1, barrel1, sleeve2, barrel2, flare1, flare2, basex, turretx;

Static-Var gun_1, firecheck;  

#include "exptype.h"
#include "hitweap.h"
#include "rockunit.h"
#define SIG_AIM1	2		


SmokeUnit( healthpercent, sleeptime, smoketype )
	{
	var Func_Var_1;
	while( get BUILD_PERCENT_LEFT )
		{
		sleep 100;
		}
	while( TRUE )
		{
		healthpercent = get HEALTH;
		if( healthpercent < 60 )
			{
			smoketype = 256 | 2;
			if( RAND( 1, 60 ) < healthpercent )
				{
				smoketype = 256 | 1;
				}
			Func_Var_1 = RAND( 1, 3 );
			if( Func_Var_1 == 1 )
				{
				emit-sfx smoketype from base;
				}
			if( Func_Var_1 == 2 )
				{
				emit-sfx smoketype from sleeve1;
				}
			if( Func_Var_1 == 3 )
				{
				emit-sfx smoketype from flare2;
				}
			}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
			{
			sleeptime = 200;
			}
		sleep sleeptime;
		}
	}
	
Monitor()
	{
	var lastcheck, check;
	lastcheck = 0;
	check = 0;
	while( TRUE )
		{
		sleep 100; 
		check = check + 1; 
		if (firecheck != lastcheck) 
			{
			if (check < 0.1)
				{
				show basex; 
				show turretx;
				set ARMORED to TRUE;
				return 0; 
				}
			check = 0; 
			}
		lastcheck = firecheck; 
		}
	}

Create()
	{
	firecheck = 0;
	gun_1 = TRUE;
	dont-cache turretx;
	hide basex;
	hide turretx;
	hide flare1;
	hide flare2;
	start-script Monitor();
	start-script SmokeUnit();
	}
	
RestorePosition()
	{
	sleep 3500;
	turn turret to y-axis <0> speed <80>;
	turn sleeve1 to x-axis <0> speed <70>;
	turn sleeve2 to x-axis <0> speed <70>;
	return 0;
	}
	
SweetSpot( piecenum )
	{
	piecenum = base;
	}
	
QueryPrimary( piecenum )
	{
	if( gun_1 )
		{
		piecenum = flare1;
		}
	if( !gun_1 )
		{
		piecenum = flare2;
		}
	}
	
AimFromPrimary( piecenum )
	{
	piecenum = turret;
	}
	
AimPrimary( heading, pitch )
	{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn turret to y-axis heading speed <80>;
	turn sleeve1 to x-axis ( 0 - pitch ) speed <70>;
	turn sleeve2 to x-axis ( 0 - pitch ) speed <70>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestorePosition();
	return 1;
	}
	
FirePrimary()
	{
	firecheck = !firecheck; 
	if( gun_1 )
		{
		gun_1 = FALSE;
		show flare1;
		move barrel1 to z-axis [-3] speed [200];
		sleep 150;
		hide flare1;
		wait-for-move barrel1 along z-axis;
		move barrel1 to z-axis [0] speed [10];
		return 0;
		}
	if( !gun_1 )
		{
		gun_1 = TRUE;
		show flare2;
		move barrel2 to z-axis [-3] speed [200];
		sleep 150;
		hide flare2;
		wait-for-move barrel2 along z-axis;
		move barrel2 to z-axis [0] speed [10];
		return 0;
		}
	}
	
Killed(severity, corpsetype)
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode turret type	BITMAPONLY | BITMAP1;
		explode sleeve1 type	BITMAPONLY | BITMAP1;
		explode barrel1 type	BITMAPONLY | BITMAP1;
		explode flare1 type	BITMAPONLY | BITMAP1;
		explode sleeve2 type	BITMAPONLY | BITMAP1;
		explode barrel2 type	BITMAPONLY | BITMAP1;
		explode flare2 type	BITMAPONLY | BITMAP1;
		return(0);
		}
	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	SHATTER | BITMAP4;
		explode turret type	SHATTER | BITMAP4;
		explode sleeve1 type	SHATTER | BITMAP4;
		explode barrel1 type	SHATTER | BITMAP4;
		explode flare1 type	SHATTER | BITMAP4;
		explode sleeve2 type	SHATTER | BITMAP4;
		explode barrel2 type	SHATTER | BITMAP4;
		explode flare2 type	SHATTER | BITMAP4;
		return(0);
		}
	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode sleeve1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode sleeve2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return(0);
		}
	corpsetype = 3;
	explode base type	SHATTER | BITMAP4;
	explode turret type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return(0);
	}


		
		
				
			