piece base, rwing, lwing, rbarrel, rflare, lbarrel, lflare, thrust1, thrust2;

static-var bMoving, bRolling, gun_1;
#include "exptype.h"


SmokeUnit(healthpercent, sleeptime, smoketype)
	{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
		{
		sleep 500;
		}
	while( TRUE )
		{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
			{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
				{
				smoketype = 256 | 1;
				}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
				{
				emit-sfx smoketype from base;
				}
			if( Func_Var_4 == 2 )
				{
				emit-sfx smoketype from thrust1;
				}
			if( Func_Var_4 == 3 )
				{
				emit-sfx smoketype from base;
				}
			}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
			{
			sleeptime = 200;
			}
		sleep sleeptime;
		}
	}
	
MoveRate2()
	{
	if( rand( 1, 10 ) == 1 && !bRolling )
		{
		bRolling = TRUE;
		turn base to z-axis <240> speed <120>;
		wait-for-turn base around z-axis;
		turn base to z-axis <120> speed <180>;
		wait-for-turn base around z-axis;
		turn base to z-axis <0> speed <120>;
		bRolling = FALSE;
		}
	}

Create()
	{
	gun_1 = TRUE;
	bRolling = FALSE;
	bMoving = FALSE;
	hide rflare;
	hide lflare;
	start-script SmokeUnit();
	}
	
StartMoving()
	{
	bMoving = TRUE;
	while( bMoving )
		{
		emit-sfx 0 from thrust1;
		sleep 100;
		emit-sfx 0 from thrust2;
		sleep 100;
		}
	}
	
StopMoving()
	{
	bMoving = FALSE;
	}
	
Activate()
	{
	turn lwing to z-axis <125> speed <75>;
	turn rwing to z-axis <-125> speed <75>;
	}

Deactivate()
	{
	turn lwing to z-axis <0> speed <75>;
	turn rwing to z-axis <0> speed <75>;
	}

SweetSpot (piecenum)
	{
	piecenum = base;
	}

QueryPrimary (piecenum)
	{
	if( gun_1 )
		{
		piecenum = rflare;
		}
	if( !gun_1 )
		{
		piecenum = lflare;
		}
	}

AimFromPrimary (piecenum)
	{
	piecenum = base;
	}

FirePrimary()
	{
	if( gun_1 )
		{
		gun_1 = FALSE;
		move rbarrel to z-axis [-2.2] speed [200];
		show rflare;
		sleep 150;
		hide rflare;
		wait-for-move rbarrel along z-axis;
		move rbarrel to z-axis [0] speed [12];
		return 0;
		}
	if( !gun_1 )
		{
		gun_1 = TRUE;
		move lbarrel to z-axis [-2.2] speed [200];
		show lflare;
		sleep 150;
		hide lflare;
		wait-for-move lbarrel along z-axis;
		move lbarrel to z-axis [0] speed [12];
		return 0;
		}
	}

Killed(severity, corpsetype)
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode rwing type	BITMAPONLY | BITMAP1;
		explode lwing type	BITMAPONLY | BITMAP1;
		explode rbarrel type	BITMAPONLY | BITMAP1;
		explode rflare type	BITMAPONLY | BITMAP1;
		explode lbarrel type	BITMAPONLY | BITMAP1;
		explode lflare type	BITMAPONLY | BITMAP1;
		explode thrust1 type	BITMAPONLY | BITMAP1;
		explode thrust2 type	BITMAPONLY | BITMAP1;
		return(0);
		}
	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	SHATTER | BITMAP4;
		explode rwing type	SHATTER | BITMAP4;
		explode lwing type	SHATTER | BITMAP4;
		explode rbarrel type	SHATTER | BITMAP4;
		explode rflare type	SHATTER | BITMAP4;
		explode lbarrel type	SHATTER | BITMAP4;
		explode lflare type	SHATTER | BITMAP4;
		explode thrust1 type	SHATTER | BITMAP4;
		explode thrust2 type	SHATTER | BITMAP4;
		return(0);
		}
	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rbarrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rflare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lbarrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lflare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode thrust1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode thrust2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return(0);
		}
	corpsetype = 3;
	explode base type	SHATTER | BITMAP4;
	explode rwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rbarrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rflare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lbarrel type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lflare type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode thrust1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode thrust2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return(0);
	}
