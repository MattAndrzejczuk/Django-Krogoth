piece base, rwing, lwing, tail1, tail2, tail3, tail4, wake1, wake2, wake3;

static-var InitPosit;
#define SIG_WAKE	2
#include "exptype.h"
#include "SFXtype.h"


SmokeUnit(healthpercent, sleeptime, smoketype)
	{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
		{
		sleep 500;
		}
	while( TRUE )
		{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
			{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
				{
				smoketype = 256 | 1;
				}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 || 3 )
				{
				emit-sfx smoketype from base;
				}
			if( Func_Var_4 == 2 )
				{
				emit-sfx smoketype from tail4;
				}
			}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
			{
			sleeptime = 200;
			}
		sleep sleeptime;
		}
	}

TurnBank()
	{
	var StartPosit, CurrentPosit, LastPosit, xzdiff, ShortDiff, NewAngle, OldAngle, NewDist, OldDist, ShortAngle, Test, TurnAngle;
	while( get BUILD_PERCENT_LEFT )
		{
		StartPosit = InitPosit;
		LastPosit = InitPosit;
		OldAngle = 180;
		OldDist = 0;
		while( TRUE )
			{
			Test = TRUE;
			sleep 500;
			CurrentPosit = get PIECE_XZ (base);
			if( LastPosit == CurrentPosit )
				{
				turn base to z-axis <0> speed <80>;
				}
			if (LastPosit != CurrentPosit)
				{
				ShortDiff = CurrentPosit - LastPosit;
				ShortAngle = get XZ_ATAN(ShortDiff);
				TurnAngle = ShortAngle + 180;
				TurnAngle = TurnAngle * 2.5;
				TurnAngle = 0 - TurnAngle;
				turn base to z-axis TurnAngle speed <100>;
				}
			LastPosit = CurrentPosit;
			}
		}
	}
	
Create()
	{
	InitPosit = get PIECE_XZ (base);
	start-script SmokeUnit();
	start-script TurnBank();
	}
	
StartMoving()
	{
	signal SIG_WAKE;
	set-signal-mask SIG_WAKE;
	turn rwing to y-axis <0> speed <35>;
	turn lwing to y-axis <0> speed <35>;
	while( TRUE )
		{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;//only small bubbles!
		emit-sfx SFXTYPE_WAKE1 from wake3;
		turn tail1 to x-axis <-40> speed <75>;
		turn tail2 to x-axis <80> speed <75>;
		sleep 250;
		turn tail3 to x-axis <-20> speed <75>;
		turn tail4 to x-axis <-20> speed <75>;
		sleep 250;
		turn tail1 to x-axis <0> speed <75>;
		turn tail2 to x-axis <20> speed <75>;
		sleep 250;
		turn tail3 to x-axis <-40> speed <75>;
		turn tail4 to x-axis <0> speed <75>;
		sleep 250;
		turn tail1 to x-axis <0> speed <75>;
		turn tail2 to x-axis <0> speed <75>;
		sleep 250;
		turn tail3 to x-axis <20> speed <75>;
		turn tail4 to x-axis <-40> speed <75>;
		}
	}

StopMoving()
	{
	signal SIG_WAKE;
	turn rwing to y-axis <-20> speed <35>;
	turn lwing to y-axis <20> speed <35>;
	turn tail1 to x-axis <-30> speed <20>;
	turn tail2 to x-axis <20> speed <17.5>;
	sleep 750;
	turn tail3 to x-axis <-10> speed <20>;
	turn tail4 to x-axis <-30> speed <17.5>;
	}

SweetSpot (piecenum)
	{
	piecenum = base;
	}

Killed(severity, corpsetype)
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode base type	BITMAPONLY | BITMAP1;
		explode rwing type	BITMAPONLY | BITMAP1;
		explode lwing type	BITMAPONLY | BITMAP1;
		explode tail1 type	BITMAPONLY | BITMAP1;
		explode tail2 type	BITMAPONLY | BITMAP1;
		explode tail3 type	BITMAPONLY | BITMAP1;
		explode tail4 type	BITMAPONLY | BITMAP1;
		return(0);
		}
	if (severity <= 50)
		{
		corpsetype = 2;
		explode base type	SHATTER | BITMAP4;
		explode rwing type	SHATTER | BITMAP4;
		explode lwing type	SHATTER | BITMAP4;
		explode tail1 type	SHATTER | BITMAP4;
		explode tail2 type	SHATTER | BITMAP4;
		explode tail3 type	SHATTER | BITMAP4;
		explode tail4 type	SHATTER | BITMAP4;
		return(0);
		}
	if (severity <= 99)
		{
		corpsetype = 3;
		explode base type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode tail1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode tail2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode tail3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode tail4 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return(0);
		}
	corpsetype = 3;
	explode base type	SHATTER | BITMAP4;
	explode rwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lwing type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode tail1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode tail2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode tail3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode tail4 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return(0);
	}
