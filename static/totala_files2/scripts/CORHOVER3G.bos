//define TA
piece base ,body ,turret ,sleeves ,turret2 ,sleeves2 ,barrel1 ,barrel2 ,barrel3 ,flare1 ,flare2 ,flare3 ,wakes ,wake1 ,wake2 ,wake3 ,wake4 ,wake5 ,wake6 ,wake7 ,wake8 ;
static-var bLevel_0 ,restore_delay ,gun ;
	
#define SMOKEPIECE1	body
#define SMOKEPIECE2	turret
#define SMOKEPIECE3	barrel1
#define SIG_NUM1	2
#define SIG_NUM2	4
#DEFINE SIG_NUM3	8
#include "smokeunit.h"
#include "exptype.h"

#include "Hitweap.h"
StartMoving()
		{
			SIGNAL SIG_NUM1;
			SET-SIGNAL-MASK SIG_NUM1;
			var fl, flb;
			fl=3; //Wake2;
			flb=4; //ReverseWake1;
			While (TRUE)
			{
			if ( bLevel_0 ==1 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==2 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			if ( bLevel_0 ==3 )
				{
				EMIT-SFX fl FROM wake1;
				EMIT-SFX fl FROM wake2;
				EMIT-SFX fl FROM wake3;
				EMIT-SFX fl FROM wake4;
				EMIT-SFX fl FROM wake5;
				EMIT-SFX fl FROM wake6;
				EMIT-SFX fl FROM wake7;
				EMIT-SFX fl FROM wake8;
				EMIT-SFX flb FROM wake1;
				EMIT-SFX flb FROM wake2;
				EMIT-SFX flb FROM wake3;
				EMIT-SFX flb FROM wake4;
				EMIT-SFX flb FROM wake5;
				EMIT-SFX flb FROM wake6;
				EMIT-SFX flb FROM wake7;
				EMIT-SFX flb FROM wake8;
				}
			SLEEP 300;
			}
		}
StopMoving()
	{
	SIGNAL SIG_NUM1;
	}
setSFXoccupy(level)
	{
		bLevel_0 = level;
	}
#include "Rockunit.h"
Create()
	{
		HIDE flare1;
		HIDE flare2;
		gun=1;
		restore_delay = 3000;
		START-SCRIPT SmokeUnit();
	}
SetMaxReloadTime(time)
	{
		restore_delay = time * 2 ;
	}
RestoreAfterDelay()
	{
		SLEEP restore_delay;
		TURN turret to y-axis <0> SPEED <90>;
		TURN sleeves to x-axis <0> SPEED <50>;
	}
RestoreAfterDelay2()
	{
    	SLEEP restore_delay;
    	TURN turret2 to y-axis <0> SPEED <50>;
    	TURN sleeves2 to x-axis <0> SPEED <35>;
	}
AimPrimary(heading,pitch)
	{
		SIGNAL SIG_NUM2;
		SET-SIGNAL-MASK SIG_NUM2;
		TURN turret to y-axis heading SPEED <170>;
		TURN sleeves to x-axis (0 - pitch) SPEED <80>;
		WAIT-FOR-TURN turret around y-axis;
		WAIT-FOR-TURN sleeves around x-axis;
		START-SCRIPT RestoreAfterDelay();
		RETURN ( TRUE );
	}
FirePrimary()
	{
	if (gun == 1)
		{
		SHOW flare1;
		MOVE barrel1 to z-axis [-2] SPEED [500];
		SLEEP 150;
		HIDE flare1;
		WAIT-FOR-MOVE barrel1 along z-axis;
		MOVE barrel1 to z-axis [0] SPEED [3];
		}
	if (gun == 2)
		{
		SHOW flare2;
		MOVE barrel2 to z-axis [-2] SPEED [500];
		SLEEP 150;
		HIDE flare2;
		WAIT-FOR-MOVE barrel2 along z-axis;
		MOVE barrel2 to z-axis [0] SPEED [3];
		}
	gun=gun+1;
	if (gun == 3)
		{
		gun=1;
		}
	}
AimFromPrimary(piecenum)
	{
		piecenum = turret;
	}
QueryPrimary(piecenum)
	{
	if (gun == 1)
		{
		piecenum = flare1;
		}
	if (gun == 2)
		{
		piecenum = flare2;
		}
	}
AimSecondary(heading,pitch)
	{
	SIGNAL SIG_NUM3;
    	SET-SIGNAL-MASK SIG_NUM3;
	While (heading > <90> and heading < <270> )
		{
		SLEEP 150;
		}
    	TURN turret2 to y-axis heading SPEED <80>;
    	TURN sleeves2 to x-axis (0-pitch) SPEED <15>;
    	WAIT-FOR-TURN turret2 around y-axis;
    	WAIT-FOR-TURN sleeves2 around x-axis;
    	START-SCRIPT RestoreAfterDelay2();
    	RETURN ( TRUE );
   	}

FireSecondary()
  	{
	MOVE barrel3 to z-axis [-0.5] SPEED [500];
	WAIT-FOR-MOVE barrel1 along z-axis;
	MOVE barrel3 to z-axis [0] SPEED [3];
	SHOW flare3;
	SLEEP 150;
	HIDE flare3;
   	}

QuerySecondary(piecenum)
  	{
	piecenum=flare3;
	}

AimFromSecondary(piecenum)
  	{ 
	piecenum=turret2;
   	}

SweetSpot(piecenum)
	{
		piecenum = body;
	}
Killed(severity,corpsetype)
	{
		HIDE flare1;
		HIDE flare2;
		IF (severity <= 25 )
			{
			corpsetype = 1 ;
			EXPLODE  barrel1 type  	BITMAPONLY | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  sleeves type  	BITMAPONLY | BITMAP3;
			EXPLODE  turret type  	BITMAPONLY | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 50 )
			{
			corpsetype = 2 ;
			EXPLODE  barrel2 type  	FALL | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  sleeves type  	FALL | BITMAP3;
			EXPLODE  turret type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		IF (severity <= 99 )
			{
			corpsetype = 3 ;
			EXPLODE  barrel1 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
			EXPLODE  body type  	BITMAPONLY | BITMAP2;
			EXPLODE  sleeves type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
			EXPLODE  turret type  	SHATTER | BITMAP4;
			RETURN ( 0 );
			}
		corpsetype = 3 ;
		EXPLODE  barrel2 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		EXPLODE  body type  	SHATTER | EXPLODE_ON_HIT | BITMAP2;
		EXPLODE  sleeves type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
		EXPLODE  turret type  	SHATTER | EXPLODE_ON_HIT | BITMAP4;
		EXPLODE  barrel1 type  	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	}
